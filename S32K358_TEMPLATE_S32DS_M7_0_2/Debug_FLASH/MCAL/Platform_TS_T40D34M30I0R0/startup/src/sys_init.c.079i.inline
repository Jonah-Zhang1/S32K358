IPA function summary for EUnit_GetCoreID/15 inlinable
  global time:     13.000000
  self size:       5
  global size:     5
  min size:       2
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Sys_GetCoreID/19 function body not available
      freq:1.00 loop depth: 0 size: 2 time: 11

IPA function summary for sys_stop/14 inlinable
  global time:     12.000000
  self size:       4
  global size:     4
  min size:       1
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    sys_halt/13 function not considered for inlining
      freq:1.00 loop depth: 0 size: 1 time: 10 callee size: 2 stack: 0

IPA function summary for sys_halt/13 inlinable
  global time:     3.000000
  self size:       4
  global size:     4
  min size:       1
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for sys_init/12 inlinable
  global time:     101.000000
  self size:       39
  global size:     39
  min size:       36
  self stack:      4
  global stack:    4
    size:22.000000, time:22.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Init_MC_CGM/9 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size:239 stack: 0
    Init_PMC/7 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size:11 stack: 8
    Init_PLL/8 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size:71 stack: 8
    Init_FXOSC/6 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size:24 stack: 8
    Switch_Core_FIRC/10 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size:15 stack: 8
    Init_FIRC/5 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size:12 stack: 8
    Init_MC_ME/11 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size:62 stack: 0

IPA function summary for Init_MC_ME/11 inlinable
  global time:     641.818183
  self size:       125
  global size:     125
  min size:       122
  self stack:      0
  global stack:    0
    size:122.000000, time:639.818183
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Switch_Core_FIRC/10 inlinable
  global time:     174.879297
  self size:       31
  global size:     31
  min size:       28
  self stack:      8
  global stack:    8
    size:28.000000, time:172.879297
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Init_MC_CGM/9 inlinable
  global time:     1594.545485
  self size:       479
  global size:     479
  min size:       476
  self stack:      0
  global stack:    0
    size:476.000000, time:1592.545485
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Init_PLL/8 inlinable
  global time:     215.909092
  self size:       142
  global size:     142
  min size:       139
  self stack:      8
  global stack:    8
    size:139.000000, time:213.909092
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Init_PMC/7 inlinable
  global time:     35.727273
  self size:       22
  global size:     22
  min size:       19
  self stack:      8
  global stack:    8
    size:19.000000, time:33.727273
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Init_FXOSC/6 inlinable
  global time:     119.061114
  self size:       48
  global size:     48
  min size:       45
  self stack:      8
  global stack:    8
    size:45.000000, time:117.061114
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Init_FIRC/5 inlinable
  global time:     94.401114
  self size:       24
  global size:     24
  min size:       21
  self stack:      8
  global stack:    8
    size:21.000000, time:92.401114
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for sys_registerIsrHandler/4 inlinable
  global time:     9.000000
  self size:       10
  global size:     10
  min size:       5
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:

IPA function summary for sys_enableIsrSource/3 inlinable
  global time:     25.000000
  self size:       8
  global size:     8
  min size:       5
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    NVIC_EnableIRQ/18 function body not available
      freq:1.00 loop depth: 0 size: 2 time: 11
    NVIC_SetPriority/17 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12

IPA function summary for sys_disableIsrSource/2 inlinable
  global time:     13.000000
  self size:       5
  global size:     5
  min size:       2
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    NVIC_DisableIRQ/16 function body not available
      freq:1.00 loop depth: 0 size: 2 time: 11

IPA function summary for sys_disableAllInterrupts/1 inlinable
  global time:     3.000000
  self size:       4
  global size:     4
  min size:       1
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for sys_enableAllInterrupts/0 inlinable
  global time:     3.000000
  self size:       4
  global size:     4
  min size:       1
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Flattening functions:
Overall time estimate: 3058.341560 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in EUnit_GetCoreID/15.
Enqueueing calls in sys_stop/14.
Enqueueing calls in sys_halt/13.
Enqueueing calls in sys_init/12.
Enqueueing calls in Init_MC_ME/11.
Enqueueing calls in Switch_Core_FIRC/10.
Enqueueing calls in Init_MC_CGM/9.
Enqueueing calls in Init_PLL/8.
Enqueueing calls in Init_PMC/7.
Enqueueing calls in Init_FXOSC/6.
Enqueueing calls in Init_FIRC/5.
Enqueueing calls in sys_registerIsrHandler/4.
Enqueueing calls in sys_enableIsrSource/3.
Enqueueing calls in sys_disableIsrSource/2.
Enqueueing calls in sys_disableAllInterrupts/1.
Enqueueing calls in sys_enableAllInterrupts/0.

Considering sys_halt/13 with 4 size
 to be inlined into sys_stop/14 in unknown:0
 Estimated badness is -inf, frequency 1.00.

Considering Init_PMC/7 with 22 size
 to be inlined into sys_init/12 in C:/Users/zhang_liu/workspaceS32DS.3.5/S32K358_TEMPLATE_S32DS/S32K358_TEMPLATE_S32DS_M7_0_0/MCAL/Platform_TS_T40D34M30I0R0/startup/src/sys_init.c:915
 Estimated badness is -0.054622, frequency 1.00.

Considering Init_FIRC/5 with 24 size
 to be inlined into sys_init/12 in C:/Users/zhang_liu/workspaceS32DS.3.5/S32K358_TEMPLATE_S32DS/S32K358_TEMPLATE_S32DS_M7_0_0/MCAL/Platform_TS_T40D34M30I0R0/startup/src/sys_init.c:906
 Estimated badness is -0.036491, frequency 1.00.

Considering Switch_Core_FIRC/10 with 31 size
 to be inlined into sys_init/12 in C:/Users/zhang_liu/workspaceS32DS.3.5/S32K358_TEMPLATE_S32DS/S32K358_TEMPLATE_S32DS_M7_0_0/MCAL/Platform_TS_T40D34M30I0R0/startup/src/sys_init.c:908
 Estimated badness is -0.019802, frequency 1.00.
node context cache: 0 hits, 0 misses, 4 initializations

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:

Inlining Init_MC_ME/11 size 125.
 Called once from sys_init/12 101 insns.
 Inlined into sys_init/12 which now has 221 size

Inlining Init_MC_CGM/9 size 479.
 Called once from sys_init/12 221 insns.
 Inlined into sys_init/12 which now has 695 size

Inlining Init_PLL/8 size 142.
 Called once from sys_init/12 695 insns.
 Inlined into sys_init/12 which now has 832 size

Inlining Init_FXOSC/6 size 48.
 Called once from sys_init/12 832 insns.
 Inlined into sys_init/12 which now has 875 size
Overall time estimate: 2958.341560 weighted by profile: 0.000000

Why inlining failed?
function body not available                       :        4 calls, 4.000000 freq, 0 count
IPA function summary for EUnit_GetCoreID/15 inlinable
  global time:     13.000000
  self size:       5
  global size:     5
  min size:       2
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Sys_GetCoreID/19 function body not available
      freq:1.00 loop depth: 0 size: 2 time: 11

IPA function summary for sys_stop/14 inlinable
  global time:     3.000000
  self size:       4
  global size:     4
  min size:       1
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    sys_halt/20 inlined
      freq:1.00
      Stack frame offset 0, callee self size 0

IPA function summary for sys_halt/13 inlinable
  global time:     3.000000
  self size:       4
  global size:     4
  min size:       1
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for sys_init/12 inlinable
  global time:     2886.341560
  self size:       39
  global size:     875
  min size:       872
  self stack:      4
  global stack:    12
    size:872.000000, time:2884.341560
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Init_MC_CGM/9 inlined
      freq:1.00
      Stack frame offset 4, callee self size 0
    Init_PMC/7 inlined
      freq:1.00
      Stack frame offset 4, callee self size 8
    Init_PLL/8 inlined
      freq:1.00
      Stack frame offset 4, callee self size 8
    Init_FXOSC/6 inlined
      freq:1.00
      Stack frame offset 4, callee self size 8
    Switch_Core_FIRC/10 inlined
      freq:1.00
      Stack frame offset 4, callee self size 8
    Init_FIRC/5 inlined
      freq:1.00
      Stack frame offset 4, callee self size 8
    Init_MC_ME/11 inlined
      freq:1.00
      Stack frame offset 4, callee self size 0

IPA function summary for sys_registerIsrHandler/4 inlinable
  global time:     9.000000
  self size:       10
  global size:     10
  min size:       5
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:

IPA function summary for sys_enableIsrSource/3 inlinable
  global time:     25.000000
  self size:       8
  global size:     8
  min size:       5
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    NVIC_EnableIRQ/18 function body not available
      freq:1.00 loop depth: 0 size: 2 time: 11
    NVIC_SetPriority/17 function body not available
      freq:1.00 loop depth: 0 size: 3 time: 12

IPA function summary for sys_disableIsrSource/2 inlinable
  global time:     13.000000
  self size:       5
  global size:     5
  min size:       2
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    NVIC_DisableIRQ/16 function body not available
      freq:1.00 loop depth: 0 size: 2 time: 11

IPA function summary for sys_disableAllInterrupts/1 inlinable
  global time:     3.000000
  self size:       4
  global size:     4
  min size:       1
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for sys_enableAllInterrupts/0 inlinable
  global time:     3.000000
  self size:       4
  global size:     4
  min size:       1
  self stack:      0
  global stack:    0
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

sys_halt/20 (sys_halt) @076af620
  Type: function definition analyzed
  Visibility: public
  next sharing asm name: 13
  References: 
  Referring: 
  Function sys_halt/20 is inline copy in sys_stop/14
  Clone of sys_halt/13
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local icf_merged optimize_size
  Called by: sys_stop/14 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Sys_GetCoreID/19 (Sys_GetCoreID) @076afee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: EUnit_GetCoreID/15 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
NVIC_EnableIRQ/18 (NVIC_EnableIRQ) @076ac540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: sys_enableIsrSource/3 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
NVIC_SetPriority/17 (NVIC_SetPriority) @076ac2a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: sys_enableIsrSource/3 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
NVIC_DisableIRQ/16 (NVIC_DisableIRQ) @076acee0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: sys_disableIsrSource/2 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
EUnit_GetCoreID/15 (EUnit_GetCoreID) @076ac700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Sys_GetCoreID/19 (1073741824 (estimated locally),1.00 per call) 
sys_stop/14 (sys_stop) @076ac460
  Type: function definition analyzed
  Visibility: externally_visible public section:.text.sys_stop (implicit_section)
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body icf_merged optimize_size
  Called by: 
  Calls: sys_halt/20 (inlined) (1073741824 (estimated locally),1.00 per call) 
sys_halt/13 (sys_halt) @076ac1c0
  Type: function definition analyzed
  Visibility: externally_visible public
  previous sharing asm name: 20
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body icf_merged optimize_size
  Called by: 
  Calls: 
sys_init/12 (sys_init) @07693d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Init_MC_CGM/9 (inlined) (1073741824 (estimated locally),1.00 per call) Init_PMC/7 (inlined) (1073741824 (estimated locally),1.00 per call) Init_PLL/8 (inlined) (1073741824 (estimated locally),1.00 per call) Init_FXOSC/6 (inlined) (1073741824 (estimated locally),1.00 per call) Switch_Core_FIRC/10 (inlined) (1073741824 (estimated locally),1.00 per call) Init_FIRC/5 (inlined) (1073741824 (estimated locally),1.00 per call) Init_MC_ME/11 (inlined) (1073741824 (estimated locally),1.00 per call) 
Init_MC_ME/11 (Init_MC_ME) @07693ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Init_MC_ME/11 is inline copy in sys_init/12
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: sys_init/12 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Switch_Core_FIRC/10 (Switch_Core_FIRC) @07693c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Switch_Core_FIRC/10 is inline copy in sys_init/12
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: sys_init/12 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Init_MC_CGM/9 (Init_MC_CGM) @07693700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Init_MC_CGM/9 is inline copy in sys_init/12
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: sys_init/12 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Init_PLL/8 (Init_PLL) @0767f000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Init_PLL/8 is inline copy in sys_init/12
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: sys_init/12 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Init_PMC/7 (Init_PMC) @0766ce00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Init_PMC/7 is inline copy in sys_init/12
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: sys_init/12 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Init_FXOSC/6 (Init_FXOSC) @0766ca80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Init_FXOSC/6 is inline copy in sys_init/12
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: sys_init/12 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Init_FIRC/5 (Init_FIRC) @0766c380
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Init_FIRC/5 is inline copy in sys_init/12
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: sys_init/12 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
sys_registerIsrHandler/4 (sys_registerIsrHandler) @07669ee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
sys_enableIsrSource/3 (sys_enableIsrSource) @076699a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: NVIC_EnableIRQ/18 (1073741824 (estimated locally),1.00 per call) NVIC_SetPriority/17 (1073741824 (estimated locally),1.00 per call) 
sys_disableIsrSource/2 (sys_disableIsrSource) @07669e00
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: NVIC_DisableIRQ/16 (1073741824 (estimated locally),1.00 per call) 
sys_disableAllInterrupts/1 (sys_disableAllInterrupts) @07669b60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
sys_enableAllInterrupts/0 (sys_enableAllInterrupts) @076698c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 

;; Function sys_enableAllInterrupts (sys_enableAllInterrupts, funcdef_no=0, decl_uid=5992, cgraph_uid=1, symbol_order=0)

sys_enableAllInterrupts ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" cpsie i");
  return;

}



;; Function sys_disableAllInterrupts (sys_disableAllInterrupts, funcdef_no=1, decl_uid=5994, cgraph_uid=2, symbol_order=1)

sys_disableAllInterrupts ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" cpsid i");
  return;

}



;; Function sys_disableIsrSource (sys_disableIsrSource, funcdef_no=2, decl_uid=5984, cgraph_uid=3, symbol_order=2)

sys_disableIsrSource (uint8 id)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  NVIC_DisableIRQ (id_2(D));
  return;

}



;; Function sys_enableIsrSource (sys_enableIsrSource, funcdef_no=3, decl_uid=5987, cgraph_uid=4, symbol_order=3)

sys_enableIsrSource (uint8 id, uint8 prio)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  NVIC_SetPriority (id_2(D), prio_3(D));
  # DEBUG BEGIN_STMT
  NVIC_EnableIRQ (id_2(D));
  return;

}



;; Function sys_registerIsrHandler (sys_registerIsrHandler, funcdef_no=4, decl_uid=5990, cgraph_uid=5, symbol_order=4)

sys_registerIsrHandler (uint8 irq_id, void (*int_function_t) (void) isr_handler)
{
  long unsigned int _1;
  int _2;
  int _3;
  int _4;
  long unsigned int _5;
  long unsigned int _6;
  volatile uint32 * _7;
  long unsigned int isr_handler.0_8;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" cpsid i");
  # DEBUG BEGIN_STMT
  _1 ={v} MEM[(volatile uint32 *)3758157064B];
  _2 = (int) irq_id_11(D);
  _3 = _2 + 16;
  _4 = _3 << 2;
  _5 = (long unsigned int) _4;
  _6 = _1 + _5;
  _7 = (volatile uint32 *) _6;
  isr_handler.0_8 = (long unsigned int) isr_handler_12(D);
  *_7 ={v} isr_handler.0_8;
  # DEBUG BEGIN_STMT
  __asm__ __volatile__(" cpsie i");
  return;

}



;; Function sys_init (sys_init, funcdef_no=12, decl_uid=5996, cgraph_uid=13, symbol_order=12)


Symbols to be put in SSA form
{ D.9972 D.10008 D.10011 D.10014 D.10017 D.10020 D.10024 D.10025 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 201
Number of blocks to update: 200 (100%)


Merging blocks 2 and 152
Removing basic block 6
Removing basic block 7
Removing basic block 9
Removing basic block 10
Removing basic block 12
Removing basic block 13
Removing basic block 15
Removing basic block 16
Removing basic block 18
Removing basic block 19
Removing basic block 21
Removing basic block 22
Removing basic block 24
Removing basic block 25
Removing basic block 27
Removing basic block 28
Removing basic block 30
Removing basic block 31
Removing basic block 33
Removing basic block 34
Removing basic block 36
Removing basic block 37
Removing basic block 39
Removing basic block 42
Removing basic block 43
Removing basic block 45
Removing basic block 46
Removing basic block 48
Removing basic block 49
Removing basic block 51
Removing basic block 52
Removing basic block 54
Removing basic block 55
Removing basic block 57
Removing basic block 58
Removing basic block 60
Removing basic block 61
Removing basic block 63
Removing basic block 64
Removing basic block 66
Removing basic block 67
Removing basic block 69
Removing basic block 70
Removing basic block 72
Removing basic block 73
Removing basic block 75
Removing basic block 76
Removing basic block 78
Removing basic block 79
Removing basic block 81
Removing basic block 82
Removing basic block 84
Removing basic block 85
Removing basic block 87
Removing basic block 88
Removing basic block 90
Removing basic block 91
Removing basic block 93
Removing basic block 94
Removing basic block 96
Removing basic block 97
Removing basic block 99
Merging blocks 100 and 3
Removing basic block 105
Merging blocks 107 and 101
Removing basic block 115
Merging blocks 118 and 108
Removing basic block 123
Merging blocks 126 and 119
Removing basic block 130
Removing basic block 133
Removing basic block 134
Removing basic block 137
Merging blocks 140 and 127
Removing basic block 147
Merging blocks 150 and 141
Removing basic block 154
Removing basic block 155
Removing basic block 157
Removing basic block 158
Removing basic block 160
Removing basic block 161
Removing basic block 163
Removing basic block 164
Removing basic block 166
Removing basic block 167
Removing basic block 169
Removing basic block 172
Removing basic block 173
Removing basic block 175
Removing basic block 176
Removing basic block 178
Removing basic block 179
Removing basic block 181
Removing basic block 182
Removing basic block 184
Removing basic block 185
Removing basic block 187
Removing basic block 188
Removing basic block 190
Removing basic block 191
Removing basic block 193
Removing basic block 194
Removing basic block 196
Removing basic block 197
Removing basic block 199
Merging blocks 200 and 151
Merging blocks 107 and 4
Merging blocks 118 and 102
Merging blocks 126 and 109
Merging blocks 140 and 120
Merging blocks 150 and 128
Merging blocks 200 and 142
;; 56 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86
;;
;; Loop 1
;;  header 85, latch 85
;;  depth 1, outer 0
;;  nodes: 85
;;
;; Loop 2
;;  header 84, latch 84
;;  depth 1, outer 0
;;  nodes: 84
;;
;; Loop 3
;;  header 83, latch 83
;;  depth 1, outer 0
;;  nodes: 83
;;
;; Loop 4
;;  header 82, latch 82
;;  depth 1, outer 0
;;  nodes: 82
;;
;; Loop 5
;;  header 81, latch 81
;;  depth 1, outer 0
;;  nodes: 81
;;
;; Loop 6
;;  header 80, latch 80
;;  depth 1, outer 0
;;  nodes: 80
;;
;; Loop 7
;;  header 79, latch 79
;;  depth 1, outer 0
;;  nodes: 79
;;
;; Loop 8
;;  header 78, latch 78
;;  depth 1, outer 0
;;  nodes: 78
;;
;; Loop 9
;;  header 77, latch 77
;;  depth 1, outer 0
;;  nodes: 77
;;
;; Loop 10
;;  header 76, latch 76
;;  depth 1, outer 0
;;  nodes: 76
;;
;; Loop 11
;;  header 75, latch 75
;;  depth 1, outer 0
;;  nodes: 75
;;
;; Loop 12
;;  header 74, latch 74
;;  depth 1, outer 0
;;  nodes: 74
;;
;; Loop 13
;;  header 73, latch 73
;;  depth 1, outer 0
;;  nodes: 73
;;
;; Loop 14
;;  header 72, latch 72
;;  depth 1, outer 0
;;  nodes: 72
;;
;; Loop 15
;;  header 71, latch 71
;;  depth 1, outer 0
;;  nodes: 71
;;
;; Loop 16
;;  header 70, latch 70
;;  depth 1, outer 0
;;  nodes: 70
;;
;; Loop 17
;;  header 69, latch 69
;;  depth 1, outer 0
;;  nodes: 69
;;
;; Loop 18
;;  header 68, latch 68
;;  depth 1, outer 0
;;  nodes: 68
;;
;; Loop 19
;;  header 67, latch 67
;;  depth 1, outer 0
;;  nodes: 67
;;
;; Loop 20
;;  header 66, latch 66
;;  depth 1, outer 0
;;  nodes: 66
;;
;; Loop 21
;;  header 64, latch 64
;;  depth 1, outer 0
;;  nodes: 64
;;
;; Loop 22
;;  header 63, latch 63
;;  depth 1, outer 0
;;  nodes: 63
;;
;; Loop 23
;;  header 62, latch 62
;;  depth 1, outer 0
;;  nodes: 62
;;
;; Loop 24
;;  header 61, latch 61
;;  depth 1, outer 0
;;  nodes: 61
;;
;; Loop 25
;;  header 60, latch 60
;;  depth 1, outer 0
;;  nodes: 60
;;
;; Loop 26
;;  header 59, latch 59
;;  depth 1, outer 0
;;  nodes: 59
;;
;; Loop 27
;;  header 58, latch 58
;;  depth 1, outer 0
;;  nodes: 58
;;
;; Loop 28
;;  header 57, latch 57
;;  depth 1, outer 0
;;  nodes: 57
;;
;; Loop 29
;;  header 56, latch 56
;;  depth 1, outer 0
;;  nodes: 56
;;
;; Loop 30
;;  header 55, latch 55
;;  depth 1, outer 0
;;  nodes: 55
;;
;; Loop 31
;;  header 54, latch 54
;;  depth 1, outer 0
;;  nodes: 54
;;
;; Loop 32
;;  header 53, latch 53
;;  depth 1, outer 0
;;  nodes: 53
;;
;; Loop 33
;;  header 50, latch 50
;;  depth 1, outer 0
;;  nodes: 50
;;
;; Loop 34
;;  header 44, latch 45
;;  depth 1, outer 0
;;  nodes: 44 45
;;
;; Loop 35
;;  header 36, latch 37
;;  depth 1, outer 0
;;  nodes: 36 37
;;
;; Loop 36
;;  header 31, latch 32
;;  depth 1, outer 0
;;  nodes: 31 32
;;
;; Loop 37
;;  header 30, latch 30
;;  depth 1, outer 0
;;  nodes: 30
;;
;; Loop 38
;;  header 28, latch 28
;;  depth 1, outer 0
;;  nodes: 28
;;
;; Loop 39
;;  header 23, latch 24
;;  depth 1, outer 0
;;  nodes: 23 24
;;
;; Loop 40
;;  header 19, latch 19
;;  depth 1, outer 0
;;  nodes: 19
;;
;; Loop 41
;;  header 18, latch 18
;;  depth 1, outer 0
;;  nodes: 18
;;
;; Loop 42
;;  header 17, latch 17
;;  depth 1, outer 0
;;  nodes: 17
;;
;; Loop 43
;;  header 16, latch 16
;;  depth 1, outer 0
;;  nodes: 16
;;
;; Loop 44
;;  header 15, latch 15
;;  depth 1, outer 0
;;  nodes: 15
;;
;; Loop 45
;;  header 14, latch 14
;;  depth 1, outer 0
;;  nodes: 14
;;
;; Loop 46
;;  header 13, latch 13
;;  depth 1, outer 0
;;  nodes: 13
;;
;; Loop 47
;;  header 12, latch 12
;;  depth 1, outer 0
;;  nodes: 12
;;
;; Loop 48
;;  header 11, latch 11
;;  depth 1, outer 0
;;  nodes: 11
;;
;; Loop 49
;;  header 10, latch 10
;;  depth 1, outer 0
;;  nodes: 10
;;
;; Loop 50
;;  header 8, latch 8
;;  depth 1, outer 0
;;  nodes: 8
;;
;; Loop 51
;;  header 7, latch 7
;;  depth 1, outer 0
;;  nodes: 7
;;
;; Loop 52
;;  header 6, latch 6
;;  depth 1, outer 0
;;  nodes: 6
;;
;; Loop 53
;;  header 5, latch 5
;;  depth 1, outer 0
;;  nodes: 5
;;
;; Loop 54
;;  header 4, latch 4
;;  depth 1, outer 0
;;  nodes: 4
;;
;; Loop 55
;;  header 3, latch 3
;;  depth 1, outer 0
;;  nodes: 3
;; 2 succs { 3 }
;; 3 succs { 3 4 }
;; 4 succs { 4 5 }
;; 5 succs { 5 6 }
;; 6 succs { 6 7 }
;; 7 succs { 7 8 }
;; 8 succs { 8 9 }
;; 9 succs { 10 }
;; 10 succs { 10 11 }
;; 11 succs { 11 12 }
;; 12 succs { 12 13 }
;; 13 succs { 13 14 }
;; 14 succs { 14 15 }
;; 15 succs { 15 16 }
;; 16 succs { 16 17 }
;; 17 succs { 17 18 }
;; 18 succs { 18 19 }
;; 19 succs { 19 20 }
;; 20 succs { 21 22 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 24 25 }
;; 24 succs { 23 25 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 28 }
;; 28 succs { 28 29 }
;; 29 succs { 30 }
;; 30 succs { 30 31 }
;; 31 succs { 32 33 }
;; 32 succs { 31 33 }
;; 33 succs { 34 35 }
;; 34 succs { 35 }
;; 35 succs { 36 }
;; 36 succs { 37 38 }
;; 37 succs { 36 38 }
;; 38 succs { 39 40 }
;; 39 succs { 40 }
;; 40 succs { 41 42 }
;; 41 succs { 43 }
;; 42 succs { 43 }
;; 43 succs { 44 }
;; 44 succs { 45 46 }
;; 45 succs { 44 46 }
;; 46 succs { 47 48 }
;; 47 succs { 48 }
;; 48 succs { 49 52 }
;; 49 succs { 50 }
;; 50 succs { 50 51 }
;; 51 succs { 52 }
;; 52 succs { 53 }
;; 53 succs { 53 54 }
;; 54 succs { 54 55 }
;; 55 succs { 55 56 }
;; 56 succs { 56 57 }
;; 57 succs { 57 58 }
;; 58 succs { 58 59 }
;; 59 succs { 59 60 }
;; 60 succs { 60 61 }
;; 61 succs { 61 62 }
;; 62 succs { 62 63 }
;; 63 succs { 63 64 }
;; 64 succs { 64 65 }
;; 65 succs { 66 }
;; 66 succs { 66 67 }
;; 67 succs { 67 68 }
;; 68 succs { 68 69 }
;; 69 succs { 69 70 }
;; 70 succs { 70 71 }
;; 71 succs { 71 72 }
;; 72 succs { 72 73 }
;; 73 succs { 73 74 }
;; 74 succs { 74 75 }
;; 75 succs { 75 76 }
;; 76 succs { 76 77 }
;; 77 succs { 77 78 }
;; 78 succs { 78 79 }
;; 79 succs { 79 80 }
;; 80 succs { 80 81 }
;; 81 succs { 81 82 }
;; 82 succs { 82 83 }
;; 83 succs { 83 84 }
;; 84 succs { 84 85 }
;; 85 succs { 85 86 }
;; 86 succs { 1 }
cyclic probability of bb 3 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 4 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 5 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 6 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 7 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 8 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 10 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 11 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 12 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 13 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 14 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 15 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 16 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 17 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 18 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 19 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 23 is 0.893025; turning freq 1.000000 to 9.347979
cyclic probability of bb 28 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 30 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 31 is 0.893025; turning freq 1.000000 to 9.347979
cyclic probability of bb 36 is 0.893025; turning freq 1.000000 to 9.347979
cyclic probability of bb 44 is 0.893025; turning freq 1.000000 to 9.347979
cyclic probability of bb 50 is 0.890000; turning freq 0.500000 to 4.545455
cyclic probability of bb 53 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 54 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 55 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 56 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 57 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 58 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 59 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 60 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 61 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 62 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 63 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 64 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 66 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 67 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 68 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 69 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 70 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 71 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 72 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 73 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 74 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 75 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 76 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 77 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 78 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 79 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 80 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 81 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 82 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 83 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 84 is 0.890000; turning freq 1.000000 to 9.090909
cyclic probability of bb 85 is 0.890000; turning freq 1.000000 to 9.090909
sys_init ()
{
  int D.10025;
  volatile uint32 timeout;
  volatile int result;
  int D.10024;
  volatile uint32 timeout;
  volatile int result;
  int D.10020;
  volatile uint32 timeout;
  volatile int result;
  int D.10017;
  volatile uint32 timeout;
  volatile int result;
  int D.10014;
  volatile uint32 timeout;
  volatile int result;
  int D.10011;
  int D.10008;
  volatile uint32 status;
  long unsigned int _1;
  long unsigned int status.1_2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int status.2_5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int status.3_8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int status.4_11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int status.5_14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int status.6_17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int status.7_20;
  long unsigned int _21;
  int _25;
  int _28;
  int _31;
  int _34;
  int _37;
  int _40;
  int _43;
  long unsigned int _45;
  long unsigned int _46;
  long unsigned int _47;
  long unsigned int _48;
  long unsigned int _49;
  long unsigned int _50;
  long unsigned int _51;
  long unsigned int _52;
  long unsigned int _53;
  long unsigned int _54;
  long unsigned int _55;
  long unsigned int _56;
  long unsigned int _57;
  long unsigned int _58;
  long unsigned int _59;
  long unsigned int _60;
  long unsigned int _61;
  long unsigned int _62;
  long unsigned int _63;
  long unsigned int _64;
  long unsigned int _65;
  long unsigned int _66;
  long unsigned int _67;
  long unsigned int _68;
  long unsigned int _69;
  long unsigned int _70;
  long unsigned int _71;
  long unsigned int _72;
  long unsigned int _73;
  long unsigned int _74;
  long unsigned int _75;
  long unsigned int _76;
  long unsigned int _77;
  long unsigned int _78;
  long unsigned int _79;
  long unsigned int _80;
  long unsigned int _81;
  long unsigned int _82;
  long unsigned int _83;
  long unsigned int _84;
  long unsigned int _85;
  long unsigned int _86;
  long unsigned int _87;
  long unsigned int _88;
  long unsigned int _89;
  long unsigned int _90;
  long unsigned int _91;
  long unsigned int _92;
  long unsigned int _93;
  long unsigned int _94;
  long unsigned int _95;
  long unsigned int _96;
  long unsigned int _97;
  long unsigned int _98;
  long unsigned int _99;
  long unsigned int _100;
  long unsigned int _101;
  long unsigned int _102;
  long unsigned int _103;
  long unsigned int _104;
  long unsigned int _105;
  long unsigned int _106;
  long unsigned int _107;
  long unsigned int _108;
  long unsigned int _109;
  long unsigned int _110;
  long unsigned int _111;
  long unsigned int _112;
  long unsigned int _113;
  long unsigned int _114;
  long unsigned int _115;
  long unsigned int _116;
  long unsigned int _117;
  long unsigned int _118;
  long unsigned int _119;
  long unsigned int _120;
  long unsigned int _121;
  long unsigned int _122;
  long unsigned int _123;
  long unsigned int _124;
  long unsigned int _125;
  long unsigned int _126;
  long unsigned int _127;
  long unsigned int _128;
  long unsigned int _129;
  long unsigned int _130;
  long unsigned int _131;
  long unsigned int _132;
  long unsigned int _133;
  long unsigned int _134;
  long unsigned int _135;
  long unsigned int _136;
  long unsigned int _137;
  long unsigned int _138;
  long unsigned int _139;
  long unsigned int _140;
  long unsigned int _141;
  long unsigned int _142;
  long unsigned int _143;
  long unsigned int _144;
  long unsigned int _145;
  long unsigned int _146;
  long unsigned int _147;
  long unsigned int _148;
  long unsigned int _149;
  long unsigned int _150;
  long unsigned int _151;
  long unsigned int _152;
  long unsigned int _153;
  long unsigned int _154;
  long unsigned int _155;
  long unsigned int _156;
  long unsigned int _157;
  long unsigned int _158;
  long unsigned int _159;
  long unsigned int _160;
  long unsigned int _161;
  long unsigned int _162;
  long unsigned int _163;
  long unsigned int _164;
  long unsigned int _165;
  long unsigned int _166;
  long unsigned int _167;
  long unsigned int _168;
  long unsigned int _169;
  long unsigned int _170;
  long unsigned int _171;
  long unsigned int _172;
  long unsigned int _173;
  long unsigned int _174;
  long unsigned int _175;
  long unsigned int _176;
  long unsigned int _177;
  long unsigned int _178;
  long unsigned int _179;
  long unsigned int _180;
  long unsigned int _181;
  long unsigned int _182;
  long unsigned int _183;
  long unsigned int _184;
  long unsigned int _185;
  long unsigned int _186;
  long unsigned int _187;
  long unsigned int _188;
  long unsigned int _189;
  long unsigned int _190;
  long unsigned int _191;
  long unsigned int _192;
  long unsigned int _193;
  long unsigned int _194;
  long unsigned int _195;
  long unsigned int _196;
  long unsigned int _197;
  long unsigned int _198;
  long unsigned int _199;
  long unsigned int _200;
  long unsigned int _201;
  long unsigned int _202;
  long unsigned int _203;
  long unsigned int _204;
  long unsigned int _205;
  long unsigned int _206;
  long unsigned int _207;
  long unsigned int _208;
  long unsigned int _209;
  long unsigned int _210;
  long unsigned int _211;
  long unsigned int _212;
  long unsigned int _213;
  long unsigned int _214;
  long unsigned int _215;
  long unsigned int _216;
  long unsigned int _217;
  long unsigned int _218;
  long unsigned int _219;
  long unsigned int _220;
  long unsigned int _221;
  long unsigned int _222;
  long unsigned int _223;
  long unsigned int _224;
  long unsigned int _225;
  long unsigned int _226;
  long unsigned int _227;
  long unsigned int _228;
  long unsigned int _229;
  long unsigned int _230;
  long unsigned int _231;
  long unsigned int _232;
  long unsigned int _233;
  long unsigned int _234;
  long unsigned int _235;
  long unsigned int _236;
  long unsigned int _237;
  long unsigned int _238;
  long unsigned int _239;
  long unsigned int _240;
  long unsigned int _241;
  long unsigned int _242;
  long unsigned int _243;
  long unsigned int _244;
  long unsigned int _245;
  long unsigned int _246;
  long unsigned int _247;
  long unsigned int _248;
  long unsigned int _249;
  long unsigned int _250;
  long unsigned int _251;
  long unsigned int _252;
  long unsigned int _253;
  long unsigned int _254;
  long unsigned int _255;
  long unsigned int _256;
  long unsigned int _257;
  long unsigned int _258;
  long unsigned int _259;
  long unsigned int _260;
  long unsigned int _261;
  long unsigned int _262;
  long unsigned int _263;
  long unsigned int _264;
  long unsigned int _265;
  long unsigned int _266;
  long unsigned int _267;
  long unsigned int _268;
  long unsigned int _269;
  long unsigned int _270;
  long unsigned int _271;
  long unsigned int _272;
  long unsigned int _273;
  long unsigned int _274;
  long unsigned int _275;
  long unsigned int _276;
  long unsigned int _277;
  long unsigned int _278;
  long unsigned int _279;
  long unsigned int _280;
  long unsigned int _281;
  long unsigned int _282;
  long unsigned int _283;
  long unsigned int _284;
  long unsigned int _285;
  long unsigned int _286;
  long unsigned int _287;
  long unsigned int _288;
  long unsigned int _289;
  long unsigned int _290;
  long unsigned int _291;
  long unsigned int _292;
  long unsigned int _293;
  long unsigned int _294;
  long unsigned int _295;
  long unsigned int _296;
  long unsigned int _297;
  long unsigned int _298;
  long unsigned int _299;
  long unsigned int _300;
  long unsigned int _301;
  long unsigned int _302;
  long unsigned int _303;
  long unsigned int _304;
  long unsigned int _305;
  long unsigned int _306;
  long unsigned int _307;
  long unsigned int _308;
  long unsigned int _309;
  long unsigned int _310;
  long unsigned int _311;
  long unsigned int _312;
  long unsigned int _313;
  long unsigned int _314;
  long unsigned int _315;
  long unsigned int _316;
  long unsigned int _317;
  long unsigned int _318;
  long unsigned int _319;
  long unsigned int _320;
  long unsigned int _321;
  long unsigned int _322;
  long unsigned int _323;
  long unsigned int _324;
  long unsigned int _325;
  long unsigned int _326;
  long unsigned int _327;
  long unsigned int _328;
  long unsigned int _329;
  long unsigned int _330;
  long unsigned int _331;
  long unsigned int _332;
  long unsigned int _333;
  long unsigned int _334;
  long unsigned int _335;
  long unsigned int _336;
  long unsigned int _337;
  long unsigned int _338;
  long unsigned int _339;
  long unsigned int _340;
  long unsigned int _341;
  long unsigned int _342;
  long unsigned int _343;
  long unsigned int _344;
  long unsigned int timeout.20_345;
  long unsigned int _346;
  int _347;
  long unsigned int _348;
  long unsigned int _349;
  long unsigned int _350;
  long unsigned int _351;
  long unsigned int _352;
  long unsigned int _353;
  long unsigned int _354;
  long unsigned int _355;
  long unsigned int _356;
  long unsigned int _357;
  long unsigned int _358;
  long unsigned int _359;
  long unsigned int _360;
  long unsigned int _361;
  long unsigned int _362;
  long unsigned int _363;
  long unsigned int _364;
  long unsigned int _365;
  long unsigned int _366;
  long unsigned int _367;
  long unsigned int _368;
  long unsigned int _369;
  long unsigned int _370;
  long unsigned int _371;
  long unsigned int _372;
  long unsigned int _373;
  long unsigned int _374;
  long unsigned int _375;
  long unsigned int _376;
  long unsigned int _377;
  long unsigned int _378;
  long unsigned int _379;
  long unsigned int _380;
  long unsigned int _381;
  long unsigned int _382;
  long unsigned int _383;
  long unsigned int _384;
  long unsigned int _385;
  long unsigned int _386;
  long unsigned int _387;
  long unsigned int _388;
  long unsigned int _389;
  long unsigned int _390;
  long unsigned int _391;
  long unsigned int _392;
  long unsigned int _393;
  long unsigned int _394;
  long unsigned int _395;
  long unsigned int _396;
  long unsigned int _397;
  long unsigned int _398;
  long unsigned int _399;
  long unsigned int _400;
  long unsigned int _401;
  long unsigned int _402;
  long unsigned int _403;
  long unsigned int _404;
  long unsigned int _405;
  long unsigned int _406;
  long unsigned int _407;
  long unsigned int _408;
  long unsigned int _409;
  long unsigned int _410;
  long unsigned int _411;
  long unsigned int _412;
  long unsigned int _413;
  long unsigned int _414;
  long unsigned int _415;
  long unsigned int _416;
  long unsigned int _417;
  long unsigned int _418;
  long unsigned int _419;
  long unsigned int _420;
  long unsigned int timeout.17_421;
  long unsigned int _422;
  long unsigned int timeout.19_423;
  long unsigned int _424;
  long unsigned int _425;
  long unsigned int _426;
  long unsigned int _427;
  long unsigned int _428;
  long unsigned int _429;
  long unsigned int _430;
  long unsigned int _431;
  int _432;
  long unsigned int _433;
  long unsigned int _434;
  long unsigned int _435;
  long unsigned int _436;
  long unsigned int _437;
  long unsigned int _438;
  long unsigned int _439;
  long unsigned int _440;
  long unsigned int _441;
  long unsigned int _442;
  long unsigned int _443;
  long unsigned int _444;
  long unsigned int _445;
  long unsigned int _446;
  long unsigned int _447;
  long unsigned int _448;
  long unsigned int _449;
  long unsigned int _450;
  long unsigned int _451;
  long unsigned int _452;
  long unsigned int _453;
  long unsigned int timeout.14_454;
  long unsigned int _455;
  long unsigned int timeout.16_456;
  int _457;
  long unsigned int _458;
  long unsigned int _459;
  long unsigned int _460;
  long unsigned int _461;
  long unsigned int _462;
  long unsigned int _463;
  long unsigned int _464;
  long unsigned int _465;
  long unsigned int _466;
  long unsigned int timeout.11_467;
  long unsigned int _468;
  long unsigned int timeout.13_469;
  int _470;
  long unsigned int _471;
  long unsigned int _472;
  long unsigned int _473;
  long unsigned int _474;
  long unsigned int timeout.8_475;
  long unsigned int _476;
  long unsigned int timeout.10_477;
  int _478;
  long unsigned int _479;
  long unsigned int _480;
  long unsigned int _481;
  long unsigned int _482;
  long unsigned int _483;
  long unsigned int _484;
  long unsigned int _485;
  long unsigned int _486;
  long unsigned int _487;
  long unsigned int _488;
  long unsigned int _489;
  long unsigned int _490;
  long unsigned int _491;
  long unsigned int _492;
  long unsigned int _493;
  long unsigned int _494;
  long unsigned int _495;
  long unsigned int _496;
  long unsigned int _497;
  long unsigned int _498;
  long unsigned int _499;
  long unsigned int _500;
  long unsigned int _501;
  long unsigned int _502;
  long unsigned int _503;
  long unsigned int _504;
  long unsigned int _505;
  long unsigned int _506;
  long unsigned int _507;
  long unsigned int _508;
  long unsigned int _509;
  long unsigned int _510;
  long unsigned int _511;
  long unsigned int _512;
  long unsigned int _513;
  long unsigned int _514;
  long unsigned int _515;
  long unsigned int _516;
  long unsigned int _517;
  long unsigned int _518;
  long unsigned int _519;
  long unsigned int _520;
  long unsigned int _521;
  long unsigned int _522;
  long unsigned int _523;
  long unsigned int _524;
  long unsigned int _525;
  long unsigned int _526;
  long unsigned int _527;
  long unsigned int _528;
  long unsigned int _529;
  long unsigned int _530;
  long unsigned int _531;
  long unsigned int _532;
  long unsigned int _533;
  long unsigned int _534;
  long unsigned int _535;
  long unsigned int _536;
  long unsigned int _537;
  long unsigned int _538;
  long unsigned int _539;
  long unsigned int _540;
  long unsigned int _541;
  long unsigned int _542;
  long unsigned int _543;
  long unsigned int _544;
  long unsigned int _545;
  long unsigned int _546;

  <bb 2> [local count: 114863527]:
  # DEBUG BEGIN_STMT
  status ={v} 0;
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY Init_MC_ME
  # DEBUG BEGIN_STMT
  _479 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_PCONF;
  _480 = _479 | 1;
  MEM[(struct MC_ME_Type *)1076740096B].PRTN0_PCONF ={v} _480;
  # DEBUG BEGIN_STMT
  _481 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_PCONF;
  _482 = _481 | 1;
  MEM[(struct MC_ME_Type *)1076740096B].PRTN1_PCONF ={v} _482;
  # DEBUG BEGIN_STMT
  _483 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_PCONF;
  _484 = _483 | 1;
  MEM[(struct MC_ME_Type *)1076740096B].PRTN2_PCONF ={v} _484;
  # DEBUG BEGIN_STMT
  _485 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_PUPD;
  _486 = _485 | 1;
  MEM[(struct MC_ME_Type *)1076740096B].PRTN0_PUPD ={v} _486;
  # DEBUG BEGIN_STMT
  _487 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_PUPD;
  _488 = _487 | 1;
  MEM[(struct MC_ME_Type *)1076740096B].PRTN1_PUPD ={v} _488;
  # DEBUG BEGIN_STMT
  _489 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_PUPD;
  _490 = _489 | 1;
  MEM[(struct MC_ME_Type *)1076740096B].PRTN2_PUPD ={v} _490;
  # DEBUG BEGIN_STMT
  MEM[(struct MC_ME_Type *)1076740096B].CTL_KEY ={v} 23280;
  # DEBUG BEGIN_STMT
  MEM[(struct MC_ME_Type *)1076740096B].CTL_KEY ={v} 42255;
  # DEBUG BEGIN_STMT

  <bb 3> [local count: 1044213885]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _491 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_PUPD;
  _492 = _491 & 1;
  if (_492 != 0)
    goto <bb 3>; [89.00%]
  else
    goto <bb 4>; [11.00%]

  <bb 4> [local count: 1044213885]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _493 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_PUPD;
  _494 = _493 & 1;
  if (_494 != 0)
    goto <bb 4>; [89.00%]
  else
    goto <bb 5>; [11.00%]

  <bb 5> [local count: 1044213885]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _495 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_PUPD;
  _496 = _495 & 1;
  if (_496 != 0)
    goto <bb 5>; [89.00%]
  else
    goto <bb 6>; [11.00%]

  <bb 6> [local count: 1044213885]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _497 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_PCONF;
  _498 = _497 & 1;
  if (_498 == 0)
    goto <bb 6>; [89.00%]
  else
    goto <bb 7>; [11.00%]

  <bb 7> [local count: 1044213885]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _499 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_PCONF;
  _500 = _499 & 1;
  if (_500 == 0)
    goto <bb 7>; [89.00%]
  else
    goto <bb 8>; [11.00%]

  <bb 8> [local count: 1044213885]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _501 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_PCONF;
  _502 = _501 & 1;
  if (_502 == 0)
    goto <bb 8>; [89.00%]
  else
    goto <bb 9>; [11.00%]

  <bb 9> [local count: 114863527]:
  # DEBUG BEGIN_STMT
  _503 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_COFB0_CLKEN;
  _504 = _503 | 8;
  MEM[(struct MC_ME_Type *)1076740096B].PRTN0_COFB0_CLKEN ={v} _504;
  # DEBUG BEGIN_STMT
  _505 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_COFB1_CLKEN;
  _506 = _505 | 63455;
  MEM[(struct MC_ME_Type *)1076740096B].PRTN0_COFB1_CLKEN ={v} _506;
  # DEBUG BEGIN_STMT
  _507 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_CLKEN;
  _508 = _507 | 4290772991;
  MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_CLKEN ={v} _508;
  # DEBUG BEGIN_STMT
  _509 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB1_CLKEN;
  _510 = _509 | 4294881279;
  MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB1_CLKEN ={v} _510;
  # DEBUG BEGIN_STMT
  _511 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_CLKEN;
  _512 = _511 | 3153330174;
  MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_CLKEN ={v} _512;
  # DEBUG BEGIN_STMT
  _513 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB3_CLKEN;
  _514 = _513 | 24559;
  MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB3_CLKEN ={v} _514;
  # DEBUG BEGIN_STMT
  _515 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_CLKEN;
  _516 = _515 | 2147483639;
  MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_CLKEN ={v} _516;
  # DEBUG BEGIN_STMT
  _517 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB1_CLKEN;
  _518 = _517 | 3465119738;
  MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB1_CLKEN ={v} _518;
  # DEBUG BEGIN_STMT
  _519 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB2_CLKEN;
  _520 = _519 | 57;
  MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB2_CLKEN ={v} _520;
  # DEBUG BEGIN_STMT
  _521 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_PUPD;
  _522 = _521 | 1;
  MEM[(struct MC_ME_Type *)1076740096B].PRTN0_PUPD ={v} _522;
  # DEBUG BEGIN_STMT
  _523 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_PUPD;
  _524 = _523 | 1;
  MEM[(struct MC_ME_Type *)1076740096B].PRTN1_PUPD ={v} _524;
  # DEBUG BEGIN_STMT
  _525 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_PUPD;
  _526 = _525 | 1;
  MEM[(struct MC_ME_Type *)1076740096B].PRTN2_PUPD ={v} _526;
  # DEBUG BEGIN_STMT
  MEM[(struct MC_ME_Type *)1076740096B].CTL_KEY ={v} 23280;
  # DEBUG BEGIN_STMT
  MEM[(struct MC_ME_Type *)1076740096B].CTL_KEY ={v} 42255;
  # DEBUG BEGIN_STMT

  <bb 10> [local count: 1044213885]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _527 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_PUPD;
  _528 = _527 & 1;
  if (_528 != 0)
    goto <bb 10>; [89.00%]
  else
    goto <bb 11>; [11.00%]

  <bb 11> [local count: 1044213885]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _529 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_PUPD;
  _530 = _529 & 1;
  if (_530 != 0)
    goto <bb 11>; [89.00%]
  else
    goto <bb 12>; [11.00%]

  <bb 12> [local count: 1044213885]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _531 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_PUPD;
  _532 = _531 & 1;
  if (_532 != 0)
    goto <bb 12>; [89.00%]
  else
    goto <bb 13>; [11.00%]

  <bb 13> [local count: 1044213885]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _533 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN0_COFB1_STAT;
  _534 = _533 & 63455;
  if (_534 != 63455)
    goto <bb 13>; [89.00%]
  else
    goto <bb 14>; [11.00%]

  <bb 14> [local count: 1044213885]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _535 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB1_STAT;
  _536 = _535 & 4294881279;
  if (_536 != 4294881279)
    goto <bb 14>; [89.00%]
  else
    goto <bb 15>; [11.00%]

  <bb 15> [local count: 1044213885]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _537 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB2_STAT;
  _538 = _537 & 3153330174;
  if (_538 != 3153330174)
    goto <bb 15>; [89.00%]
  else
    goto <bb 16>; [11.00%]

  <bb 16> [local count: 1044213885]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _539 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB0_STAT;
  _540 = _539 & 4290772991;
  if (_540 != 4290772991)
    goto <bb 16>; [89.00%]
  else
    goto <bb 17>; [11.00%]

  <bb 17> [local count: 1044213885]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _541 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN1_COFB3_STAT;
  _542 = _541 & 24559;
  if (_542 != 24559)
    goto <bb 17>; [89.00%]
  else
    goto <bb 18>; [11.00%]

  <bb 18> [local count: 1044213885]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _543 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB0_STAT;
  _544 = _543 & 2147483639;
  if (_544 != 2147483639)
    goto <bb 18>; [89.00%]
  else
    goto <bb 19>; [11.00%]

  <bb 19> [local count: 1044213885]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _545 ={v} MEM[(struct MC_ME_Type *)1076740096B].PRTN2_COFB1_STAT;
  _546 = _545 & 3465119738;
  if (_546 != 3465119738)
    goto <bb 19>; [89.00%]
  else
    goto <bb 20>; [11.00%]

  <bb 20> [local count: 114863527]:
  # DEBUG BEGIN_STMT
  _585 = 0;
  _25 = _585;
  _1 = (long unsigned int) _25;
  status.1_2 ={v} status;
  _3 = _1 + status.1_2;
  status ={v} _3;
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY Init_FIRC
  # DEBUG BEGIN_STMT
  timeout ={v} 65535;
  # DEBUG BEGIN_STMT
  result ={v} 0;
  # DEBUG BEGIN_STMT
  # DEBUG io_config_reg_gpr => 1077526628B
  # DEBUG BEGIN_STMT
  _471 ={v} MEM[(struct CONFIGURATION_GPR_Type *)1077526528B].CONFIG_REG_GPR;
  _472 = _471 >> 29;
  if (_472 == 5)
    goto <bb 21>; [34.00%]
  else
    goto <bb 22>; [66.00%]

  <bb 21> [local count: 39053599]:
  # DEBUG BEGIN_STMT
  MEM[(volatile uint32 *)1077526628B] ={v} 2684354563;

  <bb 22> [local count: 114863527]:

  <bb 23> [local count: 1073741794]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _473 ={v} MEM[(struct FIRC_Type *)1076690944B].STATUS_REGISTER;
  _474 = _473 & 1;
  if (_474 == 0)
    goto <bb 24>; [94.50%]
  else
    goto <bb 25>; [5.50%]

  <bb 24> [local count: 1014685996]:
  timeout.8_475 ={v} timeout;
  _476 = timeout.8_475 + 4294967295;
  timeout ={v} _476;
  if (timeout.8_475 != 0)
    goto <bb 23>; [94.50%]
  else
    goto <bb 25>; [5.50%]

  <bb 25> [local count: 114863528]:
  # DEBUG BEGIN_STMT
  timeout.10_477 ={v} timeout;
  if (timeout.10_477 == 0)
    goto <bb 26>; [50.00%]
  else
    goto <bb 27>; [50.00%]

  <bb 26> [local count: 57431764]:
  # DEBUG BEGIN_STMT
  result ={v} 1;

  <bb 27> [local count: 114863528]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _478 ={v} result;
  _591 = _478;
  # DEBUG result => NULL
  # DEBUG timeout => NULL
  _28 = _591;
  _4 = (long unsigned int) _28;
  status.2_5 ={v} status;
  _6 = _4 + status.2_5;
  status ={v} _6;
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY Switch_Core_FIRC
  # DEBUG BEGIN_STMT
  timeout ={v} 65535;
  # DEBUG BEGIN_STMT
  result ={v} 0;
  # DEBUG BEGIN_STMT

  <bb 28> [local count: 1044213897]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _458 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSS;
  _459 = _458 & 65536;
  if (_459 != 0)
    goto <bb 28>; [89.00%]
  else
    goto <bb 29>; [11.00%]

  <bb 29> [local count: 114863528]:
  # DEBUG BEGIN_STMT
  _460 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSC;
  _461 = _460 | 11;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSC ={v} _461;
  # DEBUG BEGIN_STMT

  <bb 30> [local count: 1044213897]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _462 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSS;
  _463 = _462 >> 3;
  _464 = _463 & 1;
  if (_464 == 0)
    goto <bb 30>; [89.00%]
  else
    goto <bb 31>; [11.00%]

  <bb 31> [local count: 1073741806]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _465 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSS;
  _466 = _465 & 65536;
  if (_466 != 0)
    goto <bb 32>; [94.50%]
  else
    goto <bb 33>; [5.50%]

  <bb 32> [local count: 1014686007]:
  timeout.11_467 ={v} timeout;
  _468 = timeout.11_467 + 4294967295;
  timeout ={v} _468;
  if (timeout.11_467 != 0)
    goto <bb 31>; [94.50%]
  else
    goto <bb 33>; [5.50%]

  <bb 33> [local count: 114863529]:
  # DEBUG BEGIN_STMT
  timeout.13_469 ={v} timeout;
  if (timeout.13_469 == 0)
    goto <bb 34>; [50.00%]
  else
    goto <bb 35>; [50.00%]

  <bb 34> [local count: 57431765]:
  # DEBUG BEGIN_STMT
  result ={v} 1;

  <bb 35> [local count: 114863529]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _470 ={v} result;
  _597 = _470;
  # DEBUG result => NULL
  # DEBUG timeout => NULL
  _31 = _597;
  _7 = (long unsigned int) _31;
  status.3_8 ={v} status;
  _9 = _7 + status.3_8;
  status ={v} _9;
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY Init_FXOSC
  # DEBUG BEGIN_STMT
  timeout ={v} 65535;
  # DEBUG BEGIN_STMT
  result ={v} 0;
  # DEBUG BEGIN_STMT
  _433 ={v} MEM[(struct FXOSC_Type *)1076707328B].CTRL;
  _434 = _433 & 4278255615;
  MEM[(struct FXOSC_Type *)1076707328B].CTRL ={v} _434;
  # DEBUG BEGIN_STMT
  _435 ={v} MEM[(struct FXOSC_Type *)1076707328B].CTRL;
  _436 = _435 | 10289152;
  MEM[(struct FXOSC_Type *)1076707328B].CTRL ={v} _436;
  # DEBUG BEGIN_STMT
  _437 ={v} MEM[(struct FXOSC_Type *)1076707328B].CTRL;
  _438 = _437 & 4294967055;
  MEM[(struct FXOSC_Type *)1076707328B].CTRL ={v} _438;
  # DEBUG BEGIN_STMT
  _439 ={v} MEM[(struct FXOSC_Type *)1076707328B].CTRL;
  _440 = _439 | 192;
  MEM[(struct FXOSC_Type *)1076707328B].CTRL ={v} _440;
  # DEBUG BEGIN_STMT
  _441 ={v} MEM[(struct FXOSC_Type *)1076707328B].CTRL;
  _442 = _441 & 2147483647;
  MEM[(struct FXOSC_Type *)1076707328B].CTRL ={v} _442;
  # DEBUG BEGIN_STMT
  _443 ={v} MEM[(struct FXOSC_Type *)1076707328B].CTRL;
  MEM[(struct FXOSC_Type *)1076707328B].CTRL ={v} _443;
  # DEBUG BEGIN_STMT
  _444 ={v} MEM[(struct FXOSC_Type *)1076707328B].CTRL;
  _445 = _444 & 4278190079;
  MEM[(struct FXOSC_Type *)1076707328B].CTRL ={v} _445;
  # DEBUG BEGIN_STMT
  _446 ={v} MEM[(struct FXOSC_Type *)1076707328B].CTRL;
  _447 = _446 | 16777216;
  MEM[(struct FXOSC_Type *)1076707328B].CTRL ={v} _447;
  # DEBUG BEGIN_STMT
  _448 ={v} MEM[(struct FXOSC_Type *)1076707328B].CTRL;
  _449 = _448 & 4294967294;
  MEM[(struct FXOSC_Type *)1076707328B].CTRL ={v} _449;
  # DEBUG BEGIN_STMT
  _450 ={v} MEM[(struct FXOSC_Type *)1076707328B].CTRL;
  _451 = _450 | 1;
  MEM[(struct FXOSC_Type *)1076707328B].CTRL ={v} _451;
  # DEBUG BEGIN_STMT

  <bb 36> [local count: 1073741816]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _452 ={v} MEM[(struct FXOSC_Type *)1076707328B].STAT;
  _453 = _452 >> 31;
  if (_453 != 1)
    goto <bb 37>; [94.50%]
  else
    goto <bb 38>; [5.50%]

  <bb 37> [local count: 1014686017]:
  timeout.14_454 ={v} timeout;
  _455 = timeout.14_454 + 4294967295;
  timeout ={v} _455;
  if (timeout.14_454 != 0)
    goto <bb 36>; [94.50%]
  else
    goto <bb 38>; [5.50%]

  <bb 38> [local count: 114863530]:
  # DEBUG BEGIN_STMT
  timeout.16_456 ={v} timeout;
  if (timeout.16_456 == 0)
    goto <bb 39>; [50.00%]
  else
    goto <bb 40>; [50.00%]

  <bb 39> [local count: 57431765]:
  # DEBUG BEGIN_STMT
  result ={v} 1;

  <bb 40> [local count: 114863530]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _457 ={v} result;
  _612 = _457;
  # DEBUG result => NULL
  # DEBUG timeout => NULL
  _34 = _612;
  _10 = (long unsigned int) _34;
  status.4_11 ={v} status;
  _12 = _10 + status.4_11;
  status ={v} _12;
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY Init_PLL
  # DEBUG BEGIN_STMT
  timeout ={v} 65535;
  # DEBUG BEGIN_STMT
  result ={v} 0;
  # DEBUG BEGIN_STMT
  _348 ={v} MEM[(struct PLL_Type *)1076756480B].PLLODIV[0];
  _349 = _348 & 2147483647;
  MEM[(struct PLL_Type *)1076756480B].PLLODIV[0] ={v} _349;
  # DEBUG BEGIN_STMT
  _350 ={v} MEM[(struct PLL_Type *)1076756480B].PLLODIV[0];
  MEM[(struct PLL_Type *)1076756480B].PLLODIV[0] ={v} _350;
  # DEBUG BEGIN_STMT
  _351 ={v} MEM[(struct PLL_Type *)1076756480B].PLLODIV[1];
  _352 = _351 & 2147483647;
  MEM[(struct PLL_Type *)1076756480B].PLLODIV[1] ={v} _352;
  # DEBUG BEGIN_STMT
  _353 ={v} MEM[(struct PLL_Type *)1076756480B].PLLODIV[1];
  MEM[(struct PLL_Type *)1076756480B].PLLODIV[1] ={v} _353;
  # DEBUG BEGIN_STMT
  _354 ={v} MEM[(struct PLL_Type *)1076756480B].PLLCR;
  _355 = _354 & 2147483647;
  MEM[(struct PLL_Type *)1076756480B].PLLCR ={v} _355;
  # DEBUG BEGIN_STMT
  _356 ={v} MEM[(struct PLL_Type *)1076756480B].PLLCR;
  _357 = _356 | 2147483648;
  MEM[(struct PLL_Type *)1076756480B].PLLCR ={v} _357;
  # DEBUG BEGIN_STMT
  _358 ={v} MEM[(struct PLL_Type *)1076756480B].PLLDV;
  _359 = _358 & 2181038079;
  MEM[(struct PLL_Type *)1076756480B].PLLDV ={v} _359;
  # DEBUG BEGIN_STMT
  _360 ={v} MEM[(struct PLL_Type *)1076756480B].PLLDV;
  MEM[(struct PLL_Type *)1076756480B].PLLDV ={v} _360;
  # DEBUG BEGIN_STMT
  _361 ={v} MEM[(struct PLL_Type *)1076756480B].PLLDV;
  _362 = _361 & 4294938623;
  MEM[(struct PLL_Type *)1076756480B].PLLDV ={v} _362;
  # DEBUG BEGIN_STMT
  _363 ={v} MEM[(struct PLL_Type *)1076756480B].PLLDV;
  _364 = _363 | 4096;
  MEM[(struct PLL_Type *)1076756480B].PLLDV ={v} _364;
  # DEBUG BEGIN_STMT
  _365 ={v} MEM[(struct PLL_Type *)1076756480B].PLLDV;
  _366 = _365 & 4294967040;
  MEM[(struct PLL_Type *)1076756480B].PLLDV ={v} _366;
  # DEBUG BEGIN_STMT
  _367 ={v} MEM[(struct PLL_Type *)1076756480B].PLLDV;
  _368 = _367 | 30;
  MEM[(struct PLL_Type *)1076756480B].PLLDV ={v} _368;
  # DEBUG BEGIN_STMT
  _369 ={v} MEM[(struct PLL_Type *)1076756480B].PLLFD;
  _370 = _369 & 3221225471;
  MEM[(struct PLL_Type *)1076756480B].PLLFD ={v} _370;
  # DEBUG BEGIN_STMT
  _371 ={v} MEM[(struct PLL_Type *)1076756480B].PLLFD;
  MEM[(struct PLL_Type *)1076756480B].PLLFD ={v} _371;
  # DEBUG BEGIN_STMT
  _372 ={v} MEM[(struct PLL_Type *)1076756480B].PLLFD;
  _373 = _372 & 3758096383;
  MEM[(struct PLL_Type *)1076756480B].PLLFD ={v} _373;
  # DEBUG BEGIN_STMT
  _374 ={v} MEM[(struct PLL_Type *)1076756480B].PLLFD;
  _375 = _374 | 536870912;
  MEM[(struct PLL_Type *)1076756480B].PLLFD ={v} _375;
  # DEBUG BEGIN_STMT
  _376 ={v} MEM[(struct PLL_Type *)1076756480B].PLLFD;
  _377 = _376 & 4026531839;
  MEM[(struct PLL_Type *)1076756480B].PLLFD ={v} _377;
  # DEBUG BEGIN_STMT
  _378 ={v} MEM[(struct PLL_Type *)1076756480B].PLLFD;
  _379 = _378 | 268435456;
  MEM[(struct PLL_Type *)1076756480B].PLLFD ={v} _379;
  # DEBUG BEGIN_STMT
  _380 ={v} MEM[(struct PLL_Type *)1076756480B].PLLFD;
  _381 = _380 & 4294934528;
  MEM[(struct PLL_Type *)1076756480B].PLLFD ={v} _381;
  # DEBUG BEGIN_STMT
  _382 ={v} MEM[(struct PLL_Type *)1076756480B].PLLFD;
  MEM[(struct PLL_Type *)1076756480B].PLLFD ={v} _382;
  # DEBUG BEGIN_STMT
  _383 ={v} MEM[(struct PLL_Type *)1076756480B].PLLFM;
  _384 = _383 & 3221225471;
  MEM[(struct PLL_Type *)1076756480B].PLLFM ={v} _384;
  # DEBUG BEGIN_STMT
  _385 ={v} MEM[(struct PLL_Type *)1076756480B].PLLFM;
  _386 = _385 | 1073741824;
  MEM[(struct PLL_Type *)1076756480B].PLLFM ={v} _386;
  # DEBUG BEGIN_STMT
  _387 ={v} MEM[(struct PLL_Type *)1076756480B].PLLFM;
  _388 = _387 & 4294965248;
  MEM[(struct PLL_Type *)1076756480B].PLLFM ={v} _388;
  # DEBUG BEGIN_STMT
  _389 ={v} MEM[(struct PLL_Type *)1076756480B].PLLFM;
  MEM[(struct PLL_Type *)1076756480B].PLLFM ={v} _389;
  # DEBUG BEGIN_STMT
  _390 ={v} MEM[(struct PLL_Type *)1076756480B].PLLFM;
  _391 = _390 & 3758096383;
  MEM[(struct PLL_Type *)1076756480B].PLLFM ={v} _391;
  # DEBUG BEGIN_STMT
  _392 ={v} MEM[(struct PLL_Type *)1076756480B].PLLFM;
  _393 = _392 | 536870912;
  MEM[(struct PLL_Type *)1076756480B].PLLFM ={v} _393;
  # DEBUG BEGIN_STMT
  _394 ={v} MEM[(struct PLL_Type *)1076756480B].PLLFM;
  _395 = _394 & 4227923967;
  MEM[(struct PLL_Type *)1076756480B].PLLFM ={v} _395;
  # DEBUG BEGIN_STMT
  _396 ={v} MEM[(struct PLL_Type *)1076756480B].PLLFM;
  MEM[(struct PLL_Type *)1076756480B].PLLFM ={v} _396;
  # DEBUG BEGIN_STMT
  _397 ={v} MEM[(struct PLL_Type *)1076756480B].PLLFM;
  _398 = _397 >> 30;
  _399 = _398 & 1;
  if (_399 != 0)
    goto <bb 41>; [50.00%]
  else
    goto <bb 42>; [50.00%]

  <bb 41> [local count: 57431765]:
  # DEBUG BEGIN_STMT
  _400 ={v} MEM[(struct PLL_Type *)1076756480B].PLLCAL2;
  _401 = _400 & 4294966911;
  MEM[(struct PLL_Type *)1076756480B].PLLCAL2 ={v} _401;
  # DEBUG BEGIN_STMT
  _402 ={v} MEM[(struct PLL_Type *)1076756480B].PLLCAL2;
  MEM[(struct PLL_Type *)1076756480B].PLLCAL2 ={v} _402;
  goto <bb 43>; [100.00%]

  <bb 42> [local count: 57431765]:
  # DEBUG BEGIN_STMT
  _403 ={v} MEM[(struct PLL_Type *)1076756480B].PLLCAL2;
  _404 = _403 & 4294966911;
  MEM[(struct PLL_Type *)1076756480B].PLLCAL2 ={v} _404;
  # DEBUG BEGIN_STMT
  _405 ={v} MEM[(struct PLL_Type *)1076756480B].PLLCAL2;
  _406 = _405 | 128;
  MEM[(struct PLL_Type *)1076756480B].PLLCAL2 ={v} _406;

  <bb 43> [local count: 114863530]:
  # DEBUG BEGIN_STMT
  _407 ={v} MEM[(struct PLL_Type *)1076756480B].PLLODIV[0];
  _408 = _407 & 4278255615;
  MEM[(struct PLL_Type *)1076756480B].PLLODIV[0] ={v} _408;
  # DEBUG BEGIN_STMT
  _409 ={v} MEM[(struct PLL_Type *)1076756480B].PLLODIV[0];
  _410 = _409 | 131072;
  MEM[(struct PLL_Type *)1076756480B].PLLODIV[0] ={v} _410;
  # DEBUG BEGIN_STMT
  _411 ={v} MEM[(struct PLL_Type *)1076756480B].PLLODIV[1];
  _412 = _411 & 4278255615;
  MEM[(struct PLL_Type *)1076756480B].PLLODIV[1] ={v} _412;
  # DEBUG BEGIN_STMT
  _413 ={v} MEM[(struct PLL_Type *)1076756480B].PLLODIV[1];
  _414 = _413 | 65536;
  MEM[(struct PLL_Type *)1076756480B].PLLODIV[1] ={v} _414;
  # DEBUG BEGIN_STMT
  _415 ={v} MEM[(struct PLL_Type *)1076756480B].PLLCR;
  _416 = _415 & 2147483647;
  MEM[(struct PLL_Type *)1076756480B].PLLCR ={v} _416;
  # DEBUG BEGIN_STMT
  _417 ={v} MEM[(struct PLL_Type *)1076756480B].PLLCR;
  MEM[(struct PLL_Type *)1076756480B].PLLCR ={v} _417;
  # DEBUG BEGIN_STMT

  <bb 44> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _418 ={v} MEM[(struct PLL_Type *)1076756480B].PLLSR;
  _419 = _418 >> 2;
  _420 = _419 & 1;
  if (_420 == 0)
    goto <bb 45>; [94.50%]
  else
    goto <bb 46>; [5.50%]

  <bb 45> [local count: 1014686025]:
  timeout.17_421 ={v} timeout;
  _422 = timeout.17_421 + 4294967295;
  timeout ={v} _422;
  if (timeout.17_421 != 0)
    goto <bb 44>; [94.50%]
  else
    goto <bb 46>; [5.50%]

  <bb 46> [local count: 114863531]:
  # DEBUG BEGIN_STMT
  timeout.19_423 ={v} timeout;
  if (timeout.19_423 == 0)
    goto <bb 47>; [50.00%]
  else
    goto <bb 48>; [50.00%]

  <bb 47> [local count: 57431766]:
  # DEBUG BEGIN_STMT
  result ={v} 1;

  <bb 48> [local count: 114863531]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _424 ={v} MEM[(struct PLL_Type *)1076756480B].PLLODIV[0];
  _425 = _424 & 2147483647;
  MEM[(struct PLL_Type *)1076756480B].PLLODIV[0] ={v} _425;
  # DEBUG BEGIN_STMT
  _426 ={v} MEM[(struct PLL_Type *)1076756480B].PLLODIV[0];
  _427 = _426 | 2147483648;
  MEM[(struct PLL_Type *)1076756480B].PLLODIV[0] ={v} _427;
  # DEBUG BEGIN_STMT
  _428 ={v} MEM[(struct PLL_Type *)1076756480B].PLLODIV[1];
  _429 = _428 & 2147483647;
  MEM[(struct PLL_Type *)1076756480B].PLLODIV[1] ={v} _429;
  # DEBUG BEGIN_STMT
  _430 ={v} MEM[(struct PLL_Type *)1076756480B].PLLODIV[1];
  _431 = _430 | 2147483648;
  MEM[(struct PLL_Type *)1076756480B].PLLODIV[1] ={v} _431;
  # DEBUG BEGIN_STMT
  _432 ={v} result;
  _659 = _432;
  # DEBUG result => NULL
  # DEBUG timeout => NULL
  _37 = _659;
  _13 = (long unsigned int) _37;
  status.5_14 ={v} status;
  _15 = _13 + status.5_14;
  status ={v} _15;
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY Init_PMC
  # DEBUG BEGIN_STMT
  timeout ={v} 65535;
  # DEBUG BEGIN_STMT
  result ={v} 0;
  # DEBUG BEGIN_STMT
  MEM[(struct PMC_Type *)1076789248B].LVSC ={v} 4294967295;
  # DEBUG BEGIN_STMT
  _340 ={v} MEM[(struct PMC_Type *)1076789248B].VERID;
  _341 = _340 & 1;
  if (_341 != 0)
    goto <bb 49>; [50.00%]
  else
    goto <bb 52>; [50.00%]

  <bb 49> [local count: 57431766]:
  # DEBUG BEGIN_STMT
  _342 ={v} MEM[(struct PMC_Type *)1076789248B].CONFIG;
  _343 = _342 & 4294967291;
  MEM[(struct PMC_Type *)1076789248B].CONFIG ={v} _343;
  # DEBUG BEGIN_STMT
  _344 ={v} MEM[(struct PMC_Type *)1076789248B].CONFIG;
  MEM[(struct PMC_Type *)1076789248B].CONFIG ={v} _344;
  # DEBUG BEGIN_STMT

  <bb 50> [local count: 522106963]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  timeout.20_345 ={v} timeout;
  _346 = timeout.20_345 + 4294967295;
  timeout ={v} _346;
  if (timeout.20_345 != 0)
    goto <bb 50>; [89.00%]
  else
    goto <bb 51>; [11.00%]

  <bb 51> [local count: 57431766]:
  # DEBUG BEGIN_STMT
  timeout ={v} 65535;

  <bb 52> [local count: 114863531]:
  # DEBUG BEGIN_STMT
  _347 ={v} result;
  _667 = _347;
  # DEBUG result => NULL
  # DEBUG timeout => NULL
  _40 = _667;
  _16 = (long unsigned int) _40;
  status.6_17 ={v} status;
  _18 = _16 + status.6_17;
  status ={v} _18;
  # DEBUG BEGIN_STMT
  # DEBUG INLINE_ENTRY Init_MC_CGM
  # DEBUG BEGIN_STMT
  _45 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DIV_TRIG_CTRL;
  _46 = _45 & 2147483647;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DIV_TRIG_CTRL ={v} _46;
  # DEBUG BEGIN_STMT
  _47 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DIV_TRIG_CTRL;
  _48 = _47 | 2147483648;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DIV_TRIG_CTRL ={v} _48;
  # DEBUG BEGIN_STMT
  _49 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DIV_TRIG_CTRL;
  _50 = _49 & 4294967294;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DIV_TRIG_CTRL ={v} _50;
  # DEBUG BEGIN_STMT
  _51 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DIV_TRIG_CTRL;
  _52 = _51 | 1;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DIV_TRIG_CTRL ={v} _52;
  # DEBUG BEGIN_STMT
  _53 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_0;
  _54 = _53 & 4294508543;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_0 ={v} _54;
  # DEBUG BEGIN_STMT
  _55 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_0;
  _56 = _55 | 65536;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_0 ={v} _56;
  # DEBUG BEGIN_STMT
  _57 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_1;
  _58 = _57 & 4294508543;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_1 ={v} _58;
  # DEBUG BEGIN_STMT
  _59 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_1;
  _60 = _59 | 65536;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_1 ={v} _60;
  # DEBUG BEGIN_STMT
  _61 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_2;
  _62 = _61 & 4293984255;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_2 ={v} _62;
  # DEBUG BEGIN_STMT
  _63 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_2;
  _64 = _63 | 196608;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_2 ={v} _64;
  # DEBUG BEGIN_STMT
  _65 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_3;
  _66 = _65 & 4294508543;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_3 ={v} _66;
  # DEBUG BEGIN_STMT
  _67 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_3;
  _68 = _67 | 65536;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_3 ={v} _68;
  # DEBUG BEGIN_STMT
  _69 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_4;
  _70 = _69 & 4294508543;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_4 ={v} _70;
  # DEBUG BEGIN_STMT
  _71 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_4;
  _72 = _71 | 196608;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_4 ={v} _72;
  # DEBUG BEGIN_STMT
  _73 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_5;
  _74 = _73 & 4294508543;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_5 ={v} _74;
  # DEBUG BEGIN_STMT
  _75 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_5;
  _76 = _75 | 196608;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_5 ={v} _76;
  # DEBUG BEGIN_STMT
  _77 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_6;
  _78 = _77 & 4294508543;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_6 ={v} _78;
  # DEBUG BEGIN_STMT
  _79 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_6;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_6 ={v} _79;
  # DEBUG BEGIN_STMT
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DIV_TRIG ={v} 4294967295;
  # DEBUG BEGIN_STMT
  _80 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_DC_0;
  _81 = _80 & 4294901759;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_DC_0 ={v} _81;
  # DEBUG BEGIN_STMT
  _82 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_DC_0;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_DC_0 ={v} _82;
  # DEBUG BEGIN_STMT
  _83 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_DC_0;
  _84 = _83 & 4294901759;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_DC_0 ={v} _84;
  # DEBUG BEGIN_STMT
  _85 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_DC_0;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_DC_0 ={v} _85;
  # DEBUG BEGIN_STMT
  _86 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_13_DC_0;
  _87 = _86 & 4294901759;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_13_DC_0 ={v} _87;
  # DEBUG BEGIN_STMT
  _88 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_13_DC_0;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_13_DC_0 ={v} _88;
  # DEBUG BEGIN_STMT
  _89 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_DC_0;
  _90 = _89 & 4294770687;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_DC_0 ={v} _90;
  # DEBUG BEGIN_STMT
  _91 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_DC_0;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_DC_0 ={v} _91;
  # DEBUG BEGIN_STMT
  _92 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_DC_0;
  _93 = _92 & 4294770687;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_DC_0 ={v} _93;
  # DEBUG BEGIN_STMT
  _94 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_DC_0;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_DC_0 ={v} _94;
  # DEBUG BEGIN_STMT
  _95 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_5_DC_0;
  _96 = _95 & 4290838527;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_5_DC_0 ={v} _96;
  # DEBUG BEGIN_STMT
  _97 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_5_DC_0;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_5_DC_0 ={v} _97;
  # DEBUG BEGIN_STMT
  _98 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_6_DC_0;
  _99 = _98 & 4290838527;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_6_DC_0 ={v} _99;
  # DEBUG BEGIN_STMT
  _100 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_6_DC_0;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_6_DC_0 ={v} _100;
  # DEBUG BEGIN_STMT
  _101 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_DC_0;
  _102 = _101 & 4290838527;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_DC_0 ={v} _102;
  # DEBUG BEGIN_STMT
  _103 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_DC_0;
  _104 = _103 | 65536;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_DC_0 ={v} _104;
  # DEBUG BEGIN_STMT
  _105 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_DC_0;
  _106 = _105 & 4290838527;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_DC_0 ={v} _106;
  # DEBUG BEGIN_STMT
  _107 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_DC_0;
  _108 = _107 | 65536;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_DC_0 ={v} _108;
  # DEBUG BEGIN_STMT
  _109 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_DC_0;
  _110 = _109 & 4290838527;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_DC_0 ={v} _110;
  # DEBUG BEGIN_STMT
  _111 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_DC_0;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_DC_0 ={v} _111;
  # DEBUG BEGIN_STMT
  _112 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_DC_0;
  _113 = _112 & 4294508543;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_DC_0 ={v} _113;
  # DEBUG BEGIN_STMT
  _114 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_DC_0;
  _115 = _114 | 131072;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_DC_0 ={v} _115;
  # DEBUG BEGIN_STMT

  <bb 53> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _116 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DIV_UPD_STAT;
  _117 = _116 & 1;
  if (_117 != 0)
    goto <bb 53>; [89.00%]
  else
    goto <bb 54>; [11.00%]

  <bb 54> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _118 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_DIV_UPD_STAT;
  _119 = _118 & 1;
  if (_119 != 0)
    goto <bb 54>; [89.00%]
  else
    goto <bb 55>; [11.00%]

  <bb 55> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _120 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_DIV_UPD_STAT;
  _121 = _120 & 1;
  if (_121 != 0)
    goto <bb 55>; [89.00%]
  else
    goto <bb 56>; [11.00%]

  <bb 56> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _122 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_DIV_UPD_STAT;
  _123 = _122 & 1;
  if (_123 != 0)
    goto <bb 56>; [89.00%]
  else
    goto <bb 57>; [11.00%]

  <bb 57> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _124 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_DIV_UPD_STAT;
  _125 = _124 & 1;
  if (_125 != 0)
    goto <bb 57>; [89.00%]
  else
    goto <bb 58>; [11.00%]

  <bb 58> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _126 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_5_DIV_UPD_STAT;
  _127 = _126 & 1;
  if (_127 != 0)
    goto <bb 58>; [89.00%]
  else
    goto <bb 59>; [11.00%]

  <bb 59> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _128 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_6_DIV_UPD_STAT;
  _129 = _128 & 1;
  if (_129 != 0)
    goto <bb 59>; [89.00%]
  else
    goto <bb 60>; [11.00%]

  <bb 60> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _130 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_DIV_UPD_STAT;
  _131 = _130 & 1;
  if (_131 != 0)
    goto <bb 60>; [89.00%]
  else
    goto <bb 61>; [11.00%]

  <bb 61> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _132 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_DIV_UPD_STAT;
  _133 = _132 & 1;
  if (_133 != 0)
    goto <bb 61>; [89.00%]
  else
    goto <bb 62>; [11.00%]

  <bb 62> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _134 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_DIV_UPD_STAT;
  _135 = _134 & 1;
  if (_135 != 0)
    goto <bb 62>; [89.00%]
  else
    goto <bb 63>; [11.00%]

  <bb 63> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _136 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_DIV_UPD_STAT;
  _137 = _136 & 1;
  if (_137 != 0)
    goto <bb 63>; [89.00%]
  else
    goto <bb 64>; [11.00%]

  <bb 64> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _138 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_13_DIV_UPD_STAT;
  _139 = _138 & 1;
  if (_139 != 0)
    goto <bb 64>; [89.00%]
  else
    goto <bb 65>; [11.00%]

  <bb 65> [local count: 114863531]:
  # DEBUG BEGIN_STMT
  _140 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_0;
  _141 = _140 & 2147483647;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_0 ={v} _141;
  # DEBUG BEGIN_STMT
  _142 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_0;
  _143 = _142 | 2147483648;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_0 ={v} _143;
  # DEBUG BEGIN_STMT
  _144 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_1;
  _145 = _144 & 2147483647;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_1 ={v} _145;
  # DEBUG BEGIN_STMT
  _146 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_1;
  _147 = _146 | 2147483648;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_1 ={v} _147;
  # DEBUG BEGIN_STMT
  _148 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_2;
  _149 = _148 & 2147483647;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_2 ={v} _149;
  # DEBUG BEGIN_STMT
  _150 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_2;
  _151 = _150 | 2147483648;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_2 ={v} _151;
  # DEBUG BEGIN_STMT
  _152 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_3;
  _153 = _152 & 2147483647;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_3 ={v} _153;
  # DEBUG BEGIN_STMT
  _154 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_3;
  _155 = _154 | 2147483648;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_3 ={v} _155;
  # DEBUG BEGIN_STMT
  _156 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_4;
  _157 = _156 & 2147483647;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_4 ={v} _157;
  # DEBUG BEGIN_STMT
  _158 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_4;
  _159 = _158 | 2147483648;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_4 ={v} _159;
  # DEBUG BEGIN_STMT
  _160 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_5;
  _161 = _160 & 2147483647;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_5 ={v} _161;
  # DEBUG BEGIN_STMT
  _162 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_5;
  _163 = _162 | 2147483648;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_5 ={v} _163;
  # DEBUG BEGIN_STMT
  _164 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_6;
  _165 = _164 & 2147483647;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_6 ={v} _165;
  # DEBUG BEGIN_STMT
  _166 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_6;
  _167 = _166 | 2147483648;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_DC_6 ={v} _167;
  # DEBUG BEGIN_STMT
  _168 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_DC_0;
  _169 = _168 & 2147483647;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_DC_0 ={v} _169;
  # DEBUG BEGIN_STMT
  _170 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_DC_0;
  _171 = _170 | 2147483648;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_DC_0 ={v} _171;
  # DEBUG BEGIN_STMT
  _172 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_DC_0;
  _173 = _172 & 2147483647;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_DC_0 ={v} _173;
  # DEBUG BEGIN_STMT
  _174 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_DC_0;
  _175 = _174 | 2147483648;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_DC_0 ={v} _175;
  # DEBUG BEGIN_STMT
  _176 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_13_DC_0;
  _177 = _176 & 2147483647;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_13_DC_0 ={v} _177;
  # DEBUG BEGIN_STMT
  _178 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_13_DC_0;
  _179 = _178 | 2147483648;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_13_DC_0 ={v} _179;
  # DEBUG BEGIN_STMT
  _180 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_DC_0;
  _181 = _180 & 2147483647;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_DC_0 ={v} _181;
  # DEBUG BEGIN_STMT
  _182 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_DC_0;
  _183 = _182 | 2147483648;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_DC_0 ={v} _183;
  # DEBUG BEGIN_STMT
  _184 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_DC_0;
  _185 = _184 & 2147483647;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_DC_0 ={v} _185;
  # DEBUG BEGIN_STMT
  _186 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_DC_0;
  _187 = _186 | 2147483648;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_DC_0 ={v} _187;
  # DEBUG BEGIN_STMT
  _188 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_5_DC_0;
  _189 = _188 & 2147483647;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_5_DC_0 ={v} _189;
  # DEBUG BEGIN_STMT
  _190 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_5_DC_0;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_5_DC_0 ={v} _190;
  # DEBUG BEGIN_STMT
  _191 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_6_DC_0;
  _192 = _191 & 2147483647;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_6_DC_0 ={v} _192;
  # DEBUG BEGIN_STMT
  _193 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_6_DC_0;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_6_DC_0 ={v} _193;
  # DEBUG BEGIN_STMT
  _194 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_DC_0;
  _195 = _194 & 2147483647;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_DC_0 ={v} _195;
  # DEBUG BEGIN_STMT
  _196 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_DC_0;
  _197 = _196 | 2147483648;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_DC_0 ={v} _197;
  # DEBUG BEGIN_STMT
  _198 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_DC_0;
  _199 = _198 & 2147483647;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_DC_0 ={v} _199;
  # DEBUG BEGIN_STMT
  _200 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_DC_0;
  _201 = _200 | 2147483648;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_DC_0 ={v} _201;
  # DEBUG BEGIN_STMT
  _202 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_DC_0;
  _203 = _202 & 2147483647;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_DC_0 ={v} _203;
  # DEBUG BEGIN_STMT
  _204 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_DC_0;
  _205 = _204 | 2147483648;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_DC_0 ={v} _205;
  # DEBUG BEGIN_STMT
  _206 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_DC_0;
  _207 = _206 & 2147483647;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_DC_0 ={v} _207;
  # DEBUG BEGIN_STMT
  _208 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_DC_0;
  _209 = _208 | 2147483648;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_DC_0 ={v} _209;
  # DEBUG BEGIN_STMT
  _210 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSC;
  _211 = _210 & 4043309055;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSC ={v} _211;
  # DEBUG BEGIN_STMT
  _212 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSC;
  _213 = _212 | 134217728;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSC ={v} _213;
  # DEBUG BEGIN_STMT
  _214 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_CSC;
  _215 = _214 & 3774873599;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_CSC ={v} _215;
  # DEBUG BEGIN_STMT
  _216 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_CSC;
  _217 = _216 | 369098752;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_CSC ={v} _217;
  # DEBUG BEGIN_STMT
  _218 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_CSC;
  _219 = _218 & 3774873599;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_CSC ={v} _219;
  # DEBUG BEGIN_STMT
  _220 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_CSC;
  _221 = _220 | 369098752;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_CSC ={v} _221;
  # DEBUG BEGIN_STMT
  _222 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_13_CSC;
  _223 = _222 & 3774873599;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_13_CSC ={v} _223;
  # DEBUG BEGIN_STMT
  _224 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_13_CSC;
  _225 = _224 | 369098752;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_13_CSC ={v} _225;
  # DEBUG BEGIN_STMT
  _226 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_CSC;
  _227 = _226 & 3774873599;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_CSC ={v} _227;
  # DEBUG BEGIN_STMT
  _228 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_CSC;
  _229 = _228 | 369098752;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_CSC ={v} _229;
  # DEBUG BEGIN_STMT
  _230 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_CSC;
  _231 = _230 & 3774873599;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_CSC ={v} _231;
  # DEBUG BEGIN_STMT
  _232 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_CSC;
  _233 = _232 | 369098752;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_CSC ={v} _233;
  # DEBUG BEGIN_STMT
  _234 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_CSC;
  _235 = _234 & 3774873599;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_CSC ={v} _235;
  # DEBUG BEGIN_STMT
  _236 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_CSC;
  _237 = _236 | 402653184;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_CSC ={v} _237;
  # DEBUG BEGIN_STMT
  _238 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_CSC;
  _239 = _238 & 3774873599;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_CSC ={v} _239;
  # DEBUG BEGIN_STMT
  _240 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_CSC;
  _241 = _240 | 402653184;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_CSC ={v} _241;
  # DEBUG BEGIN_STMT
  _242 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_CSC;
  _243 = _242 & 3774873599;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_CSC ={v} _243;
  # DEBUG BEGIN_STMT
  _244 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_CSC;
  _245 = _244 | 402653184;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_CSC ={v} _245;
  # DEBUG BEGIN_STMT
  _246 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_CSC;
  _247 = _246 & 4043309055;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_CSC ={v} _247;
  # DEBUG BEGIN_STMT
  _248 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_CSC;
  _249 = _248 | 150994944;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_CSC ={v} _249;
  # DEBUG BEGIN_STMT
  _250 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSC;
  _251 = _250 & 4294967291;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSC ={v} _251;
  # DEBUG BEGIN_STMT
  _252 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSC;
  _253 = _252 | 7;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSC ={v} _253;
  # DEBUG BEGIN_STMT
  _254 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_CSC;
  _255 = _254 & 4294967291;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_CSC ={v} _255;
  # DEBUG BEGIN_STMT
  _256 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_CSC;
  _257 = _256 | 4;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_CSC ={v} _257;
  # DEBUG BEGIN_STMT
  _258 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_CSC;
  _259 = _258 & 4294967291;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_CSC ={v} _259;
  # DEBUG BEGIN_STMT
  _260 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_CSC;
  _261 = _260 | 4;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_CSC ={v} _261;
  # DEBUG BEGIN_STMT
  _262 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_CSC;
  _263 = _262 & 4294967291;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_CSC ={v} _263;
  # DEBUG BEGIN_STMT
  _264 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_CSC;
  _265 = _264 | 4;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_CSC ={v} _265;
  # DEBUG BEGIN_STMT
  _266 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_CSC;
  _267 = _266 & 4294967291;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_CSC ={v} _267;
  # DEBUG BEGIN_STMT
  _268 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_CSC;
  _269 = _268 | 4;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_CSC ={v} _269;
  # DEBUG BEGIN_STMT
  _270 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_13_CSC;
  _271 = _270 & 4294967291;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_13_CSC ={v} _271;
  # DEBUG BEGIN_STMT
  _272 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_13_CSC;
  _273 = _272 | 4;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_13_CSC ={v} _273;
  # DEBUG BEGIN_STMT
  _274 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_CSC;
  _275 = _274 & 4294967291;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_CSC ={v} _275;
  # DEBUG BEGIN_STMT
  _276 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_CSC;
  _277 = _276 | 4;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_CSC ={v} _277;
  # DEBUG BEGIN_STMT
  _278 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_CSC;
  _279 = _278 & 4294967291;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_CSC ={v} _279;
  # DEBUG BEGIN_STMT
  _280 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_CSC;
  _281 = _280 | 4;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_CSC ={v} _281;
  # DEBUG BEGIN_STMT
  _282 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_CSC;
  _283 = _282 & 4294967291;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_CSC ={v} _283;
  # DEBUG BEGIN_STMT
  _284 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_CSC;
  _285 = _284 | 4;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_CSC ={v} _285;
  # DEBUG BEGIN_STMT
  _286 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_CSC;
  _287 = _286 & 4294967291;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_CSC ={v} _287;
  # DEBUG BEGIN_STMT
  _288 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_CSC;
  _289 = _288 | 4;
  MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_CSC ={v} _289;
  # DEBUG BEGIN_STMT

  <bb 66> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _290 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSS;
  _291 = _290 & 4;
  if (_291 == 0)
    goto <bb 66>; [89.00%]
  else
    goto <bb 67>; [11.00%]

  <bb 67> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _292 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_CSS;
  _293 = _292 & 4;
  if (_293 == 0)
    goto <bb 67>; [89.00%]
  else
    goto <bb 68>; [11.00%]

  <bb 68> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _294 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_CSS;
  _295 = _294 & 4;
  if (_295 == 0)
    goto <bb 68>; [89.00%]
  else
    goto <bb 69>; [11.00%]

  <bb 69> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _296 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_CSS;
  _297 = _296 & 4;
  if (_297 == 0)
    goto <bb 69>; [89.00%]
  else
    goto <bb 70>; [11.00%]

  <bb 70> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _298 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_CSS;
  _299 = _298 & 4;
  if (_299 == 0)
    goto <bb 70>; [89.00%]
  else
    goto <bb 71>; [11.00%]

  <bb 71> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _300 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_13_CSS;
  _301 = _300 & 4;
  if (_301 == 0)
    goto <bb 71>; [89.00%]
  else
    goto <bb 72>; [11.00%]

  <bb 72> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _302 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_CSS;
  _303 = _302 & 4;
  if (_303 == 0)
    goto <bb 72>; [89.00%]
  else
    goto <bb 73>; [11.00%]

  <bb 73> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _304 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_CSS;
  _305 = _304 & 4;
  if (_305 == 0)
    goto <bb 73>; [89.00%]
  else
    goto <bb 74>; [11.00%]

  <bb 74> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _306 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_CSS;
  _307 = _306 & 4;
  if (_307 == 0)
    goto <bb 74>; [89.00%]
  else
    goto <bb 75>; [11.00%]

  <bb 75> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _308 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_CSS;
  _309 = _308 & 4;
  if (_309 == 0)
    goto <bb 75>; [89.00%]
  else
    goto <bb 76>; [11.00%]

  <bb 76> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _310 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_0_CSS;
  _311 = _310 >> 16;
  _312 = _311 & 1;
  if (_312 != 0)
    goto <bb 76>; [89.00%]
  else
    goto <bb 77>; [11.00%]

  <bb 77> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _313 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_1_CSS;
  _314 = _313 >> 16;
  _315 = _314 & 1;
  if (_315 != 0)
    goto <bb 77>; [89.00%]
  else
    goto <bb 78>; [11.00%]

  <bb 78> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _316 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_2_CSS;
  _317 = _316 >> 16;
  _318 = _317 & 1;
  if (_318 != 0)
    goto <bb 78>; [89.00%]
  else
    goto <bb 79>; [11.00%]

  <bb 79> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _319 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_3_CSS;
  _320 = _319 >> 16;
  _321 = _320 & 1;
  if (_321 != 0)
    goto <bb 79>; [89.00%]
  else
    goto <bb 80>; [11.00%]

  <bb 80> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _322 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_4_CSS;
  _323 = _322 >> 16;
  _324 = _323 & 1;
  if (_324 != 0)
    goto <bb 80>; [89.00%]
  else
    goto <bb 81>; [11.00%]

  <bb 81> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _325 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_7_CSS;
  _326 = _325 >> 16;
  _327 = _326 & 1;
  if (_327 != 0)
    goto <bb 81>; [89.00%]
  else
    goto <bb 82>; [11.00%]

  <bb 82> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _328 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_8_CSS;
  _329 = _328 >> 16;
  _330 = _329 & 1;
  if (_330 != 0)
    goto <bb 82>; [89.00%]
  else
    goto <bb 83>; [11.00%]

  <bb 83> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _331 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_9_CSS;
  _332 = _331 >> 16;
  _333 = _332 & 1;
  if (_333 != 0)
    goto <bb 83>; [89.00%]
  else
    goto <bb 84>; [11.00%]

  <bb 84> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _334 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_10_CSS;
  _335 = _334 >> 16;
  _336 = _335 & 1;
  if (_336 != 0)
    goto <bb 84>; [89.00%]
  else
    goto <bb 85>; [11.00%]

  <bb 85> [local count: 1044213926]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _337 ={v} MEM[(struct MC_CGM_Type *)1076723712B].MUX_13_CSS;
  _338 = _337 >> 16;
  _339 = _338 & 1;
  if (_339 != 0)
    goto <bb 85>; [89.00%]
  else
    goto <bb 86>; [11.00%]

  <bb 86> [local count: 114863531]:
  # DEBUG BEGIN_STMT
  _785 = 0;
  _43 = _785;
  _19 = (long unsigned int) _43;
  status.7_20 ={v} status;
  _21 = _19 + status.7_20;
  status ={v} _21;
  # DEBUG BEGIN_STMT
  return 0;

}



;; Function sys_halt (sys_halt, funcdef_no=13, decl_uid=5998, cgraph_uid=14, symbol_order=13)


Saving body of sys_halt/13 for later reuse
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1

Symbols to be put in SSA form
{ D.10030 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 4
Number of blocks to update: 3 ( 75%)


sys_halt ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("  wfi");
  # DEBUG BEGIN_STMT
  return;

}



;; Function sys_stop (sys_stop, funcdef_no=17, decl_uid=6000, cgraph_uid=15, symbol_order=14)


Symbols to be put in SSA form
{ D.9992 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 6
Number of blocks to update: 5 ( 83%)


Merging blocks 2 and 4
Merging blocks 2 and 5
Merging blocks 2 and 3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }
sys_stop ()
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("  wfi");
  # DEBUG BEGIN_STMT
  return;

}



;; Function EUnit_GetCoreID (EUnit_GetCoreID, funcdef_no=15, decl_uid=6002, cgraph_uid=16, symbol_order=15)

EUnit_GetCoreID ()
{
  uint8 _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _3 = Sys_GetCoreID ();
  return _3;

}


