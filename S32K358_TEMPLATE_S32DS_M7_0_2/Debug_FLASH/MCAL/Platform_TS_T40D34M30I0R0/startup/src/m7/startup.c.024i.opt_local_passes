init_data_bss_core2 ()
{
  const uint32 * initTable_Ptr;
  uint32 j;
  uint32 i;
  uint32 size;
  uint32 len;
  uint8 dataPad;
  uint8 * ram8;
  uint32 * ram;
  const uint8 * rom8;
  const uint32 * rom;
  const struct Sys_CopyLayoutType * copy_layout;
  long unsigned int _1;
  const struct Sys_CopyLayoutType * _2;
  long unsigned int _3;
  const struct Sys_CopyLayoutType * _4;
  long unsigned int _5;
  const struct Sys_CopyLayoutType * _6;
  uint32 * _7;
  long unsigned int _8;
  long unsigned int _9;
  const struct Sys_CopyLayoutType * _10;
  uint32 * _11;
  long unsigned int _12;
  unsigned char _13;
  long unsigned int _14;
  const uint32 * _15;
  long unsigned int _16;
  uint32 * _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  const uint8 * _24;
  uint8 * _25;
  unsigned char _26;
  long unsigned int _27;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  len_34 = 0;
  # DEBUG len => len_34
  # DEBUG BEGIN_STMT
  size_35 = 0;
  # DEBUG size => size_35
  # DEBUG BEGIN_STMT
  i_36 = 0;
  # DEBUG i => i_36
  # DEBUG BEGIN_STMT
  j_37 = 0;
  # DEBUG j => j_37
  # DEBUG BEGIN_STMT
  initTable_Ptr_38 = &__INIT_TABLE;
  # DEBUG initTable_Ptr => initTable_Ptr_38
  # DEBUG BEGIN_STMT
  len_40 = *initTable_Ptr_38;
  # DEBUG len => len_40
  # DEBUG BEGIN_STMT
  initTable_Ptr_41 = initTable_Ptr_38 + 4;
  # DEBUG initTable_Ptr => initTable_Ptr_41
  # DEBUG BEGIN_STMT
  copy_layout_42 = initTable_Ptr_41;
  # DEBUG copy_layout => copy_layout_42
  # DEBUG BEGIN_STMT
  i_43 = (uint32) &__INDEX_COPY_CORE2;
  # DEBUG i => i_43
  goto <bb 10>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = i_28 * 12;
  _2 = copy_layout_42 + _1;
  rom_44 = _2->rom_start;
  # DEBUG rom => rom_44
  # DEBUG BEGIN_STMT
  _3 = i_28 * 12;
  _4 = copy_layout_42 + _3;
  ram_45 = _4->ram_start;
  # DEBUG ram => ram_45
  # DEBUG BEGIN_STMT
  _5 = i_28 * 12;
  _6 = copy_layout_42 + _5;
  _7 = _6->rom_end;
  _8 = (long unsigned int) _7;
  _9 = i_28 * 12;
  _10 = copy_layout_42 + _9;
  _11 = _10->rom_start;
  _12 = (long unsigned int) _11;
  size_46 = _8 - _12;
  # DEBUG size => size_46
  # DEBUG BEGIN_STMT
  _13 = (unsigned char) size_46;
  dataPad_47 = _13 & 3;
  # DEBUG dataPad => dataPad_47
  # DEBUG BEGIN_STMT
  j_48 = 0;
  # DEBUG j => j_48
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _14 = j_29 * 4;
  _15 = rom_44 + _14;
  _16 = j_29 * 4;
  _17 = ram_45 + _16;
  _18 = *_15;
  *_17 = _18;
  # DEBUG BEGIN_STMT
  j_56 = j_29 + 1;
  # DEBUG j => j_56

  <bb 5> :
  # j_29 = PHI <j_48(3), j_56(4)>
  # DEBUG j => j_29
  # DEBUG BEGIN_STMT
  _19 = (long unsigned int) dataPad_47;
  _20 = size_46 - _19;
  _21 = _20 >> 2;
  if (j_29 < _21)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _22 = j_29 * 4;
  rom8_49 = rom_44 + _22;
  # DEBUG rom8 => rom8_49
  # DEBUG BEGIN_STMT
  _23 = j_29 * 4;
  ram8_50 = ram_45 + _23;
  # DEBUG ram8 => ram8_50
  # DEBUG BEGIN_STMT
  j_51 = 0;
  # DEBUG j => j_51
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _24 = rom8_49 + j_30;
  _25 = ram8_50 + j_30;
  _26 = *_24;
  *_25 = _26;
  # DEBUG BEGIN_STMT
  j_54 = j_30 + 1;
  # DEBUG j => j_54

  <bb 8> :
  # j_30 = PHI <j_51(6), j_54(7)>
  # DEBUG j => j_30
  # DEBUG BEGIN_STMT
  _27 = (long unsigned int) dataPad_47;
  if (j_30 < _27)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  i_52 = i_28 + 1;
  # DEBUG i => i_52

  <bb 10> :
  # i_28 = PHI <i_43(2), i_52(9)>
  # DEBUG i => i_28
  # DEBUG BEGIN_STMT
  if (i_28 < len_40)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  return;

}


init_data_bss ()
{
  const uint32 * zeroTable_Ptr;
  const uint32 * initTable_Ptr;
  uint32 j;
  uint32 i;
  uint32 size;
  uint32 len;
  uint8 dataPad;
  uint8 * ram8;
  uint32 * ram;
  const uint8 * rom8;
  const uint32 * rom;
  const struct Sys_ZeroLayoutType * zero_layout;
  const struct Sys_CopyLayoutType * copy_layout;
  long unsigned int _1;
  const struct Sys_CopyLayoutType * _2;
  long unsigned int _3;
  const struct Sys_CopyLayoutType * _4;
  long unsigned int _5;
  const struct Sys_CopyLayoutType * _6;
  uint32 * _7;
  long unsigned int _8;
  long unsigned int _9;
  const struct Sys_CopyLayoutType * _10;
  uint32 * _11;
  long unsigned int _12;
  unsigned char _13;
  long unsigned int _14;
  const uint32 * _15;
  long unsigned int _16;
  uint32 * _17;
  long unsigned int _18;
  long unsigned int _19;
  long unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  const uint8 * _24;
  uint8 * _25;
  unsigned char _26;
  long unsigned int _27;
  long unsigned int _28;
  const struct Sys_ZeroLayoutType * _29;
  long unsigned int _30;
  const struct Sys_ZeroLayoutType * _31;
  uint32 * _32;
  long unsigned int _33;
  long unsigned int _34;
  const struct Sys_ZeroLayoutType * _35;
  uint32 * _36;
  long unsigned int _37;
  long unsigned int _38;
  uint32 * _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  uint32 * _43;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  len_55 = 0;
  # DEBUG len => len_55
  # DEBUG BEGIN_STMT
  size_56 = 0;
  # DEBUG size => size_56
  # DEBUG BEGIN_STMT
  i_57 = 0;
  # DEBUG i => i_57
  # DEBUG BEGIN_STMT
  j_58 = 0;
  # DEBUG j => j_58
  # DEBUG BEGIN_STMT
  initTable_Ptr_59 = &__INIT_TABLE;
  # DEBUG initTable_Ptr => initTable_Ptr_59
  # DEBUG BEGIN_STMT
  zeroTable_Ptr_60 = &__ZERO_TABLE;
  # DEBUG zeroTable_Ptr => zeroTable_Ptr_60
  # DEBUG BEGIN_STMT
  len_62 = *initTable_Ptr_59;
  # DEBUG len => len_62
  # DEBUG BEGIN_STMT
  initTable_Ptr_63 = initTable_Ptr_59 + 4;
  # DEBUG initTable_Ptr => initTable_Ptr_63
  # DEBUG BEGIN_STMT
  copy_layout_64 = initTable_Ptr_63;
  # DEBUG copy_layout => copy_layout_64
  # DEBUG BEGIN_STMT
  i_65 = 0;
  # DEBUG i => i_65
  goto <bb 10>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = i_44 * 12;
  _2 = copy_layout_64 + _1;
  rom_77 = _2->rom_start;
  # DEBUG rom => rom_77
  # DEBUG BEGIN_STMT
  _3 = i_44 * 12;
  _4 = copy_layout_64 + _3;
  ram_78 = _4->ram_start;
  # DEBUG ram => ram_78
  # DEBUG BEGIN_STMT
  _5 = i_44 * 12;
  _6 = copy_layout_64 + _5;
  _7 = _6->rom_end;
  _8 = (long unsigned int) _7;
  _9 = i_44 * 12;
  _10 = copy_layout_64 + _9;
  _11 = _10->rom_start;
  _12 = (long unsigned int) _11;
  size_79 = _8 - _12;
  # DEBUG size => size_79
  # DEBUG BEGIN_STMT
  _13 = (unsigned char) size_79;
  dataPad_80 = _13 & 3;
  # DEBUG dataPad => dataPad_80
  # DEBUG BEGIN_STMT
  j_81 = 0;
  # DEBUG j => j_81
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _14 = j_46 * 4;
  _15 = rom_77 + _14;
  _16 = j_46 * 4;
  _17 = ram_78 + _16;
  _18 = *_15;
  *_17 = _18;
  # DEBUG BEGIN_STMT
  j_89 = j_46 + 1;
  # DEBUG j => j_89

  <bb 5> :
  # j_46 = PHI <j_81(3), j_89(4)>
  # DEBUG j => j_46
  # DEBUG BEGIN_STMT
  _19 = (long unsigned int) dataPad_80;
  _20 = size_79 - _19;
  _21 = _20 >> 2;
  if (j_46 < _21)
    goto <bb 4>; [INV]
  else
    goto <bb 6>; [INV]

  <bb 6> :
  # DEBUG BEGIN_STMT
  _22 = j_46 * 4;
  rom8_82 = rom_77 + _22;
  # DEBUG rom8 => rom8_82
  # DEBUG BEGIN_STMT
  _23 = j_46 * 4;
  ram8_83 = ram_78 + _23;
  # DEBUG ram8 => ram8_83
  # DEBUG BEGIN_STMT
  j_84 = 0;
  # DEBUG j => j_84
  goto <bb 8>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  _24 = rom8_82 + j_47;
  _25 = ram8_83 + j_47;
  _26 = *_24;
  *_25 = _26;
  # DEBUG BEGIN_STMT
  j_87 = j_47 + 1;
  # DEBUG j => j_87

  <bb 8> :
  # j_47 = PHI <j_84(6), j_87(7)>
  # DEBUG j => j_47
  # DEBUG BEGIN_STMT
  _27 = (long unsigned int) dataPad_80;
  if (j_47 < _27)
    goto <bb 7>; [INV]
  else
    goto <bb 9>; [INV]

  <bb 9> :
  # DEBUG BEGIN_STMT
  i_85 = i_44 + 1;
  # DEBUG i => i_85

  <bb 10> :
  # i_44 = PHI <i_65(2), i_85(9)>
  # DEBUG i => i_44
  # DEBUG BEGIN_STMT
  if (i_44 < len_62)
    goto <bb 3>; [INV]
  else
    goto <bb 11>; [INV]

  <bb 11> :
  # DEBUG BEGIN_STMT
  len_66 = *zeroTable_Ptr_60;
  # DEBUG len => len_66
  # DEBUG BEGIN_STMT
  zeroTable_Ptr_67 = zeroTable_Ptr_60 + 4;
  # DEBUG zeroTable_Ptr => zeroTable_Ptr_67
  # DEBUG BEGIN_STMT
  zero_layout_68 = zeroTable_Ptr_67;
  # DEBUG zero_layout => zero_layout_68
  # DEBUG BEGIN_STMT
  i_69 = 0;
  # DEBUG i => i_69
  goto <bb 18>; [INV]

  <bb 12> :
  # DEBUG BEGIN_STMT
  _28 = i_45 * 8;
  _29 = zero_layout_68 + _28;
  ram_70 = _29->ram_start;
  # DEBUG ram => ram_70
  # DEBUG BEGIN_STMT
  _30 = i_45 * 8;
  _31 = zero_layout_68 + _30;
  _32 = _31->ram_end;
  _33 = (long unsigned int) _32;
  _34 = i_45 * 8;
  _35 = zero_layout_68 + _34;
  _36 = _35->ram_start;
  _37 = (long unsigned int) _36;
  size_71 = _33 - _37;
  # DEBUG size => size_71
  # DEBUG BEGIN_STMT
  j_72 = 0;
  # DEBUG j => j_72
  goto <bb 14>; [INV]

  <bb 13> :
  # DEBUG BEGIN_STMT
  _38 = j_48 * 4;
  _39 = ram_70 + _38;
  *_39 = 0;
  # DEBUG BEGIN_STMT
  j_76 = j_48 + 1;
  # DEBUG j => j_76

  <bb 14> :
  # j_48 = PHI <j_72(12), j_76(13)>
  # DEBUG j => j_48
  # DEBUG BEGIN_STMT
  _40 = size_71 >> 2;
  if (j_48 < _40)
    goto <bb 13>; [INV]
  else
    goto <bb 15>; [INV]

  <bb 15> :
  # DEBUG BEGIN_STMT
  _41 = size_71 & 3;
  if (_41 != 0)
    goto <bb 16>; [INV]
  else
    goto <bb 17>; [INV]

  <bb 16> :
  # DEBUG BEGIN_STMT
  _42 = j_48 * 4;
  _43 = ram_70 + _42;
  *_43 = 0;

  <bb 17> :
  # DEBUG BEGIN_STMT
  i_74 = i_45 + 1;
  # DEBUG i => i_74

  <bb 18> :
  # i_45 = PHI <i_69(11), i_74(17)>
  # DEBUG i => i_45
  # DEBUG BEGIN_STMT
  if (i_45 < len_66)
    goto <bb 12>; [INV]
  else
    goto <bb 19>; [INV]

  <bb 19> :
  return;

}


