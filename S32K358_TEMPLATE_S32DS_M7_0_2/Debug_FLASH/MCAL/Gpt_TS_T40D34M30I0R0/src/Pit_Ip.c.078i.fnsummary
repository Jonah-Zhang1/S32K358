
Analyzing function: PIT_0_ISR/31
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;;
;; Loop 1
;;  header 4, latch 3
;;  depth 1, outer 0
;;  nodes: 4 3
;; 2 succs { 4 }
;; 3 succs { 4 }
;; 4 succs { 3 5 }
;; 5 succs { 1 }

Analyzing function body size: PIT_0_ISR/31

IPA function summary for PIT_0_ISR/31 inlinable
  global time:     63.999999
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:14.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Pit_Ip_ProcessCommonInterrupt/19 function not considered for inlining
      freq:4.00 loop depth: 1 size: 3 time: 12
       op0 is compile time invariant


Analyzing function: Pit_Ip_GetLifetimeTimer/30
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Pit_Ip_GetLifetimeTimer/30
		Accounting address calculation.

IPA function summary for Pit_Ip_GetLifetimeTimer/30 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:5.000000, time:5.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:


Analyzing function: Pit_Ip_SetLifetimeTimer/29
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Pit_Ip_SetLifetimeTimer/29
		Accounting address calculation.

IPA function summary for Pit_Ip_SetLifetimeTimer/29 inlinable
  global time:     58.000000
  self size:       23
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:3.000000, time:3.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
  calls:
    Pit_Ip_EnableTimer/7 function not considered for inlining
      freq:1.00 loop depth: 0 size: 4 time: 13
       op1 is compile time invariant
       op2 is compile time invariant
    Pit_Ip_EnableTimer/7 function not considered for inlining
      freq:1.00 loop depth: 0 size: 4 time: 13
       op1 is compile time invariant
       op2 is compile time invariant
    Pit_Ip_SetChainMode/9 function not considered for inlining
      freq:1.00 loop depth: 0 size: 4 time: 13
       op1 is compile time invariant
       op2 is compile time invariant
    Pit_Ip_SetEnableInterruptFlag/14 function not considered for inlining
      freq:1.00 loop depth: 0 size: 4 time: 13
       op1 is compile time invariant
       op2 is compile time invariant


Analyzing function: Pit_Ip_ChangeNextTimeoutValue/28
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: Pit_Ip_ChangeNextTimeoutValue/28
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for Pit_Ip_ChangeNextTimeoutValue/28 inlinable
  global time:     13.500000
  self size:       18
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:10.000000, time:7.500000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:1.500000,  nonconst if:(op0 changed)
    size:2.000000, time:1.500000,  nonconst if:(op1 changed)
    size:1.000000, time:1.000000,  nonconst if:(op2 changed)
  calls:


Analyzing function: Pit_Ip_DisableChannelInterrupt/27
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Pit_Ip_DisableChannelInterrupt/27

IPA function summary for Pit_Ip_DisableChannelInterrupt/27 inlinable
  global time:     27.000000
  self size:       10
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Pit_Ip_ClearInterruptStatusFlag/15 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12
    Pit_Ip_SetEnableInterruptFlag/14 function not considered for inlining
      freq:1.00 loop depth: 0 size: 4 time: 13
       op2 is compile time invariant


Analyzing function: Pit_Ip_EnableChannelInterrupt/26
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Pit_Ip_EnableChannelInterrupt/26

IPA function summary for Pit_Ip_EnableChannelInterrupt/26 inlinable
  global time:     27.000000
  self size:       10
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Pit_Ip_SetEnableInterruptFlag/14 function not considered for inlining
      freq:1.00 loop depth: 0 size: 4 time: 13
       op2 is compile time invariant
    Pit_Ip_ClearInterruptStatusFlag/15 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12


Analyzing function: Pit_Ip_GetCurrentTimer/25
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Pit_Ip_GetCurrentTimer/25
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for Pit_Ip_GetCurrentTimer/25 inlinable
  global time:     6.000000
  self size:       7
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:


Analyzing function: Pit_Ip_StopChannel/24
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Pit_Ip_StopChannel/24

IPA function summary for Pit_Ip_StopChannel/24 inlinable
  global time:     27.000000
  self size:       10
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Pit_Ip_ClearInterruptStatusFlag/15 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12
    Pit_Ip_EnableTimer/7 function not considered for inlining
      freq:1.00 loop depth: 0 size: 4 time: 13
       op2 is compile time invariant


Analyzing function: Pit_Ip_StartChannel/23
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: Pit_Ip_StartChannel/23
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for Pit_Ip_StartChannel/23 inlinable
  global time:     13.610000
  self size:       17
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:6.000000, time:4.660000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:2.000000, time:1.330000,  nonconst if:(op1 changed)
    size:1.000000, time:0.330000,  nonconst if:(op2 changed)
  calls:
    Pit_Ip_EnableTimer/7 function not considered for inlining
      freq:0.33 loop depth: 0 size: 4 time: 13
       op2 is compile time invariant


Analyzing function: Pit_Ip_Deinit/22
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }

Analyzing function body size: Pit_Ip_Deinit/22
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for Pit_Ip_Deinit/22 inlinable
  global time:     20.000000
  self size:       14
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:2.000000, time:1.000000,  executed if:(op0 <= 2)
    size:2.000000, time:1.000000,  executed if:(op0 <= 2),  nonconst if:(op0 changed) && (op0 <= 2)
  calls:
    Pit_Ip_Reset/10 function not considered for inlining
      freq:1.00 loop depth: 0 size: 5 time: 14


Analyzing function: Pit_Ip_InitChannel/21
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Pit_Ip_InitChannel/21
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for Pit_Ip_InitChannel/21 inlinable
  global time:     59.000000
  self size:       33
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:11.000000, time:11.000000
    size:6.000000, time:5.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:4.000000, time:4.000000,  nonconst if:(op0 changed)
  calls:
    Pit_Ip_ClearInterruptStatusFlag/15 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12
    Pit_Ip_SetEnableInterruptFlag/14 function not considered for inlining
      freq:1.00 loop depth: 0 size: 4 time: 13
       op2 is compile time invariant
    Pit_Ip_EnableTimer/7 function not considered for inlining
      freq:1.00 loop depth: 0 size: 4 time: 13
       op2 is compile time invariant


Analyzing function: Pit_Ip_Init/20
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: Pit_Ip_Init/20

IPA function summary for Pit_Ip_Init/20 inlinable
  global time:     21.960000
  self size:       13
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.500000, time:0.500000
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 0] changed)
  calls:
    Pit_Ip_SetDebugMode/8 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12
    Pit_Ip_EnableModule/6 function not considered for inlining
      freq:0.33 loop depth: 0 size: 3 time: 12 predicate: (op1[ref offset: 0] != 0)
       op1 is compile time invariant


Analyzing function: Pit_Ip_ProcessCommonInterrupt/19
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 3 14 }
;; 3 succs { 4 14 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 14 }
;; 8 succs { 9 14 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 14 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 1 }

Analyzing function body size: Pit_Ip_ProcessCommonInterrupt/19
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for Pit_Ip_ProcessCommonInterrupt/19 inlinable
  global time:     14.939138
  self size:       53
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:2.000000, time:1.000000,  executed if:(op0 <= 2),  nonconst if:(op1 changed) && (op0 <= 2)
    size:18.000000, time:1.361250,  executed if:(op1 <= 3) && (op0 <= 2)
    size:4.000000, time:0.165000,  executed if:(op1 <= 3) && (op0 <= 2),  nonconst if:(op1 changed) && (op1 <= 3) && (op0 <= 2)
    size:4.000000, time:0.165000,  executed if:(op1 <= 3) && (op0 <= 2),  nonconst if:(op0 changed) && (op1 <= 3) && (op0 <= 2)
  calls:
    Pit_Ip_StopChannel/24 function not considered for inlining
      freq:0.01 loop depth: 0 size: 3 time: 12 callee size: 5 stack: 0 predicate: (op1 <= 3) && (op0 <= 2)
    SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_03/39 function body not available
      freq:0.16 loop depth: 0 size: 1 time: 10 predicate: (op1 <= 3) && (op0 <= 2)
    Pit_Ip_ClearInterruptStatusFlag/15 function not considered for inlining
      freq:0.03 loop depth: 0 size: 3 time: 12 predicate: (op1 <= 3) && (op0 <= 2)
    Pit_Ip_GetInterruptStatusFlag/0 function not considered for inlining
      freq:0.16 loop depth: 0 size: 4 time: 13 predicate: (op1 <= 3) && (op0 <= 2)
    Pit_Ip_GetInterruptEnableFlag/18 function not considered for inlining
      freq:0.16 loop depth: 0 size: 4 time: 13 predicate: (op1 <= 3) && (op0 <= 2)
    SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_03/38 function body not available
      freq:0.16 loop depth: 0 size: 1 time: 10 predicate: (op1 <= 3) && (op0 <= 2)
    indirect call loop depth: 0 freq:0.01 size: 4 time: 16predicate: (op1 <= 3) && (op0 <= 2)


Analyzing function: Pit_Ip_GetInterruptEnableFlag/18
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Pit_Ip_GetInterruptEnableFlag/18
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for Pit_Ip_GetInterruptEnableFlag/18 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:


Analyzing function: Pit_Ip_ClearInterruptStatusFlag/15
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Pit_Ip_ClearInterruptStatusFlag/15
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for Pit_Ip_ClearInterruptStatusFlag/15 inlinable
  global time:     9.000000
  self size:       10
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
  calls:


Analyzing function: Pit_Ip_SetEnableInterruptFlag/14
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }

Analyzing function body size: Pit_Ip_SetEnableInterruptFlag/14
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for Pit_Ip_SetEnableInterruptFlag/14 inlinable
  global time:     31.000000
  self size:       21
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op2 changed)
    size:4.000000, time:2.000000,  executed if:(op2 == 0)
    size:1.000000, time:0.500000,  executed if:(op2 == 0),  nonconst if:(op0 changed) && (op2 == 0)
    size:2.000000, time:1.000000,  executed if:(op2 == 0),  nonconst if:(op1 changed) && (op2 == 0)
    size:4.000000, time:2.000000,  executed if:(op2 != 0)
    size:1.000000, time:0.500000,  executed if:(op2 != 0),  nonconst if:(op0 changed) && (op2 != 0)
    size:2.000000, time:1.000000,  executed if:(op2 != 0),  nonconst if:(op1 changed) && (op2 != 0)
  calls:
    SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_02/35 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_02/34 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10


Analyzing function: Pit_Ip_Reset/10
;; 2 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10
;;
;; Loop 1
;;  header 9, latch 8
;;  depth 1, outer 0
;;  nodes: 9 8
;; 2 succs { 3 5 }
;; 3 succs { 7 4 }
;; 4 succs { 7 }
;; 5 succs { 7 6 }
;; 6 succs { 7 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 8 10 }
;; 10 succs { 1 }

Analyzing function body size: Pit_Ip_Reset/10
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for Pit_Ip_Reset/10 inlinable
  global time:     57.999999
  self size:       29
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:12.000000, time:43.999999
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op2 changed)
    size:2.000000, time:1.000000,  executed if:(op2 == 0),  nonconst if:(op3 changed) && (op2 == 0)
    size:1.000000, time:0.500000,  executed if:(op2 != 0),  nonconst if:(op1 changed) && (op2 != 0)
    size:4.000000, time:2.000000,  executed if:(op2 != 0)
    size:1.000000, time:0.500000,  executed if:(op2 != 0),  nonconst if:(op0 changed) && (op2 != 0)
    size:2.000000, time:1.000000,  executed if:(op2 != 0),  nonconst if:(op3 changed) && (op2 != 0)
    size:2.000000, time:5.000000,  nonconst if:(op0 changed)
  calls:


Analyzing function: Pit_Ip_SetChainMode/9
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6
;; 2 succs { 3 5 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 1 }

Analyzing function body size: Pit_Ip_SetChainMode/9
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for Pit_Ip_SetChainMode/9 inlinable
  global time:     32.000000
  self size:       23
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op2 changed)
    size:2.000000, time:1.000000,  executed if:(op2 != 0),  nonconst if:(op1 changed) && (op2 != 0)
    size:4.000000, time:3.000000,  executed if:(op2 == 0 || op1 == 0)
    size:1.000000, time:0.750000,  executed if:(op2 == 0 || op1 == 0),  nonconst if:(op0 changed) && (op2 == 0 || op1 == 0)
    size:2.000000, time:1.500000,  executed if:(op2 == 0 || op1 == 0),  nonconst if:(op1 changed) && (op2 == 0 || op1 == 0)
    size:4.000000, time:1.000000,  executed if:(op1 != 0) && (op2 != 0)
    size:1.000000, time:0.250000,  executed if:(op1 != 0) && (op2 != 0),  nonconst if:(op0 changed) && (op1 != 0) && (op2 != 0)
    size:2.000000, time:0.500000,  executed if:(op1 != 0) && (op2 != 0),  nonconst if:(op1 changed) && (op1 != 0) && (op2 != 0)
  calls:
    SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_01/37 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_01/36 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10


Analyzing function: Pit_Ip_SetDebugMode/8
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }

Analyzing function body size: Pit_Ip_SetDebugMode/8
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for Pit_Ip_SetDebugMode/8 inlinable
  global time:     9.000000
  self size:       15
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:4.000000, time:2.000000,  executed if:(op1 == 0)
    size:1.000000, time:0.500000,  executed if:(op1 == 0),  nonconst if:(op0 changed) && (op1 == 0)
    size:4.000000, time:2.000000,  executed if:(op1 != 0)
    size:1.000000, time:0.500000,  executed if:(op1 != 0),  nonconst if:(op0 changed) && (op1 != 0)
  calls:


Analyzing function: Pit_Ip_EnableTimer/7
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }

Analyzing function body size: Pit_Ip_EnableTimer/7
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for Pit_Ip_EnableTimer/7 inlinable
  global time:     31.000000
  self size:       21
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op2 changed)
    size:4.000000, time:2.000000,  executed if:(op2 == 0)
    size:1.000000, time:0.500000,  executed if:(op2 == 0),  nonconst if:(op0 changed) && (op2 == 0)
    size:2.000000, time:1.000000,  executed if:(op2 == 0),  nonconst if:(op1 changed) && (op2 == 0)
    size:4.000000, time:2.000000,  executed if:(op2 != 0)
    size:1.000000, time:0.500000,  executed if:(op2 != 0),  nonconst if:(op0 changed) && (op2 != 0)
    size:2.000000, time:1.000000,  executed if:(op2 != 0),  nonconst if:(op1 changed) && (op2 != 0)
  calls:
    SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_00/33 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_00/32 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10


Analyzing function: Pit_Ip_EnableModule/6
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 1 }

Analyzing function body size: Pit_Ip_EnableModule/6
		Accounting address calculation.

IPA function summary for Pit_Ip_EnableModule/6 inlinable
  global time:     6.500000
  self size:       10
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:4.000000, time:2.000000,  executed if:(op1 == 0)
    size:1.000000, time:0.500000,  executed if:(op1 == 0),  nonconst if:(op0 changed) && (op1 == 0)
  calls:


Analyzing function: Pit_Ip_GetLoadValue/5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Pit_Ip_GetLoadValue/5
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for Pit_Ip_GetLoadValue/5 inlinable
  global time:     6.000000
  self size:       7
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:


Analyzing function: Pit_Ip_GetInterruptStatusFlag/0
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }

Analyzing function body size: Pit_Ip_GetInterruptStatusFlag/0
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for Pit_Ip_GetInterruptStatusFlag/0 inlinable
  global time:     7.660000
  self size:       12
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.320000,  executed if:(op1 != 4)
    size:1.000000, time:0.660000,  executed if:(op1 != 4),  nonconst if:(op0 changed) && (op1 != 4)
    size:1.000000, time:0.660000,  executed if:(op1 != 4),  nonconst if:(op1 changed) && (op1 != 4)
    size:2.000000, time:0.680000,  executed if:(op1 == 4)
    size:1.000000, time:0.340000,  executed if:(op1 == 4),  nonconst if:(op0 changed) && (op1 == 4)
  calls:

Symbol table:

Pit_Ip_GetInterruptStatusFlag.constprop.0/50 (Pit_Ip_GetInterruptStatusFlag.constprop) @071b68c0
  Type: function definition analyzed
  Visibility:
  References: pitBase/3 (read) pitBase/3 (read) 
  Referring: 
  Clone of Pit_Ip_GetInterruptStatusFlag/0
  Availability: local
  Function flags: count:1073741824 (estimated locally) local optimize_size
  Called by: Pit_Ip_ProcessCommonInterrupt.constprop.0/46 (177167400 (estimated locally),0.16 per call) 
  Calls: 
Pit_Ip_EnableModule.constprop.0/49 (Pit_Ip_EnableModule.constprop) @071b6620
  Type: function definition analyzed
  Visibility:
  References: pitBase/3 (read) 
  Referring: 
  Clone of Pit_Ip_EnableModule/6
  Availability: local
  Function flags: count:1073741824 (estimated locally) local optimize_size
  Called by: Pit_Ip_Init/20 (354334800 (estimated locally),0.33 per call) 
  Calls: 
Pit_Ip_SetChainMode.constprop.0/48 (Pit_Ip_SetChainMode.constprop) @071b6460
  Type: function definition analyzed
  Visibility:
  References: pitBase/3 (read) pitBase/3 (read) 
  Referring: 
  Clone of Pit_Ip_SetChainMode/9
  Availability: local
  Function flags: count:1073741824 (estimated locally) local optimize_size
  Called by: Pit_Ip_SetLifetimeTimer/29 (1073741824 (estimated locally),1.00 per call) 
  Calls: SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_01/36 (1073741824 (estimated locally),1.00 per call) SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_01/37 (1073741824 (estimated locally),1.00 per call) 
Pit_Ip_GetInterruptEnableFlag.constprop.0/47 (Pit_Ip_GetInterruptEnableFlag.constprop) @071b61c0
  Type: function definition analyzed
  Visibility:
  References: pitBase/3 (read) 
  Referring: 
  Clone of Pit_Ip_GetInterruptEnableFlag/18
  Availability: local
  Function flags: count:1073741824 (estimated locally) local optimize_size
  Called by: Pit_Ip_ProcessCommonInterrupt.constprop.0/46 (177167400 (estimated locally),0.16 per call) 
  Calls: 
Pit_Ip_ProcessCommonInterrupt.constprop.0/46 (Pit_Ip_ProcessCommonInterrupt.constprop) @06ec0540
  Type: function definition analyzed
  Visibility:
  References: Pit_Ip_u32ChState/4 (read) Pit_Ip_u32ChState/4 (read) Pit_Ip_u32ChState/4 (read) Pit_Ip_u32ChState/4 (read) 
  Referring: 
  Clone of Pit_Ip_ProcessCommonInterrupt/19
  Availability: local
  Function flags: count:1073741824 (estimated locally) local optimize_size
  Called by: PIT_0_ISR/31 (858993457 (estimated locally),4.00 per call) 
  Calls: SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_03/38 (177167400 (estimated locally),0.16 per call) Pit_Ip_GetInterruptEnableFlag.constprop.0/47 (177167400 (estimated locally),0.16 per call) Pit_Ip_GetInterruptStatusFlag.constprop.0/50 (177167400 (estimated locally),0.16 per call) Pit_Ip_ClearInterruptStatusFlag/15 (29232621 (estimated locally),0.03 per call) SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_03/39 (177167400 (estimated locally),0.16 per call) Pit_Ip_StopChannel/24 (8964670 (estimated locally),0.01 per call) 
   Indirect call(15502148 (estimated locally),0.01 per call)  Num speculative call targets: 0
CSWTCH.22/41 (CSWTCH.22) @0683eca8
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: Pit_Ip_Deinit/22 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
CSWTCH.21/40 (CSWTCH.21) @0683ea20
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: 
  Referring: Pit_Ip_Deinit/22 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_03/39 (SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_03) @06e6a8c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Pit_Ip_ProcessCommonInterrupt.constprop.0/46 (177167400 (estimated locally),0.16 per call) 
  Calls: 
SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_03/38 (SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_03) @06e6a7e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Pit_Ip_ProcessCommonInterrupt.constprop.0/46 (177167400 (estimated locally),0.16 per call) 
  Calls: 
SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_01/37 (SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_01) @06e6a2a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Pit_Ip_SetChainMode.constprop.0/48 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_01/36 (SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_01) @06e6a1c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Pit_Ip_SetChainMode.constprop.0/48 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_02/35 (SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_02) @06dda380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Pit_Ip_SetEnableInterruptFlag/14 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_02/34 (SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_02) @06dda2a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Pit_Ip_SetEnableInterruptFlag/14 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_00/33 (SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_00) @06dda0e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Pit_Ip_EnableTimer/7 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_00/32 (SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_00) @06dda000
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Pit_Ip_EnableTimer/7 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
PIT_0_ISR/31 (PIT_0_ISR) @06dd47e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:214748368 (estimated locally) body optimize_size
  Called by: 
  Calls: Pit_Ip_ProcessCommonInterrupt.constprop.0/46 (858993457 (estimated locally),4.00 per call) 
Pit_Ip_GetLifetimeTimer/30 (Pit_Ip_GetLifetimeTimer) @06dd4540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: pitBase/3 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Pit_Ip_SetLifetimeTimer/29 (Pit_Ip_SetLifetimeTimer) @06dd42a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: pitBase/3 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Pit_Ip_EnableTimer/7 (1073741824 (estimated locally),1.00 per call) Pit_Ip_EnableTimer/7 (1073741824 (estimated locally),1.00 per call) Pit_Ip_SetChainMode.constprop.0/48 (1073741824 (estimated locally),1.00 per call) Pit_Ip_SetEnableInterruptFlag/14 (1073741824 (estimated locally),1.00 per call) 
Pit_Ip_ChangeNextTimeoutValue/28 (Pit_Ip_ChangeNextTimeoutValue) @06dd4000
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Pit_Ip_bIsChangedTimeout/1 (read) pitBase/3 (read) Pit_Ip_u32OldTargetValue/2 (write) Pit_Ip_bIsChangedTimeout/1 (write) pitBase/3 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Pit_Ip_DisableChannelInterrupt/27 (Pit_Ip_DisableChannelInterrupt) @06dc9b60
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Pit_Ip_ClearInterruptStatusFlag/15 (1073741824 (estimated locally),1.00 per call) Pit_Ip_SetEnableInterruptFlag/14 (1073741824 (estimated locally),1.00 per call) 
Pit_Ip_EnableChannelInterrupt/26 (Pit_Ip_EnableChannelInterrupt) @06dc9620
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Pit_Ip_SetEnableInterruptFlag/14 (1073741824 (estimated locally),1.00 per call) Pit_Ip_ClearInterruptStatusFlag/15 (1073741824 (estimated locally),1.00 per call) 
Pit_Ip_GetCurrentTimer/25 (Pit_Ip_GetCurrentTimer) @06dc90e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: pitBase/3 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Pit_Ip_StopChannel/24 (Pit_Ip_StopChannel) @06dc9d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: Pit_Ip_ProcessCommonInterrupt.constprop.0/46 (8964670 (estimated locally),0.01 per call) 
  Calls: Pit_Ip_ClearInterruptStatusFlag/15 (1073741824 (estimated locally),1.00 per call) Pit_Ip_EnableTimer/7 (1073741824 (estimated locally),1.00 per call) 
Pit_Ip_StartChannel/23 (Pit_Ip_StartChannel) @06dc9a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: pitBase/3 (read) Pit_Ip_bIsChangedTimeout/1 (write) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Pit_Ip_EnableTimer/7 (354334800 (estimated locally),0.33 per call) 
Pit_Ip_Deinit/22 (Pit_Ip_Deinit) @06dc97e0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: CSWTCH.21/40 (read) CSWTCH.22/41 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Pit_Ip_Reset/10 (1073741824 (estimated locally),1.00 per call) 
Pit_Ip_InitChannel/21 (Pit_Ip_InitChannel) @06dc9540
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Pit_Ip_u32ChState/4 (write) Pit_Ip_u32ChState/4 (write) Pit_Ip_u32ChState/4 (write) Pit_Ip_u32ChState/4 (write) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Pit_Ip_ClearInterruptStatusFlag/15 (1073741824 (estimated locally),1.00 per call) Pit_Ip_SetEnableInterruptFlag/14 (1073741824 (estimated locally),1.00 per call) Pit_Ip_EnableTimer/7 (1073741824 (estimated locally),1.00 per call) 
Pit_Ip_Init/20 (Pit_Ip_Init) @06dc92a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Pit_Ip_SetDebugMode/8 (1073741824 (estimated locally),1.00 per call) Pit_Ip_EnableModule.constprop.0/49 (354334800 (estimated locally),0.33 per call) 
Pit_Ip_ProcessCommonInterrupt/19 (Pit_Ip_ProcessCommonInterrupt) @06dc9000
  Type: function
  Body removed by symtab_remove_unreachable_nodes
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: not_available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Pit_Ip_GetInterruptEnableFlag/18 (Pit_Ip_GetInterruptEnableFlag) @06dc2b60
  Type: function
  Body removed by symtab_remove_unreachable_nodes
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: not_available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Pit_Ip_ClearInterruptStatusFlag/15 (Pit_Ip_ClearInterruptStatusFlag) @06dc2d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: pitBase/3 (read) 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Pit_Ip_ProcessCommonInterrupt.constprop.0/46 (29232621 (estimated locally),0.03 per call) Pit_Ip_DisableChannelInterrupt/27 (1073741824 (estimated locally),1.00 per call) Pit_Ip_EnableChannelInterrupt/26 (1073741824 (estimated locally),1.00 per call) Pit_Ip_StopChannel/24 (1073741824 (estimated locally),1.00 per call) Pit_Ip_InitChannel/21 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Pit_Ip_SetEnableInterruptFlag/14 (Pit_Ip_SetEnableInterruptFlag) @06dc2a80
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: pitBase/3 (read) pitBase/3 (read) 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Pit_Ip_SetLifetimeTimer/29 (1073741824 (estimated locally),1.00 per call) Pit_Ip_DisableChannelInterrupt/27 (1073741824 (estimated locally),1.00 per call) Pit_Ip_EnableChannelInterrupt/26 (1073741824 (estimated locally),1.00 per call) Pit_Ip_InitChannel/21 (1073741824 (estimated locally),1.00 per call) 
  Calls: SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_02/35 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_02/34 (1073741824 (estimated locally),1.00 per call) 
Pit_Ip_Reset/10 (Pit_Ip_Reset) @06dc2000
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: pitBase/3 (read) pitBase/3 (read) pitBase/3 (read) 
  Referring: 
  Availability: local
  Function flags: count:214748368 (estimated locally) body local optimize_size
  Called by: Pit_Ip_Deinit/22 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Pit_Ip_SetChainMode/9 (Pit_Ip_SetChainMode) @06dc01c0
  Type: function
  Body removed by symtab_remove_unreachable_nodes
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: not_available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Pit_Ip_SetDebugMode/8 (Pit_Ip_SetDebugMode) @06d96e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: pitBase/3 (read) pitBase/3 (read) 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Pit_Ip_Init/20 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Pit_Ip_EnableTimer/7 (Pit_Ip_EnableTimer) @06d968c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: pitBase/3 (read) pitBase/3 (read) 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Pit_Ip_SetLifetimeTimer/29 (1073741824 (estimated locally),1.00 per call) Pit_Ip_SetLifetimeTimer/29 (1073741824 (estimated locally),1.00 per call) Pit_Ip_StopChannel/24 (1073741824 (estimated locally),1.00 per call) Pit_Ip_StartChannel/23 (354334800 (estimated locally),0.33 per call) Pit_Ip_InitChannel/21 (1073741824 (estimated locally),1.00 per call) 
  Calls: SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_00/33 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_00/32 (1073741824 (estimated locally),1.00 per call) 
Pit_Ip_EnableModule/6 (Pit_Ip_EnableModule) @06d96d20
  Type: function
  Body removed by symtab_remove_unreachable_nodes
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: not_available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Pit_Ip_GetLoadValue/5 (Pit_Ip_GetLoadValue) @06d96a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: pitBase/3 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Pit_Ip_u32ChState/4 (Pit_Ip_u32ChState) @06d942d0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Pit_Ip_InitChannel/21 (write) Pit_Ip_InitChannel/21 (write) Pit_Ip_InitChannel/21 (write) Pit_Ip_InitChannel/21 (write) Pit_Ip_ProcessCommonInterrupt.constprop.0/46 (read) Pit_Ip_ProcessCommonInterrupt.constprop.0/46 (read) Pit_Ip_ProcessCommonInterrupt.constprop.0/46 (read) Pit_Ip_ProcessCommonInterrupt.constprop.0/46 (read) 
  Availability: available
  Varpool flags: initialized
pitBase/3 (pitBase) @06d90678
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: Pit_Ip_SetEnableInterruptFlag/14 (read) Pit_Ip_SetEnableInterruptFlag/14 (read) Pit_Ip_GetInterruptStatusFlag.constprop.0/50 (read) Pit_Ip_ClearInterruptStatusFlag/15 (read) Pit_Ip_ChangeNextTimeoutValue/28 (read) Pit_Ip_GetInterruptEnableFlag.constprop.0/47 (read) Pit_Ip_SetChainMode.constprop.0/48 (read) Pit_Ip_GetLoadValue/5 (read) Pit_Ip_SetChainMode.constprop.0/48 (read) Pit_Ip_Reset/10 (read) Pit_Ip_SetLifetimeTimer/29 (read) Pit_Ip_SetDebugMode/8 (read) Pit_Ip_Reset/10 (read) Pit_Ip_Reset/10 (read) Pit_Ip_GetInterruptStatusFlag.constprop.0/50 (read) Pit_Ip_SetDebugMode/8 (read) Pit_Ip_ChangeNextTimeoutValue/28 (read) Pit_Ip_EnableTimer/7 (read) Pit_Ip_EnableTimer/7 (read) Pit_Ip_StartChannel/23 (read) Pit_Ip_EnableModule.constprop.0/49 (read) Pit_Ip_GetCurrentTimer/25 (read) Pit_Ip_GetLifetimeTimer/30 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Pit_Ip_u32OldTargetValue/2 (Pit_Ip_u32OldTargetValue) @06d905e8
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: Pit_Ip_ChangeNextTimeoutValue/28 (write) 
  Availability: available
  Varpool flags:
Pit_Ip_bIsChangedTimeout/1 (Pit_Ip_bIsChangedTimeout) @06d905a0
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Pit_Ip_StartChannel/23 (write) Pit_Ip_ChangeNextTimeoutValue/28 (read) Pit_Ip_ChangeNextTimeoutValue/28 (write) 
  Availability: available
  Varpool flags:
Pit_Ip_GetInterruptStatusFlag/0 (Pit_Ip_GetInterruptStatusFlag) @06c9e000
  Type: function
  Body removed by symtab_remove_unreachable_nodes
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: not_available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
PIT_0_ISR ()
{
  uint8 channel;

  <bb 2> [local count: 214748368]:
  # DEBUG BEGIN_STMT
  # DEBUG instance => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG channel => 0
  goto <bb 4>; [100.00%]

  <bb 3> [local count: 858993457]:
  # DEBUG BEGIN_STMT
  Pit_Ip_ProcessCommonInterrupt (0, channel_1);
  # DEBUG BEGIN_STMT
  channel_5 = channel_1 + 1;
  # DEBUG channel => channel_5

  <bb 4> [local count: 1073741824]:
  # channel_1 = PHI <0(2), channel_5(3)>
  # DEBUG channel => channel_1
  # DEBUG BEGIN_STMT
  if (channel_1 != 4)
    goto <bb 3>; [80.00%]
  else
    goto <bb 5>; [20.00%]

  <bb 5> [local count: 214748368]:
  return;

}


Pit_Ip_GetLifetimeTimer (uint8 instance)
{
  uint32 upperValue;
  uint32 lowerValue;
  uint64 lifeTimeValue;
  long long unsigned int _1;
  long long unsigned int _2;
  long long unsigned int _3;
  int _8;
  struct PIT_Type * _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG lifeTimeValue => 0
  # DEBUG BEGIN_STMT
  # DEBUG valueH => 0
  # DEBUG BEGIN_STMT
  # DEBUG valueL => 0
  # DEBUG BEGIN_STMT
  # DEBUG instance => instance_5(D)
  # DEBUG INLINE_ENTRY Pit_Ip_GetUpperLifetimerValue
  # DEBUG BEGIN_STMT
  # DEBUG upperValue => 0
  # DEBUG BEGIN_STMT
  _8 = (int) instance_5(D);
  _9 = pitBase[_8];
  upperValue_10 ={v} _9->LTMR64H;
  # DEBUG upperValue => upperValue_10
  # DEBUG BEGIN_STMT
  # DEBUG instance => NULL
  # DEBUG upperValue => NULL
  # DEBUG valueH => upperValue_10
  # DEBUG BEGIN_STMT
  # DEBUG instance => instance_5(D)
  # DEBUG INLINE_ENTRY Pit_Ip_GetLowerLifetimerValue
  # DEBUG BEGIN_STMT
  # DEBUG lowerValue => 0
  # DEBUG BEGIN_STMT
  lowerValue_7 ={v} _9->LTMR64L;
  # DEBUG lowerValue => lowerValue_7
  # DEBUG BEGIN_STMT
  # DEBUG instance => NULL
  # DEBUG lowerValue => NULL
  # DEBUG valueL => lowerValue_7
  # DEBUG BEGIN_STMT
  _1 = (long long unsigned int) upperValue_10;
  _2 = _1 << 32;
  _3 = (long long unsigned int) lowerValue_7;
  lifeTimeValue_6 = _2 + _3;
  # DEBUG lifeTimeValue => lifeTimeValue_6
  # DEBUG BEGIN_STMT
  return lifeTimeValue_6;

}


Pit_Ip_SetLifetimeTimer (uint8 instance)
{
  int _7;
  struct PIT_Type * _8;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG instance => instance_2(D)
  # DEBUG channel => 1
  # DEBUG value => 4294967295
  # DEBUG INLINE_ENTRY Pit_Ip_SetCounterValue
  # DEBUG BEGIN_STMT
  _7 = (int) instance_2(D);
  _8 = pitBase[_7];
  _8->TIMER[1].LDVAL ={v} 4294967295;
  # DEBUG instance => NULL
  # DEBUG channel => NULL
  # DEBUG value => NULL
  # DEBUG BEGIN_STMT
  Pit_Ip_SetEnableInterruptFlag (instance_2(D), 1, 0);
  # DEBUG BEGIN_STMT
  Pit_Ip_SetChainMode (instance_2(D), 1, 1);
  # DEBUG BEGIN_STMT
  Pit_Ip_EnableTimer (instance_2(D), 1, 1);
  # DEBUG BEGIN_STMT
  # DEBUG instance => instance_2(D)
  # DEBUG channel => 0
  # DEBUG value => 4294967295
  # DEBUG INLINE_ENTRY Pit_Ip_SetCounterValue
  # DEBUG BEGIN_STMT
  _8->TIMER[0].LDVAL ={v} 4294967295;
  # DEBUG instance => NULL
  # DEBUG channel => NULL
  # DEBUG value => NULL
  # DEBUG BEGIN_STMT
  Pit_Ip_EnableTimer (instance_2(D), 0, 1);
  return;

}


Pit_Ip_ChangeNextTimeoutValue (uint8 instance, uint8 channel, uint32 value)
{
  uint32 periodValue;
  _Bool Pit_Ip_bIsChangedTimeout.1_1;
  long unsigned int _2;
  long unsigned int _3;
  int _11;
  struct PIT_Type * _12;
  int _13;
  int _15;
  struct PIT_Type * _16;
  int _17;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Pit_Ip_bIsChangedTimeout.1_1 = Pit_Ip_bIsChangedTimeout;
  if (Pit_Ip_bIsChangedTimeout.1_1 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG instance => instance_6(D)
  # DEBUG channel => channel_7(D)
  # DEBUG INLINE_ENTRY Pit_Ip_GetLoadValue
  # DEBUG BEGIN_STMT
  # DEBUG periodValue => 0
  # DEBUG BEGIN_STMT
  _11 = (int) instance_6(D);
  _12 = pitBase[_11];
  _13 = (int) channel_7(D);
  periodValue_14 ={v} _12->TIMER[_13].LDVAL;
  # DEBUG periodValue => periodValue_14
  # DEBUG BEGIN_STMT
  # DEBUG instance => NULL
  # DEBUG channel => NULL
  # DEBUG periodValue => NULL
  _2 = periodValue_14 + 1;
  Pit_Ip_u32OldTargetValue = _2;
  # DEBUG BEGIN_STMT
  Pit_Ip_bIsChangedTimeout = 1;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _3 = value_10(D) + 4294967295;
  # DEBUG instance => instance_6(D)
  # DEBUG channel => channel_7(D)
  # DEBUG value => _3
  # DEBUG INLINE_ENTRY Pit_Ip_SetCounterValue
  # DEBUG BEGIN_STMT
  _15 = (int) instance_6(D);
  _16 = pitBase[_15];
  _17 = (int) channel_7(D);
  _16->TIMER[_17].LDVAL ={v} _3;
  # DEBUG instance => NULL
  # DEBUG channel => NULL
  # DEBUG value => NULL
  return;

}


Pit_Ip_DisableChannelInterrupt (uint8 instance, uint8 channel)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Pit_Ip_SetEnableInterruptFlag (instance_2(D), channel_3(D), 0);
  # DEBUG BEGIN_STMT
  Pit_Ip_ClearInterruptStatusFlag (instance_2(D), channel_3(D));
  return;

}


Pit_Ip_EnableChannelInterrupt (uint8 instance, uint8 channel)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Pit_Ip_ClearInterruptStatusFlag (instance_2(D), channel_3(D));
  # DEBUG BEGIN_STMT
  Pit_Ip_SetEnableInterruptFlag (instance_2(D), channel_3(D), 1);
  return;

}


Pit_Ip_GetCurrentTimer (uint8 instance, uint8 channel)
{
  uint32 counterValue;
  uint64 counterValue;
  int _5;
  struct PIT_Type * _6;
  int _7;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG counterValue => 0
  # DEBUG BEGIN_STMT
  # DEBUG instance => instance_2(D)
  # DEBUG channel => channel_3(D)
  # DEBUG INLINE_ENTRY Pit_Ip_GetCounterValue
  # DEBUG BEGIN_STMT
  # DEBUG counterValue => 0
  # DEBUG BEGIN_STMT
  _5 = (int) instance_2(D);
  _6 = pitBase[_5];
  _7 = (int) channel_3(D);
  counterValue_8 ={v} _6->TIMER[_7].CVAL;
  # DEBUG counterValue => counterValue_8
  # DEBUG BEGIN_STMT
  # DEBUG instance => NULL
  # DEBUG channel => NULL
  # DEBUG counterValue => NULL
  counterValue_4 = (uint64) counterValue_8;
  # DEBUG counterValue => counterValue_4
  # DEBUG BEGIN_STMT
  return counterValue_4;

}


Pit_Ip_StopChannel (uint8 instance, uint8 channel)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Pit_Ip_EnableTimer (instance_2(D), channel_3(D), 0);
  # DEBUG BEGIN_STMT
  Pit_Ip_ClearInterruptStatusFlag (instance_2(D), channel_3(D));
  return;

}


Pit_Ip_StartChannel (uint8 instance, uint8 channel, uint32 countValue)
{
  boolean isRunning;
  Pit_Ip_StatusType status;
  long unsigned int _1;
  int _10;
  struct PIT_Type * _11;
  int _12;
  long unsigned int _13;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG isRunning => 0
  # DEBUG BEGIN_STMT
  # DEBUG status => 1
  # DEBUG BEGIN_STMT
  # DEBUG instance => instance_5(D)
  # DEBUG channel => channel_6(D)
  # DEBUG INLINE_ENTRY Pit_Ip_IsChannelRunning
  # DEBUG BEGIN_STMT
  # DEBUG isRunning => 0
  # DEBUG BEGIN_STMT
  _10 = (int) instance_5(D);
  _11 = pitBase[_10];
  _12 = (int) channel_6(D);
  _13 ={v} _11->TIMER[_12].TCTRL;
  isRunning_14 = (boolean) _13;
  # DEBUG isRunning => isRunning_14
  # DEBUG BEGIN_STMT
  # DEBUG instance => NULL
  # DEBUG channel => NULL
  # DEBUG isRunning => NULL
  # DEBUG isRunning => isRunning_14
  # DEBUG BEGIN_STMT
  if (isRunning_14 != 0)
    goto <bb 4>; [67.00%]
  else
    goto <bb 3>; [33.00%]

  <bb 3> [local count: 354334800]:
  # DEBUG BEGIN_STMT
  _1 = countValue_7(D) + 4294967295;
  # DEBUG instance => instance_5(D)
  # DEBUG channel => channel_6(D)
  # DEBUG value => _1
  # DEBUG INLINE_ENTRY Pit_Ip_SetCounterValue
  # DEBUG BEGIN_STMT
  _11->TIMER[_12].LDVAL ={v} _1;
  # DEBUG instance => NULL
  # DEBUG channel => NULL
  # DEBUG value => NULL
  # DEBUG BEGIN_STMT
  Pit_Ip_bIsChangedTimeout = 0;
  # DEBUG BEGIN_STMT
  Pit_Ip_EnableTimer (instance_5(D), channel_6(D), 1);
  # DEBUG BEGIN_STMT
  # DEBUG status => 0

  <bb 4> [local count: 1073741824]:
  # status_2 = PHI <1(2), 0(3)>
  # DEBUG status => status_2
  # DEBUG BEGIN_STMT
  return status_2;

}


Pit_Ip_Deinit (uint8 instance)
{
  boolean mdisBitExists;
  boolean rtiChannelExists;
  uint8 channelNum;
  unsigned char _1;
  unsigned char _6;
  _Bool _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG channelNum => 0
  # DEBUG BEGIN_STMT
  # DEBUG rtiChannelExists => 0
  # DEBUG BEGIN_STMT
  # DEBUG mdisBitExists => 0
  # DEBUG BEGIN_STMT
  _1 = instance_8(D);
  if (_1 <= 2)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:
<L6>:
  channelNum_11 = 0;
  rtiChannelExists_12 = 0;
  mdisBitExists_13 = 0;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
<L7>:
  _6 = CSWTCH.21[_1];
  channelNum_5 = _6;
  _9 = CSWTCH.22[_1];
  rtiChannelExists_7 = _9;
  mdisBitExists_10 = 1;

  <bb 5> [local count: 1073741824]:
  # channelNum_2 = PHI <channelNum_5(4), channelNum_11(3)>
  # rtiChannelExists_3 = PHI <rtiChannelExists_7(4), rtiChannelExists_12(3)>
  # mdisBitExists_4 = PHI <mdisBitExists_10(4), mdisBitExists_13(3)>
<L8>:
<L5>:
  # DEBUG mdisBitExists => mdisBitExists_4
  # DEBUG rtiChannelExists => rtiChannelExists_3
  # DEBUG channelNum => channelNum_2
  # DEBUG BEGIN_STMT
  Pit_Ip_Reset (instance_8(D), channelNum_2, rtiChannelExists_3, mdisBitExists_4);
  return;

}


Pit_Ip_InitChannel (uint8 instance, const struct Pit_Ip_ChannelConfigType * chnlConfig)
{
  unsigned char _1;
  unsigned char _2;
  unsigned char _3;
  int _4;
  unsigned char _5;
  int _6;
  void (*<T4e1>) (uint8) _7;
  unsigned char _8;
  <unnamed type> _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = chnlConfig_11(D)->hwChannel;
  Pit_Ip_EnableTimer (instance_12(D), _1, 0);
  # DEBUG BEGIN_STMT
  _2 = chnlConfig_11(D)->hwChannel;
  Pit_Ip_SetEnableInterruptFlag (instance_12(D), _2, 0);
  # DEBUG BEGIN_STMT
  _3 = chnlConfig_11(D)->hwChannel;
  Pit_Ip_ClearInterruptStatusFlag (instance_12(D), _3);
  # DEBUG BEGIN_STMT
  _4 = (int) instance_12(D);
  _5 = chnlConfig_11(D)->hwChannel;
  _6 = (int) _5;
  Pit_Ip_u32ChState[_4][_6].chInit = 1;
  # DEBUG BEGIN_STMT
  _7 = chnlConfig_11(D)->callback;
  Pit_Ip_u32ChState[_4][_6].callback = _7;
  # DEBUG BEGIN_STMT
  _8 = chnlConfig_11(D)->callbackParam;
  Pit_Ip_u32ChState[_4][_6].callbackParam = _8;
  # DEBUG BEGIN_STMT
  _9 = chnlConfig_11(D)->channelMode;
  Pit_Ip_u32ChState[_4][_6].channelMode = _9;
  return;

}


Pit_Ip_Init (uint8 instance, const struct Pit_Ip_InstanceConfigType * config)
{
  _Bool _1;
  _Bool _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = config_5(D)->enableStandardTimers;
  if (_1 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334800]:
  # DEBUG BEGIN_STMT
  Pit_Ip_EnableModule (instance_6(D), 0);

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _2 = config_5(D)->stopRunInDebug;
  Pit_Ip_SetDebugMode (instance_6(D), _2);
  return;

}


Pit_Ip_ClearInterruptStatusFlag (uint8 instance, uint8 channel)
{
  int _1;
  struct PIT_Type * _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_6(D);
  _2 = pitBase[_1];
  _3 = (int) channel_8(D);
  _4 ={v} _2->TIMER[_3].TFLG;
  _5 = _4 | 1;
  _2->TIMER[_3].TFLG ={v} _5;
  return;

}


Pit_Ip_SetEnableInterruptFlag (uint8 instance, uint8 channel, boolean enable)
{
  int _1;
  struct PIT_Type * _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  int _6;
  struct PIT_Type * _7;
  int _8;
  long unsigned int _9;
  long unsigned int _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_02 ();
  # DEBUG BEGIN_STMT
  if (enable_14(D) != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_15(D);
  _2 = pitBase[_1];
  _3 = (int) channel_16(D);
  _4 ={v} _2->TIMER[_3].TCTRL;
  _5 = _4 | 2;
  _2->TIMER[_3].TCTRL ={v} _5;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _6 = (int) instance_15(D);
  _7 = pitBase[_6];
  _8 = (int) channel_16(D);
  _9 ={v} _7->TIMER[_8].TCTRL;
  _10 = _9 & 4294967293;
  _7->TIMER[_8].TCTRL ={v} _10;

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_02 ();
  return;

}


Pit_Ip_Reset (uint8 instance, uint8 channelNum, boolean available, boolean bitExists)
{
  uint8 i;
  uint8 channelIndex;
  uint32 mask;
  int _1;
  struct PIT_Type * _2;
  int _3;
  struct PIT_Type * _4;
  int _5;
  int _6;
  struct PIT_Type * _7;

  <bb 2> [local count: 214748368]:
  # DEBUG BEGIN_STMT
  # DEBUG mask => 0
  # DEBUG BEGIN_STMT
  # DEBUG channelIndex => channelNum_13(D)
  # DEBUG BEGIN_STMT
  if (available_14(D) != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 3> [local count: 107374184]:
  # DEBUG BEGIN_STMT
  channelIndex_17 = channelNum_13(D) + 255;
  # DEBUG channelIndex => channelIndex_17
  # DEBUG BEGIN_STMT
  _1 = (int) instance_18(D);
  _2 = pitBase[_1];
  _2->RTI_TCTRL ={v} 0;
  # DEBUG BEGIN_STMT
  _2->RTI_LDVAL ={v} 0;
  # DEBUG BEGIN_STMT
  _2->RTI_TFLG ={v} 1;
  # DEBUG BEGIN_STMT
  if (bitExists_15(D) != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 4> [local count: 53687092]:
  # DEBUG BEGIN_STMT
  # DEBUG mask => 6
  goto <bb 7>; [100.00%]

  <bb 5> [local count: 107374184]:
  # DEBUG BEGIN_STMT
  if (bitExists_15(D) != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 53687092]:
  # DEBUG BEGIN_STMT
  # DEBUG mask => 2

  <bb 7> [local count: 214748368]:
  # mask_8 = PHI <6(4), 0(5), 2(6), 4(3)>
  # channelIndex_9 = PHI <channelIndex_17(4), channelNum_13(D)(5), channelNum_13(D)(6), channelIndex_17(3)>
  # DEBUG channelIndex => channelIndex_9
  # DEBUG mask => mask_8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG i => 0
  goto <bb 9>; [100.00%]

  <bb 8> [local count: 858993457]:
  # DEBUG BEGIN_STMT
  _3 = (int) instance_18(D);
  _4 = pitBase[_3];
  _5 = (int) i_10;
  _4->TIMER[_5].TCTRL ={v} 0;
  # DEBUG BEGIN_STMT
  _4->TIMER[_5].LDVAL ={v} 0;
  # DEBUG BEGIN_STMT
  _4->TIMER[_5].TFLG ={v} 1;
  # DEBUG BEGIN_STMT
  i_26 = i_10 + 1;
  # DEBUG i => i_26

  <bb 9> [local count: 1073741824]:
  # i_10 = PHI <0(7), i_26(8)>
  # DEBUG i => i_10
  # DEBUG BEGIN_STMT
  if (channelIndex_9 > i_10)
    goto <bb 8>; [80.00%]
  else
    goto <bb 10>; [20.00%]

  <bb 10> [local count: 214748368]:
  # DEBUG BEGIN_STMT
  _6 = (int) instance_18(D);
  _7 = pitBase[_6];
  _7->MCR ={v} mask_8;
  return;

}


Pit_Ip_SetDebugMode (uint8 instance, boolean stopRun)
{
  int _1;
  struct PIT_Type * _2;
  long unsigned int _3;
  long unsigned int _4;
  int _5;
  struct PIT_Type * _6;
  long unsigned int _7;
  long unsigned int _8;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (stopRun_10(D) != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_11(D);
  _2 = pitBase[_1];
  _3 ={v} _2->MCR;
  _4 = _3 | 1;
  _2->MCR ={v} _4;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _5 = (int) instance_11(D);
  _6 = pitBase[_5];
  _7 ={v} _6->MCR;
  _8 = _7 & 4294967294;
  _6->MCR ={v} _8;

  <bb 5> [local count: 1073741824]:
  return;

}


Pit_Ip_EnableTimer (uint8 instance, uint8 channel, boolean enable)
{
  int _1;
  struct PIT_Type * _2;
  int _3;
  long unsigned int _4;
  long unsigned int _5;
  int _6;
  struct PIT_Type * _7;
  int _8;
  long unsigned int _9;
  long unsigned int _10;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  SchM_Enter_Gpt_GPT_EXCLUSIVE_AREA_00 ();
  # DEBUG BEGIN_STMT
  if (enable_14(D) != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _1 = (int) instance_15(D);
  _2 = pitBase[_1];
  _3 = (int) channel_16(D);
  _4 ={v} _2->TIMER[_3].TCTRL;
  _5 = _4 | 1;
  _2->TIMER[_3].TCTRL ={v} _5;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _6 = (int) instance_15(D);
  _7 = pitBase[_6];
  _8 = (int) channel_16(D);
  _9 ={v} _7->TIMER[_8].TCTRL;
  _10 = _9 & 4294967294;
  _7->TIMER[_8].TCTRL ={v} _10;

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Gpt_GPT_EXCLUSIVE_AREA_00 ();
  return;

}


Pit_Ip_GetLoadValue (uint8 instance, uint8 channel)
{
  uint32 periodValue;
  int _1;
  struct PIT_Type * _2;
  int _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG periodValue => 0
  # DEBUG BEGIN_STMT
  _1 = (int) instance_4(D);
  _2 = pitBase[_1];
  _3 = (int) channel_6(D);
  periodValue_7 ={v} _2->TIMER[_3].LDVAL;
  # DEBUG periodValue => periodValue_7
  # DEBUG BEGIN_STMT
  return periodValue_7;

}


