Gpt_Ipw_ChangeNextTimeoutValue (const struct Gpt_Ipw_HwChannelConfigType * pHwChannelConfig, Gpt_ValueType value)
{
  Std_ReturnType returnValue;
  Std_ReturnType D.6613;

  <bb 2> :
  # DEBUG BEGIN_STMT
  returnValue = 1;
  # DEBUG BEGIN_STMT
  _1 = pHwChannelConfig->instanceType;
  _2 = (int) _1;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  _3 = pHwChannelConfig->instance;
  _4 = pHwChannelConfig->channel;
  Pit_Ip_ChangeNextTimeoutValue (_3, _4, value);
  # DEBUG BEGIN_STMT
  returnValue = 0;
  # DEBUG BEGIN_STMT

  <bb 4> :
  # DEBUG BEGIN_STMT
  D.6613 = returnValue;
  return D.6613;

}


Gpt_Ipw_DisableInterrupt (const struct Gpt_Ipw_HwChannelConfigType * pHwChannelConfig)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = pHwChannelConfig->instanceType;
  _2 = (int) _1;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  _3 = pHwChannelConfig->instance;
  _4 = pHwChannelConfig->channel;
  Pit_Ip_DisableChannelInterrupt (_3, _4);
  # DEBUG BEGIN_STMT

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


Gpt_Ipw_DeInit (const struct Gpt_Ipw_HwChannelConfigType * pHwChannelConfig)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = pHwChannelConfig->instanceType;
  _2 = (int) _1;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  _3 = pHwChannelConfig->instance;
  Pit_Ip_Deinit (_3);
  # DEBUG BEGIN_STMT

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


Gpt_Ipw_EnableInterrupt (const struct Gpt_Ipw_HwChannelConfigType * pHwChannelConfig)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = pHwChannelConfig->instanceType;
  _2 = (int) _1;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  _3 = pHwChannelConfig->instance;
  _4 = pHwChannelConfig->channel;
  Pit_Ip_EnableChannelInterrupt (_3, _4);
  # DEBUG BEGIN_STMT

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


Gpt_Ipw_StopTimer (const struct Gpt_Ipw_HwChannelConfigType * pHwChannelConfig)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = pHwChannelConfig->instanceType;
  _2 = (int) _1;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  _3 = pHwChannelConfig->instance;
  _4 = pHwChannelConfig->channel;
  Pit_Ip_StopChannel (_3, _4);
  # DEBUG BEGIN_STMT

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


Gpt_Ipw_GetTimeElapsed (const struct Gpt_Ipw_HwChannelConfigType * pHwChannelConfig, struct Gpt_HwChannelInfoType * pReturnHwChannelInfo)
{
  uint32 returnValue;
  Gpt_ValueType D.6597;

  <bb 2> :
  # DEBUG BEGIN_STMT
  returnValue = 0;
  # DEBUG BEGIN_STMT
  _1 = pHwChannelConfig->instanceType;
  _2 = (int) _1;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  returnValue = Gpt_Ipw_PitGetTimeElapsed (pHwChannelConfig, pReturnHwChannelInfo);
  # DEBUG BEGIN_STMT

  <bb 4> :
  # DEBUG BEGIN_STMT
  D.6597 = returnValue;
  return D.6597;

}


Gpt_Ipw_StartTimer (const struct Gpt_Ipw_HwChannelConfigType * pHwChannelConfig, Gpt_ValueType uValue)
{
  Std_ReturnType returnValue;
  Std_ReturnType D.6595;

  <bb 2> :
  # DEBUG BEGIN_STMT
  returnValue = 1;
  # DEBUG BEGIN_STMT
  _1 = pHwChannelConfig->instanceType;
  _2 = (int) _1;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  _3 = pHwChannelConfig->instance;
  _4 = pHwChannelConfig->channel;
  returnValue = Pit_Ip_StartChannel (_3, _4, uValue);
  # DEBUG BEGIN_STMT

  <bb 4> :
  # DEBUG BEGIN_STMT
  D.6595 = returnValue;
  return D.6595;

}


Gpt_Ipw_Init (const struct Gpt_Ipw_HwChannelConfigType * pHwChannelConfig)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  _1 = pHwChannelConfig->instanceType;
  _2 = (int) _1;
  if (_2 == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  _3 = pHwChannelConfig->instance;
  _4 = pHwChannelConfig->Gpt_Ipw_ChannelConfig.Pit_Ip_ChannelConfig;
  Pit_Ip_InitChannel (_3, _4);
  # DEBUG BEGIN_STMT

  <bb 4> :
  # DEBUG BEGIN_STMT
  return;

}


Gpt_Ipw_InitInstances (const struct Gpt_ConfigType * configPtr)
{
  uint8 index;

  <bb 2> :
  # DEBUG BEGIN_STMT
  index = 0;
  # DEBUG BEGIN_STMT
  index = 0;
  goto <bb 6>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = configPtr->Gpt_Ipw_HwInstanceConfig;
  _2 = (int) index;
  _3 = (*_1)[_2].instanceType;
  _4 = (int) _3;
  if (_4 == 0)
    goto <bb 4>; [INV]
  else
    goto <bb 5>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  _5 = configPtr->Gpt_Ipw_HwInstanceConfig;
  _6 = (int) index;
  _7 = (*_5)[_6].instance;
  _8 = configPtr->Gpt_Ipw_HwInstanceConfig;
  _9 = (int) index;
  _10 = (*_8)[_9].Gpt_Ipw_InstanceConfig.Pit_Ip_InstanceConfig;
  Pit_Ip_Init (_7, _10);
  # DEBUG BEGIN_STMT

  <bb 5> :
  # DEBUG BEGIN_STMT
  index.0_11 = index;
  index = index.0_11 + 1;

  <bb 6> :
  # DEBUG BEGIN_STMT
  _12 = configPtr->instanceCount;
  if (index < _12)
    goto <bb 3>; [INV]
  else
    goto <bb 7>; [INV]

  <bb 7> :
  # DEBUG BEGIN_STMT
  return;

}


Gpt_Ipw_PitGetTimeElapsed (const struct Gpt_Ipw_HwChannelConfigType * pHwChannelConfig, struct Gpt_HwChannelInfoType * pReturnHwChannelInfo)
{
  boolean HasChEvOccurred;
  Gpt_ValueType returnValue;
  Gpt_ValueType D.6602;

  <bb 2> :
  # DEBUG BEGIN_STMT
  Pit_Ip_u32OldTargetValue.1_1 = Pit_Ip_u32OldTargetValue;
  pReturnHwChannelInfo->uTargetTime = Pit_Ip_u32OldTargetValue.1_1;
  # DEBUG BEGIN_STMT
  _2 = pHwChannelConfig->instance;
  _3 = pHwChannelConfig->channel;
  _4 = Pit_Ip_GetLoadValue (_2, _3);
  _5 = _4 + 1;
  pReturnHwChannelInfo->uTargetTime = _5;
  # DEBUG BEGIN_STMT
  _6 = pReturnHwChannelInfo->uTargetTime;
  _7 = pHwChannelConfig->instance;
  _8 = pHwChannelConfig->channel;
  _9 = Pit_Ip_GetCurrentTimer (_7, _8);
  _10 = (long unsigned int) _9;
  returnValue = _6 - _10;
  # DEBUG BEGIN_STMT
  _11 = pHwChannelConfig->instance;
  _12 = pHwChannelConfig->channel;
  HasChEvOccurred = Pit_Ip_GetInterruptStatusFlag (_11, _12);
  # DEBUG BEGIN_STMT
  if (HasChEvOccurred != 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  pReturnHwChannelInfo->bChannelRollover = 1;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  pReturnHwChannelInfo->bChannelRollover = 0;

  <bb 5> :
  # DEBUG BEGIN_STMT
  D.6602 = returnValue;
  return D.6602;

}


Pit_Ip_GetInterruptStatusFlag (uint8 instance, uint8 channel)
{
  boolean returnFlag;
  boolean D.6607;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (channel == 4)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  _1 = (int) instance;
  _2 = pitBase[_1];
  _3 = _2->RTI_TFLG;
  _4 = _3 & 1;
  returnFlag = _4 != 0;
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  _5 = (int) instance;
  _6 = pitBase[_5];
  _7 = (int) channel;
  _8 = _6->TIMER[_7].TFLG;
  _9 = _8 & 1;
  returnFlag = _9 != 0;

  <bb 5> :
  # DEBUG BEGIN_STMT
  D.6607 = returnFlag;
  return D.6607;

}


