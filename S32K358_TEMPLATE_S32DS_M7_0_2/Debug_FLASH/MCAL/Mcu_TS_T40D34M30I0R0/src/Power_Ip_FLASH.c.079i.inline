IPA function summary for Power_Ip_FLASH_HighVoltageOperationOngoing/0 inlinable
  global time:     4.000000
  self size:       5
  global size:     5
  min size:       2
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Flattening functions:
Overall time estimate: 4.000000 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in Power_Ip_FLASH_HighVoltageOperationOngoing/0.
node context cache: 0 hits, 0 misses, 0 initializations

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:
Overall time estimate: 4.000000 weighted by profile: 0.000000

Why inlining failed?
IPA function summary for Power_Ip_FLASH_HighVoltageOperationOngoing/0 inlinable
  global time:     4.000000
  self size:       5
  global size:     5
  min size:       2
  self stack:      0
  global stack:    0
    size:2.000000, time:2.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

Symbol table:

Power_Ip_FLASH_HighVoltageOperationOngoing/0 (Power_Ip_FLASH_HighVoltageOperationOngoing) @06dee380
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 

;; Function Power_Ip_FLASH_HighVoltageOperationOngoing (Power_Ip_FLASH_HighVoltageOperationOngoing, funcdef_no=0, decl_uid=6324, cgraph_uid=1, symbol_order=0)

Power_Ip_FLASH_HighVoltageOperationOngoing ()
{
  uint32 McrReg;
  long unsigned int _1;
  _Bool _2;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG FlashBusy => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  McrReg_4 ={v} MEM[(struct FLASH_Type *)1076805632B].MCR;
  # DEBUG McrReg => McrReg_4
  # DEBUG BEGIN_STMT
  _1 = McrReg_4 & 1;
  _2 = (_Bool) _1;
  # DEBUG FlashBusy => _2
  # DEBUG BEGIN_STMT
  return _2;

}


