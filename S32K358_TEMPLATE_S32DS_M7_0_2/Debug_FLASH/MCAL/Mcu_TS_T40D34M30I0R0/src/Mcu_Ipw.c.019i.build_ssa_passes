Mcu_Ipw_SleepOnExit (Mcu_SleepOnExitType SleepOnExit)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  if (SleepOnExit == 0)
    goto <bb 3>; [INV]
  else
    goto <bb 4>; [INV]

  <bb 3> :
  # DEBUG BEGIN_STMT
  Power_Ip_DisableSleepOnExit ();
  goto <bb 5>; [INV]

  <bb 4> :
  # DEBUG BEGIN_STMT
  Power_Ip_EnableSleepOnExit ();

  <bb 5> :
  return;

}


Mcu_Ipw_DisableCmu (Clock_Ip_NameType ClockName)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Clock_Ip_DisableClockMonitor (ClockName);
  return;

}


Mcu_Ipw_GetResetRawValue ()
{
  Power_Ip_RawResetType ResetReason;
  Mcu_RawResetType D.7587;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  ResetReason = Power_Ip_GetResetRawValue ();
  # DEBUG BEGIN_STMT
  D.7587 = ResetReason;
  return D.7587;

}


Mcu_Ipw_GetResetReason ()
{
  Mcu_ResetType D.7585;

  <bb 2> :
  # DEBUG BEGIN_STMT
  D.7585 = Power_Ip_GetResetReason ();
  return D.7585;

}


Mcu_Ipw_SetMode (const struct Mcu_ModeConfigType * ModeConfigPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Power_Ip_SetMode (ModeConfigPtr);
  return;

}


MCU_Ipw_GetClockFrequency (Clock_Ip_NameType ClockName)
{
  uint32 D.7583;

  <bb 2> :
  # DEBUG BEGIN_STMT
  D.7583 = Clock_Ip_GetClockFrequency (ClockName);
  return D.7583;

}


Mcu_Ipw_GetPllStatus ()
{
  Mcu_PllStatusType PllStatus;
  Mcu_PllStatusType D.7581;

  <bb 2> :
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Clock_Ip_GetPllStatus ();
  _2 = (int) _1;
  switch (_2) <default: <L2> [INV], case 0: <L0> [INV], case 1: <L1> [INV]>

  <bb 3> :
<L0>:
  # DEBUG BEGIN_STMT
  PllStatus = 0;
  # DEBUG BEGIN_STMT
  goto <bb 6>; [INV]

  <bb 4> :
<L1>:
  # DEBUG BEGIN_STMT
  PllStatus = 1;
  # DEBUG BEGIN_STMT
  goto <bb 6>; [INV]

  <bb 5> :
<L2>:
  # DEBUG BEGIN_STMT
  PllStatus = 2;
  # DEBUG BEGIN_STMT

  <bb 6> :
  # DEBUG BEGIN_STMT
  D.7581 = PllStatus;
  return D.7581;

}


Mcu_Ipw_DistributePllClock ()
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Clock_Ip_DistributePll ();
  return;

}


Mcu_Ipw_InitClock (const struct Mcu_ClockConfigType * ClockConfigPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Clock_Ip_InitClock (ClockConfigPtr);
  return;

}


Mcu_Ipw_Init (const struct Power_Ip_HwIPsConfigType * HwIPsConfigPtr)
{
  <bb 2> :
  # DEBUG BEGIN_STMT
  Power_Ip_Init (HwIPsConfigPtr);
  return;

}


