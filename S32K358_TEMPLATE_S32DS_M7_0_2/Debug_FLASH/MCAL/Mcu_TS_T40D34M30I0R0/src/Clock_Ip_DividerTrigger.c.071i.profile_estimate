Histogram:

========== IPA-profile speculative targets: ==========

Summary for node Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat/2:

Summary for node Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat/1:

Summary for node Clock_Ip_Callback_DividerTriggerEmpty/0:


Clock_Ip_TriggerUpdateCgmXDivTrigCtrlTctlHhenUpdStat (const struct Clock_Ip_DividerTriggerConfigType * Config)
{
  uint32 DividerStatus;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  boolean TimeoutOccurred;
  uint32 SelectorIndex;
  uint32 Instance;
  <unnamed type> _1;
  int _2;
  unsigned char _3;
  unsigned char _5;
  <unnamed type> _6;
  volatile struct Clock_Ip_CgmMuxType * _7;
  long unsigned int _8;
  long unsigned int TimeoutTicks.0_9;
  <unnamed type> _10;

  <bb 2> [local count: 497244719]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG TimeoutOccurred => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Config_13(D) != 0B)
    goto <bb 3>; [70.00%]
  else
    goto <bb 9>; [30.00%]

  <bb 3> [local count: 348071305]:
  # DEBUG BEGIN_STMT
  _1 = Config_13(D)->Name;
  _2 = (int) _1;
  _3 = Clock_Ip_au8ClockFeatures[_2][0];
  Instance_15 = (uint32) _3;
  # DEBUG Instance => Instance_15
  # DEBUG BEGIN_STMT
  _5 = Clock_Ip_au8ClockFeatures[_2][4];
  SelectorIndex_16 = (uint32) _5;
  # DEBUG SelectorIndex => SelectorIndex_16
  # DEBUG BEGIN_STMT
  _6 = Config_13(D)->TriggerType;
  if (_6 != 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 9>; [67.00%]

  <bb 4> [local count: 114863530]:
  # DEBUG BEGIN_STMT
  _7 = Clock_Ip_apxCgm[Instance_15][SelectorIndex_16];
  _7->MUX_DIV_TRIG ={v} 1;
  # DEBUG BEGIN_STMT
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _8 ={v} _7->MUX_DIV_UPD_STAT;
  DividerStatus_19 = _8 & 1;
  # DEBUG DividerStatus => DividerStatus_19
  # DEBUG BEGIN_STMT
  TimeoutTicks.0_9 = TimeoutTicks;
  TimeoutOccurred_21 = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.0_9);
  # DEBUG TimeoutOccurred => TimeoutOccurred_21
  # DEBUG BEGIN_STMT
  if (DividerStatus_19 != 0)
    goto <bb 6>; [94.50%]
  else
    goto <bb 7>; [5.50%]

  <bb 6> [local count: 1014686024]:
  if (TimeoutOccurred_21 != 0)
    goto <bb 7>; [5.50%]
  else
    goto <bb 10>; [94.50%]

  <bb 10> [local count: 958878293]:
  goto <bb 5>; [100.00%]

  <bb 7> [local count: 114863531]:
  # TimeoutOccurred_4 = PHI <TimeoutOccurred_21(5), TimeoutOccurred_21(6)>
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_4 != 0)
    goto <bb 8>; [33.00%]
  else
    goto <bb 9>; [67.00%]

  <bb 8> [local count: 37904965]:
  # DEBUG BEGIN_STMT
  _10 = Config_13(D)->Name;
  Clock_Ip_ReportClockErrors (1, _10);

  <bb 9> [local count: 497244720]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}


Clock_Ip_ConfigureCgmXDivTrigCtrlTctlHhenUpdStat (const struct Clock_Ip_DividerTriggerConfigType * Config)
{
  uint32 SelectorIndex;
  uint32 Instance;
  <unnamed type> _1;
  int _2;
  unsigned char _3;
  unsigned char _4;
  <unnamed type> _5;
  volatile struct Clock_Ip_CgmMuxType * _6;
  volatile struct Clock_Ip_CgmMuxType * _7;
  long unsigned int _8;
  long unsigned int _9;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Config_11(D) != 0B)
    goto <bb 3>; [70.00%]
  else
    goto <bb 6>; [30.00%]

  <bb 3> [local count: 751619281]:
  # DEBUG BEGIN_STMT
  _1 = Config_11(D)->Name;
  _2 = (int) _1;
  _3 = Clock_Ip_au8ClockFeatures[_2][0];
  Instance_13 = (uint32) _3;
  # DEBUG Instance => Instance_13
  # DEBUG BEGIN_STMT
  _4 = Clock_Ip_au8ClockFeatures[_2][4];
  SelectorIndex_14 = (uint32) _4;
  # DEBUG SelectorIndex => SelectorIndex_14
  # DEBUG BEGIN_STMT
  _5 = Config_11(D)->TriggerType;
  if (_5 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 375809640]:
  # DEBUG BEGIN_STMT
  _6 = Clock_Ip_apxCgm[Instance_13][SelectorIndex_14];
  _6->MUX_DIV_TRIG_CTRL ={v} 1;
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 375809640]:
  # DEBUG BEGIN_STMT
  _7 = Clock_Ip_apxCgm[Instance_13][SelectorIndex_14];
  _8 ={v} _7->MUX_DIV_TRIG_CTRL;
  _9 = _8 & 4294967294;
  _7->MUX_DIV_TRIG_CTRL ={v} _9;

  <bb 6> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Clock_Ip_Callback_DividerTriggerEmpty (const struct Clock_Ip_DividerTriggerConfigType * Config)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}


