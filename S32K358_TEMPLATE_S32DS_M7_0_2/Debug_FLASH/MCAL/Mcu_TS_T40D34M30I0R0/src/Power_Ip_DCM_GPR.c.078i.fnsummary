
Analyzing function: Power_Ip_DCM_GPR_GlobalPadkeepingConfig/1
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Power_Ip_DCM_GPR_GlobalPadkeepingConfig/1

IPA function summary for Power_Ip_DCM_GPR_GlobalPadkeepingConfig/1 inlinable
  global time:     8.000000
  self size:       9
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:4.000000, time:4.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:


Analyzing function: Power_Ip_DCM_GPR_Config/0
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 7 }
;; 3 succs { 4 5 }
;; 4 succs { 6 }
;; 5 succs { 6 }
;; 6 succs { 7 }
;; 7 succs { 1 }

Analyzing function body size: Power_Ip_DCM_GPR_Config/0

IPA function summary for Power_Ip_DCM_GPR_Config/0 inlinable
  global time:     9.840000
  self size:       18
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op0[ref offset: 0] changed)
    size:0.500000, time:0.250000,  executed if:(op0[ref offset: 0] != 0) && (not inlined),  nonconst if:(op0[ref offset: 8] changed) && (op0[ref offset: 0] != 0) && (not inlined)
    size:2.500000, time:1.250000,  executed if:(op0[ref offset: 0] != 0),  nonconst if:(op0[ref offset: 8] changed) && (op0[ref offset: 0] != 0)
    size:1.000000, time:0.330000,  executed if:(op0[ref offset: 8] != 1) && (op0[ref offset: 0] != 0)
    size:0.500000, time:0.085000,  executed if:(op0[ref offset: 8] == 1) && (op0[ref offset: 0] != 0) && (not inlined),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 8] == 1) && (op0[ref offset: 0] != 0) && (not inlined)
    size:1.500000, time:0.255000,  executed if:(op0[ref offset: 8] == 1) && (op0[ref offset: 0] != 0),  nonconst if:(op0[ref offset: 32] changed) && (op0[ref offset: 8] == 1) && (op0[ref offset: 0] != 0)
    size:1.000000, time:0.170000,  executed if:(op0[ref offset: 8] == 1) && (op0[ref offset: 0] != 0)
    size:4.000000, time:2.000000,  executed if:(op0[ref offset: 0] != 0)
    size:0.500000, time:0.250000,  executed if:(op0[ref offset: 0] != 0) && (not inlined),  nonconst if:(op0[ref offset: 64] changed) && (op0[ref offset: 0] != 0) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op0[ref offset: 0] != 0),  nonconst if:(op0[ref offset: 64] changed) && (op0[ref offset: 0] != 0)
  calls:

Symbol table:

Power_Ip_DCM_GPR_GlobalPadkeepingConfig/1 (Power_Ip_DCM_GPR_GlobalPadkeepingConfig) @06f97a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Power_Ip_DCM_GPR_Config/0 (Power_Ip_DCM_GPR_Config) @06f97c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Power_Ip_DCM_GPR_GlobalPadkeepingConfig (uint8 Config)
{
  uint32 TempValue;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG TempValue => 0
  # DEBUG BEGIN_STMT
  TempValue_5 ={v} MEM[(struct DCM_GPR_Type *)1076543488B].DCMRWF1;
  # DEBUG TempValue => TempValue_5
  # DEBUG BEGIN_STMT
  TempValue_6 = TempValue_5 & 4294901759;
  # DEBUG TempValue => TempValue_6
  # DEBUG BEGIN_STMT
  _1 = (long unsigned int) Config_7(D);
  _2 = _1 << 16;
  _3 = _2 & 65536;
  TempValue_8 = _3 | TempValue_6;
  # DEBUG TempValue => TempValue_8
  # DEBUG BEGIN_STMT
  MEM[(struct DCM_GPR_Type *)1076543488B].DCMRWF1 ={v} TempValue_8;
  return;

}


Power_Ip_DCM_GPR_Config (const struct Power_Ip_DCM_GPR_ConfigType * ConfigPtr)
{
  uint32 TempValue;
  _Bool _1;
  unsigned char _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG TempValue => 0
  # DEBUG BEGIN_STMT
  _1 = ConfigPtr_9(D)->DcmGprUnderMcuControl;
  if (_1 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _2 = ConfigPtr_9(D)->BootMode;
  if (_2 == 1)
    goto <bb 4>; [34.00%]
  else
    goto <bb 5>; [66.00%]

  <bb 4> [local count: 182536112]:
  # DEBUG BEGIN_STMT
  _3 = ConfigPtr_9(D)->BootAddress;
  _4 = _3 | 1;
  MEM[(struct DCM_GPR_Type *)1076543488B].DCMRWF5 ={v} _4;
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 354334800]:
  # DEBUG BEGIN_STMT
  MEM[(struct DCM_GPR_Type *)1076543488B].DCMRWF5 ={v} 0;

  <bb 6> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  TempValue_12 ={v} MEM[(struct DCM_GPR_Type *)1076543488B].DCMRWF2;
  # DEBUG TempValue => TempValue_12
  # DEBUG BEGIN_STMT
  TempValue_13 = TempValue_12 & 4294967175;
  # DEBUG TempValue => TempValue_13
  # DEBUG BEGIN_STMT
  _5 = ConfigPtr_9(D)->ConfigRegister;
  TempValue_14 = _5 | TempValue_13;
  # DEBUG TempValue => TempValue_14
  # DEBUG BEGIN_STMT
  MEM[(struct DCM_GPR_Type *)1076543488B].DCMRWF2 ={v} TempValue_14;

  <bb 7> [local count: 1073741824]:
  return;

}


