
Analyzing function: Clock_Ip_ClockUpdateGateMcMePartitionCollectionClockRequest/3
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 1 }

Analyzing function body size: Clock_Ip_ClockUpdateGateMcMePartitionCollectionClockRequest/3

IPA function summary for Clock_Ip_ClockUpdateGateMcMePartitionCollectionClockRequest/3 inlinable
  global time:     17.000000
  self size:       10
  global size:     0
  min size:       0
  self stack:      4
  global stack:    4
    size:1.000000, time:1.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:1.000000, time:0.500000,  executed if:(op1 == 0)
    size:1.000000, time:0.500000,  executed if:(op1 != 0)
  calls:
    Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11
       op0 is compile time invariant


Analyzing function: Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 17 8 9 10 11 12 13 18 14 15 16
;;
;; Loop 2
;;  header 6, latch 17
;;  depth 1, outer 0
;;  nodes: 6 17 7
;;
;; Loop 1
;;  header 12, latch 18
;;  depth 1, outer 0
;;  nodes: 12 18 13
;; 2 succs { 3 16 }
;; 3 succs { 4 10 }
;; 4 succs { 5 16 }
;; 5 succs { 6 }
;; 6 succs { 7 8 }
;; 7 succs { 17 8 }
;; 17 succs { 6 }
;; 8 succs { 9 16 }
;; 9 succs { 16 }
;; 10 succs { 11 16 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 18 14 }
;; 18 succs { 12 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 1 }

Analyzing function body size: Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.
		Accounting address calculation.

IPA function summary for Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 inlinable
  global time:     79.003151
  self size:       112
  global size:     0
  min size:       0
  self stack:      12
  global stack:    12
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:0.500000, time:0.350000,  executed if:(op0 != 0B) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op0 != 0B) && (not inlined)
    size:1.500000, time:1.050000,  executed if:(op0 != 0B),  nonconst if:(op0[ref offset: 0] changed) && (op0 != 0B)
    size:7.000000, time:4.900000,  executed if:(op0 != 0B)
    size:0.500000, time:0.350000,  executed if:(op0 != 0B) && (not inlined),  nonconst if:(op0[ref offset: 16] changed) && (op0 != 0B) && (not inlined)
    size:2.500000, time:1.750000,  executed if:(op0 != 0B),  nonconst if:(op0[ref offset: 16] changed) && (op0 != 0B)
    size:33.500000, time:14.995207,  executed if:(op0[ref offset: 16] == 0) && (op0 != 0B)
    size:0.500000, time:0.019058,  executed if:(op0[ref offset: 16] == 0) && (op0 != 0B) && (not inlined)
    size:32.500000, time:14.879707,  executed if:(op0[ref offset: 16] != 0) && (op0 != 0B)
    size:0.500000, time:0.019058,  executed if:(op0[ref offset: 16] != 0) && (op0 != 0B) && (not inlined)
  calls:
    Clock_Ip_ReportClockErrors/13 function body not available
      freq:0.04 loop depth: 0 size: 3 time: 12 predicate: (op0[ref offset: 16] == 0) && (op0 != 0B)
       op0 is compile time invariant
    Clock_Ip_TimeoutExpired/11 function body not available
      freq:1.08 loop depth: 1 size: 5 time: 14 predicate: (op0[ref offset: 16] == 0) && (op0 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
    Clock_Ip_StartTimeout/10 function body not available
      freq:0.12 loop depth: 0 size: 5 time: 14 predicate: (op0[ref offset: 16] == 0) && (op0 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Clock_Ip_McMeEnterKey/9 function body not available
      freq:0.12 loop depth: 0 size: 1 time: 10 predicate: (op0[ref offset: 16] == 0) && (op0 != 0B)
    Clock_Ip_ReportClockErrors/13 function body not available
      freq:0.04 loop depth: 0 size: 3 time: 12 predicate: (op0[ref offset: 16] != 0) && (op0 != 0B)
       op0 is compile time invariant
    Clock_Ip_TimeoutExpired/11 function body not available
      freq:1.08 loop depth: 1 size: 5 time: 14 predicate: (op0[ref offset: 16] != 0) && (op0 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
    Clock_Ip_StartTimeout/10 function body not available
      freq:0.12 loop depth: 0 size: 5 time: 14 predicate: (op0[ref offset: 16] != 0) && (op0 != 0B)
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Clock_Ip_McMeEnterKey/9 function body not available
      freq:0.12 loop depth: 0 size: 1 time: 10 predicate: (op0[ref offset: 16] != 0) && (op0 != 0B)


Analyzing function: Clock_Ip_ClockUpdateGateEmpty/1
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_ClockUpdateGateEmpty/1

IPA function summary for Clock_Ip_ClockUpdateGateEmpty/1 inlinable
  global time:     2.000000
  self size:       3
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:


Analyzing function: Clock_Ip_ClockSetGateEmpty/0
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2
;; 2 succs { 1 }

Analyzing function body size: Clock_Ip_ClockSetGateEmpty/0

IPA function summary for Clock_Ip_ClockSetGateEmpty/0 inlinable
  global time:     2.000000
  self size:       3
  global size:     0
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

Symbol table:

Clock_Ip_ReportClockErrors/13 (Clock_Ip_ReportClockErrors) @062d98c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (37904965 (estimated locally),0.04 per call) Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (37904965 (estimated locally),0.04 per call) 
  Calls: 
Clock_Ip_apxMcMeGetPartitions/12 (Clock_Ip_apxMcMeGetPartitions) @062d8bd0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (read) Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_TimeoutExpired/11 (Clock_Ip_TimeoutExpired) @062d97e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (1073741824 (estimated locally),1.08 per call) Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (1073741824 (estimated locally),1.08 per call) 
  Calls: 
Clock_Ip_StartTimeout/10 (Clock_Ip_StartTimeout) @062d9700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (114863530 (estimated locally),0.12 per call) Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (114863530 (estimated locally),0.12 per call) 
  Calls: 
Clock_Ip_McMeEnterKey/9 (Clock_Ip_McMeEnterKey) @062d9620
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (114863530 (estimated locally),0.12 per call) Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (114863530 (estimated locally),0.12 per call) 
  Calls: 
Clock_Ip_apxMcMeTriggerPartitions/8 (Clock_Ip_apxMcMeTriggerPartitions) @062d8ab0
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (read) Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_apxMcMeSetPartitions/7 (Clock_Ip_apxMcMeSetPartitions) @062d8a68
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (read) Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axGateInfo/6 (Clock_Ip_axGateInfo) @062d8a20
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (read) Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (read) Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_au8ClockFeatures/5 (Clock_Ip_au8ClockFeatures) @062d89d8
  Type: variable
  Body removed by symtab_remove_unreachable_nodes
  Visibility: external public
  References: 
  Referring: Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (read) 
  Availability: not_available
  Varpool flags: read-only
Clock_Ip_axGateCallbacks/4 (Clock_Ip_axGateCallbacks) @061eff30
  Type: variable definition analyzed
  Visibility: externally_visible public
  References: Clock_Ip_ClockSetGateEmpty/0 (addr) Clock_Ip_ClockUpdateGateEmpty/1 (addr) Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (addr) Clock_Ip_ClockUpdateGateMcMePartitionCollectionClockRequest/3 (addr) 
  Referring: 
  Availability: available
  Varpool flags: initialized read-only const-value-known
Clock_Ip_ClockUpdateGateMcMePartitionCollectionClockRequest/3 (Clock_Ip_ClockUpdateGateMcMePartitionCollectionClockRequest) @061f3ee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axGateCallbacks/4 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (1073741824 (estimated locally),1.00 per call) 
Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest/2 (Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest) @061f3c40
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: Clock_Ip_au8ClockFeatures/5 (read) Clock_Ip_axGateInfo/6 (read) Clock_Ip_axGateInfo/6 (read) Clock_Ip_axGateInfo/6 (read) Clock_Ip_apxMcMeSetPartitions/7 (read) Clock_Ip_apxMcMeTriggerPartitions/8 (read) Clock_Ip_apxMcMeGetPartitions/12 (read) Clock_Ip_apxMcMeSetPartitions/7 (read) Clock_Ip_apxMcMeTriggerPartitions/8 (read) Clock_Ip_apxMcMeGetPartitions/12 (read) 
  Referring: Clock_Ip_axGateCallbacks/4 (addr) 
  Availability: available
  Function flags: count:994489439 (estimated locally) body optimize_size
  Called by: Clock_Ip_ClockUpdateGateMcMePartitionCollectionClockRequest/3 (1073741824 (estimated locally),1.00 per call) 
  Calls: Clock_Ip_ReportClockErrors/13 (37904965 (estimated locally),0.04 per call) Clock_Ip_TimeoutExpired/11 (1073741824 (estimated locally),1.08 per call) Clock_Ip_StartTimeout/10 (114863530 (estimated locally),0.12 per call) Clock_Ip_McMeEnterKey/9 (114863530 (estimated locally),0.12 per call) Clock_Ip_ReportClockErrors/13 (37904965 (estimated locally),0.04 per call) Clock_Ip_TimeoutExpired/11 (1073741824 (estimated locally),1.08 per call) Clock_Ip_StartTimeout/10 (114863530 (estimated locally),0.12 per call) Clock_Ip_McMeEnterKey/9 (114863530 (estimated locally),0.12 per call) 
Clock_Ip_ClockUpdateGateEmpty/1 (Clock_Ip_ClockUpdateGateEmpty) @061f39a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axGateCallbacks/4 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_ClockSetGateEmpty/0 (Clock_Ip_ClockSetGateEmpty) @061f3700
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  Address is taken.
  References: 
  Referring: Clock_Ip_axGateCallbacks/4 (addr) 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Clock_Ip_ClockUpdateGateMcMePartitionCollectionClockRequest (Clock_Ip_NameType ClockName, boolean Gate)
{
  struct Clock_Ip_GateConfigType Config;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Config.Name = ClockName_3(D);
  # DEBUG BEGIN_STMT
  if (Gate_5(D) != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Config.Enable = 0;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  Config.Enable = 1;

  <bb 5> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest (&Config);
  Config ={v} {CLOBBER};
  return;

}


Clock_Ip_ClockSetGateMcMePartitionCollectionClockRequest (const struct Clock_Ip_GateConfigType * Config)
{
  uint32 EnableRequest;
  uint32 Collection;
  uint32 Partition;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  boolean TimeoutOccurred;
  <unnamed type> _1;
  int _2;
  unsigned char _3;
  int _4;
  unsigned char _5;
  unsigned char _6;
  short unsigned int _7;
  volatile struct Clock_Ip_McmePartitionSetType * _8;
  long unsigned int _9;
  long unsigned int _10;
  long unsigned int _11;
  long unsigned int _12;
  volatile struct Clock_Ip_McmePartitionTriggerType * _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;
  long unsigned int TimeoutTicks.0_18;
  const volatile struct Clock_Ip_McmePartitionGetType * _19;
  long unsigned int _20;
  long unsigned int _21;
  <unnamed type> _22;
  volatile struct Clock_Ip_McmePartitionSetType * _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _30;
  volatile struct Clock_Ip_McmePartitionTriggerType * _31;
  long unsigned int _32;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  long unsigned int TimeoutTicks.1_36;
  const volatile struct Clock_Ip_McmePartitionGetType * _37;
  long unsigned int _38;
  long unsigned int _39;
  <unnamed type> _40;

  <bb 2> [local count: 994489439]:
  # DEBUG BEGIN_STMT
  # DEBUG TimeoutOccurred => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  if (Config_44(D) != 0B)
    goto <bb 3>; [70.00%]
  else
    goto <bb 16>; [30.00%]

  <bb 3> [local count: 696142611]:
  # DEBUG BEGIN_STMT
  _1 = Config_44(D)->Name;
  _2 = (int) _1;
  _3 = Clock_Ip_au8ClockFeatures[_2][6];
  _4 = (int) _3;
  # DEBUG D#1 => &Clock_Ip_axGateInfo[_4]
  # DEBUG GateInformation => D#1
  # DEBUG BEGIN_STMT
  _5 = MEM <const struct Clock_Ip_GateInfoType[219]> [(const struct Clock_Ip_GateInfoType *)&Clock_Ip_axGateInfo][_4].PartitionValue;
  Partition_46 = (uint32) _5;
  # DEBUG Partition => Partition_46
  # DEBUG BEGIN_STMT
  _6 = MEM <const struct Clock_Ip_GateInfoType[219]> [(const struct Clock_Ip_GateInfoType *)&Clock_Ip_axGateInfo][_4].ColectionValue;
  Collection_47 = (uint32) _6;
  # DEBUG Collection => Collection_47
  # DEBUG BEGIN_STMT
  EnableRequest_48 = MEM <const struct Clock_Ip_GateInfoType[219]> [(const struct Clock_Ip_GateInfoType *)&Clock_Ip_axGateInfo][_4].RequestValueMask;
  # DEBUG EnableRequest => EnableRequest_48
  # DEBUG BEGIN_STMT
  _7 = Config_44(D)->Enable;
  if (_7 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 4> [local count: 348071305]:
  # DEBUG BEGIN_STMT
  _8 = Clock_Ip_apxMcMeSetPartitions[Partition_46];
  _9 ={v} _8->PRTN_COFB_CLKEN[Collection_47];
  _10 = _9 & EnableRequest_48;
  if (_10 == 0)
    goto <bb 5>; [33.00%]
  else
    goto <bb 16>; [67.00%]

  <bb 5> [local count: 114863530]:
  # DEBUG BEGIN_STMT
  _11 ={v} _8->PRTN_COFB_CLKEN[Collection_47];
  _12 = _11 | EnableRequest_48;
  _8->PRTN_COFB_CLKEN[Collection_47] ={v} _12;
  # DEBUG BEGIN_STMT
  _13 = Clock_Ip_apxMcMeTriggerPartitions[Partition_46];
  _14 ={v} _13->PRTN_PCONF;
  _15 = _14 | 1;
  _13->PRTN_PCONF ={v} _15;
  # DEBUG BEGIN_STMT
  _16 ={v} _13->PRTN_PUPD;
  _17 = _16 | 1;
  _13->PRTN_PUPD ={v} _17;
  # DEBUG BEGIN_STMT
  Clock_Ip_McMeEnterKey ();
  # DEBUG BEGIN_STMT
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 6> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TimeoutTicks.0_18 = TimeoutTicks;
  TimeoutOccurred_63 = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.0_18);
  # DEBUG TimeoutOccurred => TimeoutOccurred_63
  # DEBUG BEGIN_STMT
  _19 = Clock_Ip_apxMcMeGetPartitions[Partition_46];
  _20 ={v} _19->PRTN_COFB_STAT[Collection_47];
  _21 = _20 & EnableRequest_48;
  if (_21 == 0)
    goto <bb 7>; [94.50%]
  else
    goto <bb 8>; [5.50%]

  <bb 7> [local count: 1014686024]:
  if (TimeoutOccurred_63 != 0)
    goto <bb 8>; [5.50%]
  else
    goto <bb 17>; [94.50%]

  <bb 17> [local count: 958878293]:
  goto <bb 6>; [100.00%]

  <bb 8> [local count: 114863531]:
  # TimeoutOccurred_29 = PHI <TimeoutOccurred_63(6), TimeoutOccurred_63(7)>
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_29 != 0)
    goto <bb 9>; [33.00%]
  else
    goto <bb 16>; [67.00%]

  <bb 9> [local count: 37904965]:
  # DEBUG BEGIN_STMT
  _22 = Config_44(D)->Name;
  Clock_Ip_ReportClockErrors (1, _22);
  goto <bb 16>; [100.00%]

  <bb 10> [local count: 348071305]:
  # DEBUG BEGIN_STMT
  _23 = Clock_Ip_apxMcMeSetPartitions[Partition_46];
  _24 ={v} _23->PRTN_COFB_CLKEN[Collection_47];
  _25 = _24 & EnableRequest_48;
  if (_25 != 0)
    goto <bb 11>; [33.00%]
  else
    goto <bb 16>; [67.00%]

  <bb 11> [local count: 114863530]:
  # DEBUG BEGIN_STMT
  _27 ={v} _23->PRTN_COFB_CLKEN[Collection_47];
  _28 = ~EnableRequest_48;
  _30 = _27 & _28;
  _23->PRTN_COFB_CLKEN[Collection_47] ={v} _30;
  # DEBUG BEGIN_STMT
  _31 = Clock_Ip_apxMcMeTriggerPartitions[Partition_46];
  _32 ={v} _31->PRTN_PCONF;
  _33 = _32 | 1;
  _31->PRTN_PCONF ={v} _33;
  # DEBUG BEGIN_STMT
  _34 ={v} _31->PRTN_PUPD;
  _35 = _34 | 1;
  _31->PRTN_PUPD ={v} _35;
  # DEBUG BEGIN_STMT
  Clock_Ip_McMeEnterKey ();
  # DEBUG BEGIN_STMT
  Clock_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 12> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TimeoutTicks.1_36 = TimeoutTicks;
  TimeoutOccurred_55 = Clock_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.1_36);
  # DEBUG TimeoutOccurred => TimeoutOccurred_55
  # DEBUG BEGIN_STMT
  _37 = Clock_Ip_apxMcMeGetPartitions[Partition_46];
  _38 ={v} _37->PRTN_COFB_STAT[Collection_47];
  _39 = _38 & EnableRequest_48;
  if (_39 != 0)
    goto <bb 13>; [94.50%]
  else
    goto <bb 14>; [5.50%]

  <bb 13> [local count: 1014686024]:
  if (TimeoutOccurred_55 != 0)
    goto <bb 14>; [5.50%]
  else
    goto <bb 18>; [94.50%]

  <bb 18> [local count: 958878293]:
  goto <bb 12>; [100.00%]

  <bb 14> [local count: 114863531]:
  # TimeoutOccurred_26 = PHI <TimeoutOccurred_55(12), TimeoutOccurred_55(13)>
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_26 != 0)
    goto <bb 15>; [33.00%]
  else
    goto <bb 16>; [67.00%]

  <bb 15> [local count: 37904965]:
  # DEBUG BEGIN_STMT
  _40 = Config_44(D)->Name;
  Clock_Ip_ReportClockErrors (1, _40);

  <bb 16> [local count: 994489443]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}


Clock_Ip_ClockUpdateGateEmpty (Clock_Ip_NameType ClockName, boolean Gate)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  return;

}


Clock_Ip_ClockSetGateEmpty (const struct Clock_Ip_GateConfigType * Config)
{
  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return;

}


