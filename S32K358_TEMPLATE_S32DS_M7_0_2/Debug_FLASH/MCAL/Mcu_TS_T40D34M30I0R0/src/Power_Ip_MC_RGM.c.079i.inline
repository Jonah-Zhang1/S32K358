IPA function summary for Power_Ip_MC_RGM_ClearDesResetFlags.part.0/16 inlinable
  global time:     235.935231
  self size:       27
  global size:     27
  min size:       24
  self stack:      12
  global stack:    12
    size:11.000000, time:85.103530
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Power_Ip_StartTimeout/11 function body not available
      freq:1.00 loop depth: 0 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Power_Ip_TimeoutExpired/12 function body not available
      freq:9.35 loop depth: 1 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
    Power_Ip_ReportPowerErrors/13 function body not available
      freq:0.33 loop depth: 0 size: 3 time: 12
       op0 is compile time invariant
       op1 is compile time invariant

IPA function summary for Power_Ip_MC_RGM_ClearFesResetFlags.part.0/15 inlinable
  global time:     235.935231
  self size:       27
  global size:     27
  min size:       24
  self stack:      12
  global stack:    12
    size:11.000000, time:85.103530
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Power_Ip_StartTimeout/11 function body not available
      freq:1.00 loop depth: 0 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Power_Ip_TimeoutExpired/12 function body not available
      freq:9.35 loop depth: 1 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
    Power_Ip_ReportPowerErrors/13 function body not available
      freq:0.33 loop depth: 0 size: 3 time: 12
       op0 is compile time invariant
       op1 is compile time invariant

IPA function summary for Power_Ip_MC_RGM_ResetDuringStandby/10 inlinable
  global time:     12.000000
  self size:       14
  global size:     14
  min size:       11
  self stack:      0
  global stack:    0
    size:11.000000, time:10.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Power_Ip_MC_RGM_GetResetRawValue/9 inlinable
  global time:     342.321366
  self size:       57
  global size:     57
  min size:       54
  self stack:      0
  global stack:    0
    size:48.000000, time:325.691366
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Power_Ip_MC_ME_GetPreviousMode/14 function body not available
      freq:0.33 loop depth: 0 size: 2 time: 11
    Power_Ip_MC_RGM_ClearDesResetFlags/5 function not considered for inlining
      freq:0.50 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0
    Power_Ip_MC_RGM_ClearFesResetFlags/4 function not considered for inlining
      freq:0.50 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0

IPA function summary for Power_Ip_MC_RGM_GetResetReason/8 inlinable
  global time:     48.560000
  self size:       36
  global size:     36
  min size:       33
  self stack:      4
  global stack:    4
    size:19.000000, time:13.750000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Power_Ip_MC_RGM_ClearFesResetFlags/4 function not considered for inlining
      freq:0.50 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0
    Power_Ip_MC_RGM_CheckResetReason/7 function not considered for inlining
      freq:0.16 loop depth: 0 size: 5 time: 14 callee size:10 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant
    Power_Ip_MC_RGM_ClearDesResetFlags/5 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0
    Power_Ip_MC_RGM_CheckResetReason/7 function not considered for inlining
      freq:1.00 loop depth: 0 size: 5 time: 14 callee size:10 stack: 0
       op1 is compile time invariant
       op2 is compile time invariant

IPA function summary for Power_Ip_MC_RGM_CheckResetReason/7 inlinable
  global time:     223.459883
  self size:       21
  global size:     21
  min size:       15
  self stack:      0
  global stack:    0
    size:14.500000, time:217.959883
    size:3.500000, time:2.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op2[ref offset: 0] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op2[ref offset: 0] changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
  calls:

IPA function summary for Power_Ip_MC_RGM_ResetInit/6 inlinable
  global time:     20.960000
  self size:       23
  global size:     23
  min size:       19
  self stack:      0
  global stack:    0
    size:16.500000, time:14.330000
    size:4.500000, time:3.000000,  executed if:(not inlined)
  calls:
    Power_Ip_MC_RGM_ClearFesResetFlags/4 function not considered for inlining
      freq:0.33 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0

IPA function summary for Power_Ip_MC_RGM_ClearDesResetFlags/5 inlinable
  global time:     7.630000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    Power_Ip_MC_RGM_ClearDesResetFlags.part.0/16 function not considered for inlining
      freq:0.33 loop depth: 0 size: 2 time: 11 callee size:13 stack:12 predicate: (op0 != 0)

IPA function summary for Power_Ip_MC_RGM_ClearFesResetFlags/4 inlinable
  global time:     7.630000
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    Power_Ip_MC_RGM_ClearFesResetFlags.part.0/15 function not considered for inlining
      freq:0.33 loop depth: 0 size: 2 time: 11 callee size:13 stack:12 predicate: (op0 != 0)


Flattening functions:
Overall time estimate: 1134.431711 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in Power_Ip_MC_RGM_ClearDesResetFlags.part.0/16.
Enqueueing calls in Power_Ip_MC_RGM_ClearFesResetFlags.part.0/15.
Enqueueing calls in Power_Ip_MC_RGM_ResetDuringStandby/10.
Enqueueing calls in Power_Ip_MC_RGM_GetResetRawValue/9.
Enqueueing calls in Power_Ip_MC_RGM_GetResetReason/8.
Enqueueing calls in Power_Ip_MC_RGM_CheckResetReason/7.
Enqueueing calls in Power_Ip_MC_RGM_ResetInit/6.
Enqueueing calls in Power_Ip_MC_RGM_ClearDesResetFlags/5.
Enqueueing calls in Power_Ip_MC_RGM_ClearFesResetFlags/4.

Considering Power_Ip_MC_RGM_ClearDesResetFlags/5 with 7 size
 to be inlined into Power_Ip_MC_RGM_GetResetReason/8 in C:/Users/zhang_liu/workspaceS32DS.3.5/S32K358_TEMPLATE_S32DS/S32K358_TEMPLATE_S32DS_M7_0_0/MCAL/Mcu_TS_T40D34M30I0R0/src/Power_Ip_MC_RGM.c:551
 Estimated badness is -0.684211, frequency 1.00.

Considering Power_Ip_MC_RGM_ClearFesResetFlags/4 with 7 size
 to be inlined into Power_Ip_MC_RGM_GetResetRawValue/9 in C:/Users/zhang_liu/workspaceS32DS.3.5/S32K358_TEMPLATE_S32DS/S32K358_TEMPLATE_S32DS_M7_0_0/MCAL/Mcu_TS_T40D34M30I0R0/src/Power_Ip_MC_RGM.c:655
 Estimated badness is -0.220339, frequency 0.50.

Considering Power_Ip_MC_RGM_ClearDesResetFlags/5 with 7 size
 to be inlined into Power_Ip_MC_RGM_GetResetRawValue/9 in C:/Users/zhang_liu/workspaceS32DS.3.5/S32K358_TEMPLATE_S32DS/S32K358_TEMPLATE_S32DS_M7_0_0/MCAL/Mcu_TS_T40D34M30I0R0/src/Power_Ip_MC_RGM.c:694
 Estimated badness is -0.220339, frequency 0.50.

Considering Power_Ip_MC_RGM_ClearFesResetFlags.part.0/15 with 27 size
 to be inlined into Power_Ip_MC_RGM_ClearFesResetFlags/4 in unknown:0
 Estimated badness is -0.026897, frequency 0.33.

Considering Power_Ip_MC_RGM_CheckResetReason/7 with 21 size
 to be inlined into Power_Ip_MC_RGM_GetResetReason/8 in C:/Users/zhang_liu/workspaceS32DS.3.5/S32K358_TEMPLATE_S32DS/S32K358_TEMPLATE_S32DS_M7_0_0/MCAL/Mcu_TS_T40D34M30I0R0/src/Power_Ip_MC_RGM.c:569
 Estimated badness is -0.026812, frequency 0.16.
node context cache: 7 hits, 1 misses, 6 initializations

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:

Inlining Power_Ip_MC_RGM_CheckResetReason/7 size 21.
 Called once from Power_Ip_MC_RGM_GetResetReason/8 38 insns.
 Inlined into Power_Ip_MC_RGM_GetResetReason/8 which now has 48 size

Inlining Power_Ip_MC_RGM_CheckResetReason/7 size 21.
 Called once from Power_Ip_MC_RGM_GetResetReason/8 48 insns.
 Inlined into Power_Ip_MC_RGM_GetResetReason/8 which now has 58 size
Overall time estimate: 970.533487 weighted by profile: 0.000000

Why inlining failed?
function body not available                       :        7 calls, 14.531712 freq, 0 count
--param max-inline-insns-auto limit reached       :        5 calls, 1.825000 freq, 0 count
IPA function summary for Power_Ip_MC_RGM_ClearDesResetFlags.part.0/16 inlinable
  global time:     235.935231
  self size:       27
  global size:     27
  min size:       24
  self stack:      12
  global stack:    12
  estimated growth:-5
    size:11.000000, time:85.103530
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Power_Ip_StartTimeout/11 function body not available
      freq:1.00 loop depth: 0 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
       op2 is compile time invariant
       op3 is compile time invariant
    Power_Ip_TimeoutExpired/12 function body not available
      freq:9.35 loop depth: 1 size: 5 time: 14
       op0 is compile time invariant
       op1 is compile time invariant
    Power_Ip_ReportPowerErrors/13 function body not available
      freq:0.33 loop depth: 0 size: 3 time: 12
       op0 is compile time invariant
       op1 is compile time invariant

IPA function summary for Power_Ip_MC_RGM_ResetDuringStandby/10 inlinable
  global time:     12.000000
  self size:       14
  global size:     14
  min size:       11
  self stack:      0
  global stack:    0
    size:11.000000, time:10.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:

IPA function summary for Power_Ip_MC_RGM_GetResetRawValue/9 inlinable
  global time:     339.636366
  self size:       57
  global size:     59
  min size:       56
  self stack:      0
  global stack:    0
    size:50.000000, time:326.691366
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Power_Ip_MC_ME_GetPreviousMode/14 function body not available
      freq:0.33 loop depth: 0 size: 2 time: 11
    Power_Ip_MC_RGM_ClearDesResetFlags/5 inlined
      freq:0.50
      Stack frame offset 0, callee self size 0
      Power_Ip_MC_RGM_ClearDesResetFlags.part.0/16 --param max-inline-insns-auto limit reached
        freq:0.16 loop depth: 0 size: 2 time: 11 callee size:13 stack:12
    Power_Ip_MC_RGM_ClearFesResetFlags/4 --param max-inline-insns-auto limit reached
      freq:0.50 loop depth: 0 size: 2 time: 11 callee size:14 stack:12

IPA function summary for Power_Ip_MC_RGM_GetResetReason/8 inlinable
  global time:     280.803264
  self size:       36
  global size:     58
  min size:       55
  self stack:      4
  global stack:    4
    size:50.500000, time:269.673264
    size:3.000000, time:2.000000,  executed if:(not inlined)
  calls:
    Power_Ip_MC_RGM_ClearFesResetFlags/4 --param max-inline-insns-auto limit reached
      freq:0.50 loop depth: 0 size: 2 time: 11 callee size:14 stack:12
    Power_Ip_MC_RGM_CheckResetReason/18 inlined
      freq:0.16
      Stack frame offset 4, callee self size 0
    Power_Ip_MC_RGM_ClearDesResetFlags/17 inlined
      freq:1.00
      Stack frame offset 4, callee self size 0
      Power_Ip_MC_RGM_ClearDesResetFlags.part.0/16 --param max-inline-insns-auto limit reached
        freq:0.33 loop depth: 0 size: 2 time: 11 callee size:13 stack:12
    Power_Ip_MC_RGM_CheckResetReason/7 inlined
      freq:1.00
      Stack frame offset 4, callee self size 0

IPA function summary for Power_Ip_MC_RGM_ResetInit/6 inlinable
  global time:     20.960000
  self size:       23
  global size:     23
  min size:       19
  self stack:      0
  global stack:    0
    size:16.500000, time:14.330000
    size:4.500000, time:3.000000,  executed if:(not inlined)
  calls:
    Power_Ip_MC_RGM_ClearFesResetFlags/4 --param max-inline-insns-auto limit reached
      freq:0.33 loop depth: 0 size: 2 time: 11 callee size:14 stack:12

IPA function summary for Power_Ip_MC_RGM_ClearFesResetFlags/4 inlinable
  global time:     81.198626
  self size:       7
  global size:     29
  min size:       0
  self stack:      0
  global stack:    12
  estimated growth:-1
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:11.000000, time:28.084165,  executed if:(op0 != 0)
  calls:
    Power_Ip_MC_RGM_ClearFesResetFlags.part.0/15 inlined
      freq:0.33
      Stack frame offset 0, callee self size 12
      Power_Ip_StartTimeout/11 function body not available
        freq:0.33 loop depth: 0 size: 5 time: 14 predicate: (op0 != 0)
         op0 is compile time invariant
         op1 is compile time invariant
         op2 is compile time invariant
         op3 is compile time invariant
      Power_Ip_TimeoutExpired/12 function body not available
        freq:3.08 loop depth: 1 size: 5 time: 14 predicate: (op0 != 0)
         op0 is compile time invariant
         op1 is compile time invariant
      Power_Ip_ReportPowerErrors/13 function body not available
        freq:0.11 loop depth: 0 size: 3 time: 12 predicate: (op0 != 0)
         op0 is compile time invariant
         op1 is compile time invariant


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Power_Ip_MC_RGM_CheckResetReason/18 (Power_Ip_MC_RGM_CheckResetReason) @066e57e0
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 7
  References: 
  Referring: 
  Function Power_Ip_MC_RGM_CheckResetReason/18 is inline copy in Power_Ip_MC_RGM_GetResetReason/8
  Clone of Power_Ip_MC_RGM_CheckResetReason/7
  Availability: local
  Function flags: count:177167400 (estimated locally) body local optimize_size
  Called by: Power_Ip_MC_RGM_GetResetReason/8 (inlined) (177167400 (estimated locally),0.16 per call) 
  Calls: 
Power_Ip_MC_RGM_ClearDesResetFlags/17 (Power_Ip_MC_RGM_ClearDesResetFlags) @066e5540
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 5
  References: 
  Referring: 
  Function Power_Ip_MC_RGM_ClearDesResetFlags/17 is inline copy in Power_Ip_MC_RGM_GetResetReason/8
  Clone of Power_Ip_MC_RGM_ClearDesResetFlags/5
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Power_Ip_MC_RGM_GetResetReason/8 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: Power_Ip_MC_RGM_ClearDesResetFlags.part.0/16 (354334800 (estimated locally),0.33 per call) 
Power_Ip_MC_RGM_ClearDesResetFlags.part.0/16 (Power_Ip_MC_RGM_ClearDesResetFlags.part.0) @06519e00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Power_Ip_pxMC_RGM/3 (read) 
  Referring: 
  Availability: local
  Function flags: count:114863530 (estimated locally) body local split_part optimize_size
  Called by: Power_Ip_MC_RGM_ClearDesResetFlags/17 (354334800 (estimated locally),0.33 per call) Power_Ip_MC_RGM_ClearDesResetFlags/5 (10736344 (estimated locally),0.16 per call) 
  Calls: Power_Ip_StartTimeout/11 (114863530 (estimated locally),1.00 per call) Power_Ip_TimeoutExpired/12 (1073741824 (estimated locally),9.35 per call) Power_Ip_ReportPowerErrors/13 (37904965 (estimated locally),0.33 per call) 
Power_Ip_MC_RGM_ClearFesResetFlags.part.0/15 (Power_Ip_MC_RGM_ClearFesResetFlags.part.0) @06519540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly artificial
  References: Power_Ip_pxMC_RGM/3 (read) 
  Referring: 
  Function Power_Ip_MC_RGM_ClearFesResetFlags.part.0/15 is inline copy in Power_Ip_MC_RGM_ClearFesResetFlags/4
  Availability: local
  Function flags: count:114863530 (estimated locally) body local split_part optimize_size
  Called by: Power_Ip_MC_RGM_ClearFesResetFlags/4 (inlined) (114863530 (estimated locally),0.33 per call) 
  Calls: Power_Ip_StartTimeout/11 (114863530 (estimated locally),0.33 per call) Power_Ip_TimeoutExpired/12 (1073741824 (estimated locally),3.08 per call) Power_Ip_ReportPowerErrors/13 (37904965 (estimated locally),0.11 per call) 
Power_Ip_MC_ME_GetPreviousMode/14 (Power_Ip_MC_ME_GetPreviousMode) @06453a80
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Power_Ip_MC_RGM_GetResetRawValue/9 (21472688 (estimated locally),0.33 per call) 
  Calls: 
Power_Ip_ReportPowerErrors/13 (Power_Ip_ReportPowerErrors) @064532a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Power_Ip_MC_RGM_ClearDesResetFlags.part.0/16 (37904965 (estimated locally),0.33 per call) Power_Ip_MC_RGM_ClearFesResetFlags.part.0/15 (37904965 (estimated locally),0.11 per call) 
  Calls: 
Power_Ip_TimeoutExpired/12 (Power_Ip_TimeoutExpired) @064531c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Power_Ip_MC_RGM_ClearDesResetFlags.part.0/16 (1073741824 (estimated locally),9.35 per call) Power_Ip_MC_RGM_ClearFesResetFlags.part.0/15 (1073741824 (estimated locally),3.08 per call) 
  Calls: 
Power_Ip_StartTimeout/11 (Power_Ip_StartTimeout) @064530e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Power_Ip_MC_RGM_ClearDesResetFlags.part.0/16 (114863530 (estimated locally),1.00 per call) Power_Ip_MC_RGM_ClearFesResetFlags.part.0/15 (114863530 (estimated locally),0.33 per call) 
  Calls: 
Power_Ip_MC_RGM_ResetDuringStandby/10 (Power_Ip_MC_RGM_ResetDuringStandby) @06623d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Power_Ip_pxMC_RGM/3 (read) StandbyResetStatus/2 (write) StandbyResetStatus/2 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: 
Power_Ip_MC_RGM_GetResetRawValue/9 (Power_Ip_MC_RGM_GetResetRawValue) @06623a80
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Power_Ip_pxMC_RGM/3 (read) FesResetStatus/1 (write) FesResetStatus/1 (read) Power_Ip_pxMC_RGM/3 (read) DesResetStatus/0 (write) DesResetStatus/0 (read) 
  Referring: 
  Availability: available
  Function flags: count:65068752 (estimated locally) body optimize_size
  Called by: 
  Calls: Power_Ip_MC_ME_GetPreviousMode/14 (21472688 (estimated locally),0.33 per call) Power_Ip_MC_RGM_ClearDesResetFlags/5 (inlined) (32534376 (estimated locally),0.50 per call) Power_Ip_MC_RGM_ClearFesResetFlags/4 (32534376 (estimated locally),0.50 per call) 
Power_Ip_MC_RGM_GetResetReason/8 (Power_Ip_MC_RGM_GetResetReason) @06623700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Power_Ip_pxMC_RGM/3 (read) DesResetStatus/0 (write) DesResetStatus/0 (read) Power_Ip_pxMC_RGM/3 (read) FesResetStatus/1 (write) FesResetStatus/1 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Power_Ip_MC_RGM_ClearFesResetFlags/4 (536870913 (estimated locally),0.50 per call) Power_Ip_MC_RGM_CheckResetReason/18 (inlined) (177167400 (estimated locally),0.16 per call) Power_Ip_MC_RGM_ClearDesResetFlags/17 (inlined) (1073741824 (estimated locally),1.00 per call) Power_Ip_MC_RGM_CheckResetReason/7 (inlined) (1073741824 (estimated locally),1.00 per call) 
Power_Ip_MC_RGM_CheckResetReason/7 (Power_Ip_MC_RGM_CheckResetReason) @06623460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 18
  References: 
  Referring: 
  Function Power_Ip_MC_RGM_CheckResetReason/7 is inline copy in Power_Ip_MC_RGM_GetResetReason/8
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Power_Ip_MC_RGM_GetResetReason/8 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Power_Ip_MC_RGM_ResetInit/6 (Power_Ip_MC_RGM_ResetInit) @066231c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Power_Ip_pxMC_RGM/3 (read) FesResetStatus/1 (write) Power_Ip_pxMC_RGM/3 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Power_Ip_MC_RGM_ClearFesResetFlags/4 (354334800 (estimated locally),0.33 per call) 
Power_Ip_MC_RGM_ClearDesResetFlags/5 (Power_Ip_MC_RGM_ClearDesResetFlags) @0644aee0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 17
  References: 
  Referring: 
  Function Power_Ip_MC_RGM_ClearDesResetFlags/5 is inline copy in Power_Ip_MC_RGM_GetResetRawValue/9
  Availability: local
  Function flags: count:32534376 (estimated locally) body local optimize_size
  Called by: Power_Ip_MC_RGM_GetResetRawValue/9 (inlined) (32534376 (estimated locally),0.50 per call) 
  Calls: Power_Ip_MC_RGM_ClearDesResetFlags.part.0/16 (10736344 (estimated locally),0.16 per call) 
Power_Ip_MC_RGM_ClearFesResetFlags/4 (Power_Ip_MC_RGM_ClearFesResetFlags) @0644ae00
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:348071305 (estimated locally) body local optimize_size
  Called by: Power_Ip_MC_RGM_GetResetRawValue/9 (32534376 (estimated locally),0.50 per call) Power_Ip_MC_RGM_GetResetReason/8 (536870913 (estimated locally),0.50 per call) Power_Ip_MC_RGM_ResetInit/6 (354334800 (estimated locally),0.33 per call) 
  Calls: Power_Ip_MC_RGM_ClearFesResetFlags.part.0/15 (inlined) (114863530 (estimated locally),0.33 per call) 
Power_Ip_pxMC_RGM/3 (Power_Ip_pxMC_RGM) @06447b88
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Power_Ip_MC_RGM_GetResetRawValue/9 (read) Power_Ip_MC_RGM_ResetInit/6 (read) Power_Ip_MC_RGM_ResetInit/6 (read) Power_Ip_MC_RGM_ClearDesResetFlags.part.0/16 (read) Power_Ip_MC_RGM_ClearFesResetFlags.part.0/15 (read) Power_Ip_MC_RGM_GetResetReason/8 (read) Power_Ip_MC_RGM_GetResetReason/8 (read) Power_Ip_MC_RGM_GetResetRawValue/9 (read) Power_Ip_MC_RGM_ResetDuringStandby/10 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
StandbyResetStatus/2 (StandbyResetStatus) @06447af8
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Power_Ip_MC_RGM_ResetDuringStandby/10 (write) Power_Ip_MC_RGM_ResetDuringStandby/10 (read) 
  Availability: available
  Varpool flags: initialized
FesResetStatus/1 (FesResetStatus) @06447a68
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Power_Ip_MC_RGM_ResetInit/6 (write) Power_Ip_MC_RGM_GetResetReason/8 (write) Power_Ip_MC_RGM_GetResetReason/8 (read) Power_Ip_MC_RGM_GetResetRawValue/9 (write) Power_Ip_MC_RGM_GetResetRawValue/9 (read) 
  Availability: available
  Varpool flags:
DesResetStatus/0 (DesResetStatus) @064479d8
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Power_Ip_MC_RGM_GetResetReason/8 (write) Power_Ip_MC_RGM_GetResetReason/8 (read) Power_Ip_MC_RGM_GetResetRawValue/9 (write) Power_Ip_MC_RGM_GetResetRawValue/9 (read) 
  Availability: available
  Varpool flags:

;; Function Power_Ip_MC_RGM_ClearFesResetFlags (Power_Ip_MC_RGM_ClearFesResetFlags, funcdef_no=0, decl_uid=6383, cgraph_uid=1, symbol_order=4)


Symbols to be put in SSA form
{ D.6529 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 14
Number of blocks to update: 13 ( 93%)


Removing basic block 3
Removing basic block 5
Removing basic block 6
Removing basic block 10
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9
;;
;; Loop 2
;;  header 4, latch 5
;;  depth 1, outer 0
;;  nodes: 4 5
;; 2 succs { 3 9 }
;; 3 succs { 4 }
;; 4 succs { 5 6 }
;; 5 succs { 4 6 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 1 }
cyclic probability of bb 4 is 0.893025; turning freq 0.330000 to 3.084833
Power_Ip_MC_RGM_ClearFesResetFlags (uint32 RegValue)
{
  uint32 RegValueTemp;
  boolean TimeoutOccurred;
  uint32 TimeoutTicks;
  uint32 ElapsedTime;
  uint32 StartTime;
  long unsigned int TimeoutTicks.5_5;
  struct Power_Ip_MC_RGM_Type * Power_Ip_pxMC_RGM.6_7;
  long unsigned int _9;

  <bb 2> [local count: 348071305]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG TimeoutOccurred => 0
  # DEBUG BEGIN_STMT
  # DEBUG RegValueTemp => RegValue_3(D)
  # DEBUG BEGIN_STMT
  if (RegValue_3(D) != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 9>; [67.00%]

  <bb 3> [local count: 114863530]:
  # DEBUG RegValue => RegValue_3(D)
  # DEBUG INLINE_ENTRY Power_Ip_MC_RGM_ClearFesResetFlags
  # DEBUG BEGIN_STMT
  Power_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 4> [local count: 1073741824]:
  # RegValueTemp_8 = PHI <RegValue_3(D)(3), RegValueTemp_10(5)>
  # DEBUG RegValueTemp => RegValueTemp_8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TimeoutTicks.5_5 = TimeoutTicks;
  TimeoutOccurred_6 = Power_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.5_5);
  # DEBUG TimeoutOccurred => TimeoutOccurred_6
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_RGM.6_7 = 1076412416B;
  Power_Ip_pxMC_RGM.6_7->FES ={v} RegValueTemp_8;
  # DEBUG BEGIN_STMT
  _9 ={v} Power_Ip_pxMC_RGM.6_7->FES;
  RegValueTemp_10 = _9 & 1611731929;
  # DEBUG RegValueTemp => RegValueTemp_10
  # DEBUG BEGIN_STMT
  if (RegValueTemp_10 != 0)
    goto <bb 5>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 5> [local count: 1014686026]:
  if (TimeoutOccurred_6 != 0)
    goto <bb 6>; [5.50%]
  else
    goto <bb 4>; [94.50%]

  <bb 6> [local count: 114863531]:
  # TimeoutOccurred_11 = PHI <TimeoutOccurred_6(4), TimeoutOccurred_6(5)>
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_11 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 37904965]:
  # DEBUG BEGIN_STMT
  Power_Ip_ReportPowerErrors (0, 255);

  <bb 8> [local count: 114863531]:
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};

  <bb 9> [local count: 348071307]:
  # DEBUG RegValue => NULL
  # DEBUG StartTime => NULL
  # DEBUG ElapsedTime => NULL
  # DEBUG TimeoutTicks => NULL
  # DEBUG TimeoutOccurred => NULL
  # DEBUG RegValueTemp => NULL
  return;

}



;; Function Power_Ip_MC_RGM_ClearDesResetFlags.part.0 (Power_Ip_MC_RGM_ClearDesResetFlags.part.0, funcdef_no=8, decl_uid=6547, cgraph_uid=13, symbol_order=16)

Power_Ip_MC_RGM_ClearDesResetFlags.part.0 (uint32 RegValue)
{
  uint32 StartTime;
  uint32 ElapsedTime;
  uint32 TimeoutTicks;
  boolean TimeoutOccurred;
  uint32 RegValueTemp;
  long unsigned int TimeoutTicks.10_1;
  struct Power_Ip_MC_RGM_Type * Power_Ip_pxMC_RGM.11_3;
  long unsigned int _5;

  <bb 9> [local count: 114863530]:

  <bb 2> [local count: 114863530]:
  # DEBUG BEGIN_STMT
  Power_Ip_StartTimeout (&StartTime, &ElapsedTime, &TimeoutTicks, 50000);

  <bb 3> [local count: 1073741824]:
  # RegValueTemp_4 = PHI <RegValue_8(D)(2), RegValueTemp_6(5)>
  # DEBUG RegValueTemp => RegValueTemp_4
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  TimeoutTicks.10_1 = TimeoutTicks;
  TimeoutOccurred_2 = Power_Ip_TimeoutExpired (&StartTime, &ElapsedTime, TimeoutTicks.10_1);
  # DEBUG TimeoutOccurred => TimeoutOccurred_2
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_RGM.11_3 = Power_Ip_pxMC_RGM;
  Power_Ip_pxMC_RGM.11_3->DES ={v} RegValueTemp_4;
  # DEBUG BEGIN_STMT
  _5 ={v} Power_Ip_pxMC_RGM.11_3->DES;
  RegValueTemp_6 = _5 & 1611061081;
  # DEBUG RegValueTemp => RegValueTemp_6
  # DEBUG BEGIN_STMT
  if (RegValueTemp_6 != 0)
    goto <bb 4>; [94.50%]
  else
    goto <bb 6>; [5.50%]

  <bb 4> [local count: 1014686026]:
  if (TimeoutOccurred_2 != 0)
    goto <bb 6>; [5.50%]
  else
    goto <bb 5>; [94.50%]

  <bb 5> [local count: 958878296]:
  goto <bb 3>; [100.00%]

  <bb 6> [local count: 114863531]:
  # TimeoutOccurred_7 = PHI <TimeoutOccurred_2(3), TimeoutOccurred_2(4)>
  # DEBUG BEGIN_STMT
  if (TimeoutOccurred_7 != 0)
    goto <bb 7>; [33.00%]
  else
    goto <bb 8>; [67.00%]

  <bb 7> [local count: 37904965]:
  # DEBUG BEGIN_STMT
  Power_Ip_ReportPowerErrors (0, 255);

  <bb 8> [local count: 114863531]:
  StartTime ={v} {CLOBBER};
  ElapsedTime ={v} {CLOBBER};
  TimeoutTicks ={v} {CLOBBER};
  return;

}



;; Function Power_Ip_MC_RGM_ResetInit (Power_Ip_MC_RGM_ResetInit, funcdef_no=2, decl_uid=6340, cgraph_uid=3, symbol_order=6)

Power_Ip_MC_RGM_ResetInit (const struct Power_Ip_MC_RGM_ConfigType * ConfigPtr)
{
  uint32 DesResetReason;
  uint32 FesResetReason;
  struct Power_Ip_MC_RGM_Type * Power_Ip_pxMC_RGM.0_1;
  struct Power_Ip_MC_RGM_Type * Power_Ip_pxMC_RGM.1_2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG FesResetReason => 0
  # DEBUG BEGIN_STMT
  # DEBUG DesResetReason => 0
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_RGM.0_1 = Power_Ip_pxMC_RGM;
  FesResetReason_11 ={v} Power_Ip_pxMC_RGM.0_1->FES;
  # DEBUG FesResetReason => FesResetReason_11
  # DEBUG BEGIN_STMT
  if (FesResetReason_11 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 4>; [67.00%]

  <bb 3> [local count: 354334800]:
  # DEBUG BEGIN_STMT
  FesResetStatus = FesResetReason_11;
  # DEBUG BEGIN_STMT
  Power_Ip_MC_RGM_ClearFesResetFlags (FesResetReason_11);

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_RGM.1_2 = Power_Ip_pxMC_RGM;
  _3 = ConfigPtr_14(D)->FuncResetOpt;
  Power_Ip_pxMC_RGM.1_2->FERD ={v} _3;
  # DEBUG BEGIN_STMT
  DesResetReason_16 ={v} Power_Ip_pxMC_RGM.1_2->DES;
  # DEBUG DesResetReason => DesResetReason_16
  # DEBUG BEGIN_STMT
  if (DesResetReason_16 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _4 = ConfigPtr_14(D)->FesThresholdReset;
  Power_Ip_pxMC_RGM.1_2->FRET ={v} _4;

  <bb 6> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  _5 = DesResetReason_16 & 1;
  if (_5 != 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _6 = ConfigPtr_14(D)->DesThresholdReset;
  Power_Ip_pxMC_RGM.1_2->DRET ={v} _6;

  <bb 8> [local count: 1073741824]:
  return;

}



;; Function Power_Ip_MC_RGM_GetResetReason (Power_Ip_MC_RGM_GetResetReason, funcdef_no=4, decl_uid=6342, cgraph_uid=5, symbol_order=8)

Removing basic block 17

Symbols to be put in SSA form
{ D.6532 D.6590 D.6600 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 37
Number of blocks to update: 35 ( 95%)


Merging blocks 4 and 16
Removing basic block 8
Merging blocks 14 and 11
Merging blocks 25 and 15
Merging blocks 27 and 28
Merging blocks 36 and 26
Merging blocks 4 and 18
Merging blocks 25 and 12
Merging blocks 27 and 29
No longer having address taken: Position

Symbols to be put in SSA form
{ D.6435 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 27
Number of blocks to update: 26 ( 96%)


;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26
;;
;; Loop 2
;;  header 23, latch 22
;;  depth 1, outer 0
;;  nodes: 23 22 18 21 19 20
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 5 8 6 7
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 10 }
;; 5 succs { 6 9 }
;; 6 succs { 7 8 }
;; 7 succs { 11 8 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 5 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 26 }
;; 14 succs { 15 16 }
;; 15 succs { 16 }
;; 16 succs { 17 25 }
;; 17 succs { 23 }
;; 18 succs { 19 22 }
;; 19 succs { 20 21 }
;; 20 succs { 24 21 }
;; 21 succs { 22 }
;; 22 succs { 23 }
;; 23 succs { 18 24 }
;; 24 succs { 25 }
;; 25 succs { 26 }
;; 26 succs { 1 }
cyclic probability of bb 10 is 0.956367; turning freq 1.000000 to 22.918237
cyclic probability of bb 23 is 0.956367; turning freq 0.165000 to 3.781509
Power_Ip_MC_RGM_GetResetReason ()
{
  Power_Ip_ResetType ResetReason;
  uint32 NumberOfFlags;
  uint32 Index;
  uint32 DynamicMask;
  uint32 Position;
  Power_Ip_ResetType D.6600;
  Power_Ip_ResetType ResetReason;
  uint32 NumberOfFlags;
  uint32 Index;
  uint32 DynamicMask;
  uint32 Position;
  Power_Ip_ResetType D.6590;
  uint32 Position;
  uint32 ActiveValue;
  uint32 RegValue;
  Power_Ip_ResetType ResetReason;
  struct Power_Ip_MC_RGM_Type * Power_Ip_pxMC_RGM.8_1;
  long unsigned int _2;
  struct Power_Ip_MC_RGM_Type * Power_Ip_pxMC_RGM.9_3;
  long unsigned int _4;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _50;
  long unsigned int _51;

  <bb 2> [local count: 46850978]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG RegValue => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Position_72 = 0;
  # DEBUG Position => Position_72
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_RGM.8_1 = Power_Ip_pxMC_RGM;
  _2 ={v} Power_Ip_pxMC_RGM.8_1->DES;
  RegValue_13 = _2 & 1611061081;
  # DEBUG RegValue => RegValue_13
  # DEBUG BEGIN_STMT
  if (RegValue_13 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 23425489]:
  # DEBUG BEGIN_STMT
  DesResetStatus = RegValue_13;

  <bb 4> [local count: 46850978]:
  # DEBUG BEGIN_STMT
  ActiveValue_15 = DesResetStatus;
  # DEBUG ActiveValue => ActiveValue_15
  # DEBUG BEGIN_STMT
  # DEBUG ActiveValue => ActiveValue_15
  # DEBUG ResetMode => 0
  # DEBUG PositionPtr => &Position
  # DEBUG INLINE_ENTRY Power_Ip_MC_RGM_CheckResetReason
  # DEBUG BEGIN_STMT
  # DEBUG ResetReason => 29
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG NumberOfFlags => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Position_26 = Position_72;
  # DEBUG Position => Position_26
  # DEBUG BEGIN_STMT
  # DEBUG ResetMask => 1611126617
  # DEBUG BEGIN_STMT
  # DEBUG Index => 0
  goto <bb 10>; [100.00%]

  <bb 5> [local count: 1041207449]:
  # DEBUG BEGIN_STMT
  DynamicMask_28 = 1 << Index_27;
  # DEBUG DynamicMask => DynamicMask_28
  # DEBUG BEGIN_STMT
  _30 = DynamicMask_28 & 1611126617;
  if (_30 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 6> [local count: 520603724]:
  # DEBUG BEGIN_STMT
  _31 = ActiveValue_15 & DynamicMask_28;
  if (_31 != 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 260301862]:
  # DEBUG BEGIN_STMT
  ResetReason_33 = (Power_Ip_ResetType) Position_32;
  # DEBUG ResetReason => ResetReason_33
  # DEBUG BEGIN_STMT
  NumberOfFlags_35 = NumberOfFlags_34 + 1;
  # DEBUG NumberOfFlags => NumberOfFlags_35
  # DEBUG BEGIN_STMT
  if (NumberOfFlags_35 > 1)
    goto <bb 11>; [5.50%]
  else
    goto <bb 8>; [94.50%]

  <bb 8> [local count: 506287122]:
  # ResetReason_40 = PHI <ResetReason_41(6), ResetReason_33(7)>
  # NumberOfFlags_42 = PHI <NumberOfFlags_34(6), NumberOfFlags_35(7)>
  # DEBUG NumberOfFlags => NumberOfFlags_42
  # DEBUG ResetReason => ResetReason_40
  # DEBUG BEGIN_STMT
  Position_36 = Position_32 + 1;
  # DEBUG Position => Position_36

  <bb 9> [local count: 1026890848]:
  # ResetReason_43 = PHI <ResetReason_41(5), ResetReason_40(8)>
  # NumberOfFlags_44 = PHI <NumberOfFlags_34(5), NumberOfFlags_42(8)>
  # Position_45 = PHI <Position_32(5), Position_36(8)>
  # DEBUG Position => Position_45
  # DEBUG NumberOfFlags => NumberOfFlags_44
  # DEBUG ResetReason => ResetReason_43
  # DEBUG BEGIN_STMT
  Index_37 = Index_27 + 1;
  # DEBUG Index => Index_37

  <bb 10> [local count: 1073741824]:
  # ResetReason_41 = PHI <29(4), ResetReason_43(9)>
  # NumberOfFlags_34 = PHI <0(4), NumberOfFlags_44(9)>
  # Index_27 = PHI <0(4), Index_37(9)>
  # Position_32 = PHI <Position_26(4), Position_45(9)>
  # DEBUG Position => Position_32
  # DEBUG Index => Index_27
  # DEBUG NumberOfFlags => NumberOfFlags_34
  # DEBUG ResetReason => ResetReason_41
  # DEBUG BEGIN_STMT
  if (Index_27 != 32)
    goto <bb 5>; [96.97%]
  else
    goto <bb 11>; [3.03%]

  <bb 11> [local count: 46850978]:
  # ResetReason_39 = PHI <30(7), ResetReason_41(10)>
  # Position_38 = PHI <Position_32(7), Position_32(10)>
  # DEBUG ResetReason => ResetReason_39
  # DEBUG BEGIN_STMT
  Position_73 = Position_38;
  # DEBUG Position => Position_73
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _68 = ResetReason_39;
  # DEBUG ActiveValue => NULL
  # DEBUG ResetMode => NULL
  # DEBUG PositionPtr => NULL
  # DEBUG Position => NULL
  # DEBUG DynamicMask => NULL
  # DEBUG Index => NULL
  # DEBUG NumberOfFlags => NULL
  # DEBUG ResetMask => NULL
  # DEBUG ResetReason => NULL
  ResetReason_17 = _68;
  # DEBUG ResetReason => ResetReason_17
  # DEBUG BEGIN_STMT
  # DEBUG RegValue => RegValue_13
  # DEBUG INLINE_ENTRY Power_Ip_MC_RGM_ClearDesResetFlags
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG TimeoutOccurred => 0
  # DEBUG BEGIN_STMT
  # DEBUG RegValueTemp => RegValue_13
  # DEBUG BEGIN_STMT
  if (RegValue_13 != 0)
    goto <bb 12>; [33.00%]
  else
    goto <bb 13>; [67.00%]

  <bb 12> [local count: 15460823]:
  Power_Ip_MC_RGM_ClearDesResetFlags.part.0 (RegValue_13);

  <bb 13> [local count: 46850978]:
  # DEBUG RegValue => NULL
  # DEBUG BEGIN_STMT
  if (ActiveValue_15 == 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 26>; [50.00%]

  <bb 14> [local count: 23425489]:
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_RGM.9_3 = Power_Ip_pxMC_RGM;
  _4 ={v} Power_Ip_pxMC_RGM.9_3->FES;
  RegValue_19 = _4 & 1611731929;
  # DEBUG RegValue => RegValue_19
  # DEBUG BEGIN_STMT
  if (RegValue_19 != 0)
    goto <bb 15>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 15> [local count: 11712745]:
  # DEBUG BEGIN_STMT
  FesResetStatus = RegValue_19;

  <bb 16> [local count: 23425489]:
  # DEBUG BEGIN_STMT
  ActiveValue_21 = FesResetStatus;
  # DEBUG ActiveValue => ActiveValue_21
  # DEBUG BEGIN_STMT
  if (ActiveValue_21 != 0)
    goto <bb 17>; [33.00%]
  else
    goto <bb 25>; [67.00%]

  <bb 17> [local count: 7730411]:
  # DEBUG BEGIN_STMT
  # DEBUG ActiveValue => ActiveValue_21
  # DEBUG ResetMode => 1
  # DEBUG PositionPtr => &Position
  # DEBUG INLINE_ENTRY Power_Ip_MC_RGM_CheckResetReason
  # DEBUG BEGIN_STMT
  # DEBUG ResetReason => 29
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG NumberOfFlags => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Position_46 = Position_73;
  # DEBUG Position => Position_46
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG ResetMask => 1611732953
  # DEBUG ResetMask => 1611732953
  # DEBUG BEGIN_STMT
  # DEBUG Index => 0
  goto <bb 23>; [100.00%]

  <bb 18> [local count: 171799229]:
  # DEBUG BEGIN_STMT
  DynamicMask_48 = 1 << Index_47;
  # DEBUG DynamicMask => DynamicMask_48
  # DEBUG BEGIN_STMT
  _50 = DynamicMask_48 & 1611732953;
  if (_50 != 0)
    goto <bb 19>; [50.00%]
  else
    goto <bb 22>; [50.00%]

  <bb 19> [local count: 85899615]:
  # DEBUG BEGIN_STMT
  _51 = ActiveValue_21 & DynamicMask_48;
  if (_51 != 0)
    goto <bb 20>; [50.00%]
  else
    goto <bb 21>; [50.00%]

  <bb 20> [local count: 42949807]:
  # DEBUG BEGIN_STMT
  ResetReason_53 = (Power_Ip_ResetType) Position_52;
  # DEBUG ResetReason => ResetReason_53
  # DEBUG BEGIN_STMT
  NumberOfFlags_55 = NumberOfFlags_54 + 1;
  # DEBUG NumberOfFlags => NumberOfFlags_55
  # DEBUG BEGIN_STMT
  if (NumberOfFlags_55 > 1)
    goto <bb 24>; [5.50%]
  else
    goto <bb 21>; [94.50%]

  <bb 21> [local count: 83537375]:
  # ResetReason_60 = PHI <ResetReason_61(19), ResetReason_53(20)>
  # NumberOfFlags_62 = PHI <NumberOfFlags_54(19), NumberOfFlags_55(20)>
  # DEBUG NumberOfFlags => NumberOfFlags_62
  # DEBUG ResetReason => ResetReason_60
  # DEBUG BEGIN_STMT
  Position_56 = Position_52 + 1;
  # DEBUG Position => Position_56

  <bb 22> [local count: 169436990]:
  # ResetReason_63 = PHI <ResetReason_61(18), ResetReason_60(21)>
  # NumberOfFlags_64 = PHI <NumberOfFlags_54(18), NumberOfFlags_62(21)>
  # Position_65 = PHI <Position_52(18), Position_56(21)>
  # DEBUG Position => Position_65
  # DEBUG NumberOfFlags => NumberOfFlags_64
  # DEBUG ResetReason => ResetReason_63
  # DEBUG BEGIN_STMT
  Index_57 = Index_47 + 1;
  # DEBUG Index => Index_57

  <bb 23> [local count: 177167401]:
  # ResetReason_61 = PHI <29(17), ResetReason_63(22)>
  # NumberOfFlags_54 = PHI <0(17), NumberOfFlags_64(22)>
  # Index_47 = PHI <0(17), Index_57(22)>
  # Position_52 = PHI <Position_46(17), Position_65(22)>
  # DEBUG Position => Position_52
  # DEBUG Index => Index_47
  # DEBUG NumberOfFlags => NumberOfFlags_54
  # DEBUG ResetReason => ResetReason_61
  # DEBUG BEGIN_STMT
  if (Index_47 != 32)
    goto <bb 18>; [96.97%]
  else
    goto <bb 24>; [3.03%]

  <bb 24> [local count: 7730411]:
  # ResetReason_59 = PHI <30(20), ResetReason_61(23)>
  # Position_58 = PHI <Position_52(20), Position_52(23)>
  # DEBUG ResetReason => ResetReason_59
  # DEBUG BEGIN_STMT
  Position_74 = Position_58;
  # DEBUG Position => Position_74
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _71 = ResetReason_59;
  # DEBUG ActiveValue => NULL
  # DEBUG ResetMode => NULL
  # DEBUG PositionPtr => NULL
  # DEBUG Position => NULL
  # DEBUG DynamicMask => NULL
  # DEBUG Index => NULL
  # DEBUG NumberOfFlags => NULL
  # DEBUG ResetMask => NULL
  # DEBUG ResetReason => NULL
  ResetReason_23 = _71;
  # DEBUG ResetReason => ResetReason_23

  <bb 25> [local count: 23425489]:
  # ResetReason_5 = PHI <ResetReason_17(16), ResetReason_23(24)>
  # DEBUG ResetReason => ResetReason_5
  # DEBUG BEGIN_STMT
  Power_Ip_MC_RGM_ClearFesResetFlags (RegValue_19);

  <bb 26> [local count: 46850978]:
  # ResetReason_6 = PHI <ResetReason_17(13), ResetReason_5(25)>
  # DEBUG ResetReason => ResetReason_6
  # DEBUG BEGIN_STMT
  # DEBUG Position => NULL
  return ResetReason_6;

}



;; Function Power_Ip_MC_RGM_GetResetRawValue (Power_Ip_MC_RGM_GetResetRawValue, funcdef_no=5, decl_uid=6344, cgraph_uid=6, symbol_order=9)


Symbols to be put in SSA form
{ D.6533 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 32
Number of blocks to update: 31 ( 97%)


Merging blocks 21 and 29
Removing basic block 26
Removing basic block 27
Removing basic block 28
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27
;;
;; Loop 2
;;  header 20, latch 19
;;  depth 1, outer 0
;;  nodes: 20 19 15 18 16 17
;;
;; Loop 1
;;  header 10, latch 9
;;  depth 1, outer 0
;;  nodes: 10 9 5 8 6 7
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 10 12 }
;; 5 succs { 6 9 }
;; 6 succs { 7 8 }
;; 7 succs { 8 }
;; 8 succs { 9 }
;; 9 succs { 10 }
;; 10 succs { 5 11 }
;; 11 succs { 12 }
;; 12 succs { 13 14 }
;; 13 succs { 14 }
;; 14 succs { 20 24 }
;; 15 succs { 16 19 }
;; 16 succs { 17 18 }
;; 17 succs { 18 }
;; 18 succs { 19 }
;; 19 succs { 20 }
;; 20 succs { 15 21 }
;; 21 succs { 22 23 }
;; 22 succs { 23 }
;; 23 succs { 24 }
;; 24 succs { 25 27 }
;; 25 succs { 26 27 }
;; 26 succs { 27 }
;; 27 succs { 1 }
cyclic probability of bb 10 is 0.969700; turning freq 0.500000 to 16.501651
cyclic probability of bb 20 is 0.969700; turning freq 0.500000 to 16.501651
Power_Ip_MC_RGM_GetResetRawValue ()
{
  Power_Ip_PowerModeType PreviousMode;
  uint32 Position;
  uint32 DynamicMask;
  uint32 Index;
  uint32 ActiveValue;
  uint32 RegValue;
  uint32 RawReset;
  struct Power_Ip_MC_RGM_Type * Power_Ip_pxMC_RGM.13_1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  struct Power_Ip_MC_RGM_Type * Power_Ip_pxMC_RGM.14_6;
  long unsigned int _7;
  long unsigned int _8;
  long unsigned int _9;
  long unsigned int _10;

  <bb 2> [local count: 65068752]:
  # DEBUG BEGIN_STMT
  # DEBUG RawReset => 0
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_RGM.13_1 = Power_Ip_pxMC_RGM;
  _2 ={v} Power_Ip_pxMC_RGM.13_1->FES;
  RegValue_33 = _2 & 1611731929;
  # DEBUG RegValue => RegValue_33
  # DEBUG BEGIN_STMT
  if (RegValue_33 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 32534376]:
  # DEBUG BEGIN_STMT
  FesResetStatus = RegValue_33;

  <bb 4> [local count: 65068752]:
  # DEBUG BEGIN_STMT
  # DEBUG ResetMask => 1611732953
  # DEBUG BEGIN_STMT
  ActiveValue_35 = FesResetStatus;
  # DEBUG ActiveValue => ActiveValue_35
  # DEBUG BEGIN_STMT
  if (ActiveValue_35 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 12>; [50.00%]

  <bb 5> [local count: 1041207449]:
  # DEBUG BEGIN_STMT
  DynamicMask_37 = 1 << Index_20;
  # DEBUG DynamicMask => DynamicMask_37
  # DEBUG BEGIN_STMT
  _3 = DynamicMask_37 & 1611732953;
  if (_3 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 6> [local count: 520603724]:
  # DEBUG BEGIN_STMT
  _4 = ActiveValue_35 & DynamicMask_37;
  if (_4 != 0)
    goto <bb 7>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 7> [local count: 260301862]:
  # DEBUG BEGIN_STMT
  _5 = 1 << Position_23;
  RawReset_38 = _5 | RawReset_13;
  # DEBUG RawReset => RawReset_38

  <bb 8> [local count: 520603724]:
  # RawReset_11 = PHI <RawReset_13(6), RawReset_38(7)>
  # DEBUG RawReset => RawReset_11
  # DEBUG BEGIN_STMT
  Position_39 = Position_23 + 1;
  # DEBUG Position => Position_39

  <bb 9> [local count: 1041207449]:
  # RawReset_12 = PHI <RawReset_13(5), RawReset_11(8)>
  # Position_22 = PHI <Position_23(5), Position_39(8)>
  # DEBUG Position => Position_22
  # DEBUG RawReset => RawReset_12
  # DEBUG BEGIN_STMT
  Index_40 = Index_20 + 1;
  # DEBUG Index => Index_40

  <bb 10> [local count: 1073741824]:
  # RawReset_13 = PHI <RawReset_12(9), 0(4)>
  # Index_20 = PHI <Index_40(9), 0(4)>
  # Position_23 = PHI <Position_22(9), 0(4)>
  # DEBUG Position => Position_23
  # DEBUG Index => Index_20
  # DEBUG RawReset => RawReset_13
  # DEBUG BEGIN_STMT
  if (Index_20 != 32)
    goto <bb 5>; [96.97%]
  else
    goto <bb 11>; [3.03%]

  <bb 11> [local count: 32534376]:
  # RawReset_51 = PHI <RawReset_13(10)>
  # DEBUG BEGIN_STMT
  Power_Ip_MC_RGM_ClearFesResetFlags (RegValue_33);

  <bb 12> [local count: 65068752]:
  # RawReset_14 = PHI <0(4), RawReset_51(11)>
  # DEBUG RawReset => RawReset_14
  # DEBUG BEGIN_STMT
  # DEBUG ResetMask => 1611126617
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_RGM.14_6 = Power_Ip_pxMC_RGM;
  _7 ={v} Power_Ip_pxMC_RGM.14_6->DES;
  RegValue_41 = _7 & 1611061081;
  # DEBUG RegValue => RegValue_41
  # DEBUG BEGIN_STMT
  if (RegValue_41 != 0)
    goto <bb 13>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 13> [local count: 32534376]:
  # DEBUG BEGIN_STMT
  DesResetStatus = RegValue_41;

  <bb 14> [local count: 65068752]:
  # DEBUG BEGIN_STMT
  ActiveValue_43 = DesResetStatus;
  # DEBUG ActiveValue => ActiveValue_43
  # DEBUG BEGIN_STMT
  if (ActiveValue_43 != 0)
    goto <bb 20>; [50.00%]
  else
    goto <bb 24>; [50.00%]

  <bb 15> [local count: 1041207449]:
  # DEBUG BEGIN_STMT
  DynamicMask_45 = 1 << Index_21;
  # DEBUG DynamicMask => DynamicMask_45
  # DEBUG BEGIN_STMT
  _8 = DynamicMask_45 & 1611126617;
  if (_8 != 0)
    goto <bb 16>; [50.00%]
  else
    goto <bb 19>; [50.00%]

  <bb 16> [local count: 520603724]:
  # DEBUG BEGIN_STMT
  _9 = ActiveValue_43 & DynamicMask_45;
  if (_9 != 0)
    goto <bb 17>; [50.00%]
  else
    goto <bb 18>; [50.00%]

  <bb 17> [local count: 260301862]:
  # DEBUG BEGIN_STMT
  _10 = 1 << Position_25;
  RawReset_46 = _10 | RawReset_17;
  # DEBUG RawReset => RawReset_46

  <bb 18> [local count: 520603724]:
  # RawReset_15 = PHI <RawReset_17(16), RawReset_46(17)>
  # DEBUG RawReset => RawReset_15
  # DEBUG BEGIN_STMT
  Position_47 = Position_25 + 1;
  # DEBUG Position => Position_47

  <bb 19> [local count: 1041207449]:
  # RawReset_16 = PHI <RawReset_17(15), RawReset_15(18)>
  # Position_24 = PHI <Position_25(15), Position_47(18)>
  # DEBUG Position => Position_24
  # DEBUG RawReset => RawReset_16
  # DEBUG BEGIN_STMT
  Index_48 = Index_21 + 1;
  # DEBUG Index => Index_48

  <bb 20> [local count: 1073741824]:
  # RawReset_17 = PHI <RawReset_16(19), RawReset_14(14)>
  # Index_21 = PHI <Index_48(19), 0(14)>
  # Position_25 = PHI <Position_24(19), 15(14)>
  # DEBUG Position => Position_25
  # DEBUG Index => Index_21
  # DEBUG RawReset => RawReset_17
  # DEBUG BEGIN_STMT
  if (Index_21 != 32)
    goto <bb 15>; [96.97%]
  else
    goto <bb 21>; [3.03%]

  <bb 21> [local count: 32534376]:
  # RawReset_31 = PHI <RawReset_17(20)>
  # DEBUG BEGIN_STMT
  # DEBUG RegValue => RegValue_41
  # DEBUG INLINE_ENTRY Power_Ip_MC_RGM_ClearDesResetFlags
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG TimeoutOccurred => 0
  # DEBUG BEGIN_STMT
  # DEBUG RegValueTemp => RegValue_41
  # DEBUG BEGIN_STMT
  if (RegValue_41 != 0)
    goto <bb 22>; [33.00%]
  else
    goto <bb 23>; [67.00%]

  <bb 22> [local count: 10736344]:
  Power_Ip_MC_RGM_ClearDesResetFlags.part.0 (RegValue_41);

  <bb 23> [local count: 32534376]:

  <bb 24> [local count: 65068752]:
  # RawReset_18 = PHI <RawReset_14(14), RawReset_31(23)>
  # DEBUG RegValue => NULL
  # DEBUG RawReset => RawReset_18
  # DEBUG BEGIN_STMT
  if (RawReset_18 == 0)
    goto <bb 25>; [33.00%]
  else
    goto <bb 27>; [67.00%]

  <bb 25> [local count: 21472688]:
  # DEBUG BEGIN_STMT
  PreviousMode_50 = Power_Ip_MC_ME_GetPreviousMode ();
  # DEBUG PreviousMode => PreviousMode_50
  # DEBUG BEGIN_STMT
  if (PreviousMode_50 == 15)
    goto <bb 26>; [21.72%]
  else
    goto <bb 27>; [78.28%]

  <bb 26> [local count: 4663868]:
  # DEBUG BEGIN_STMT
  # DEBUG RawReset => 8192

  <bb 27> [local count: 65068752]:
  # RawReset_19 = PHI <RawReset_18(24), 0(25), 8192(26)>
  # DEBUG RawReset => RawReset_19
  # DEBUG BEGIN_STMT
  return RawReset_19;

}



;; Function Power_Ip_MC_RGM_ResetDuringStandby (Power_Ip_MC_RGM_ResetDuringStandby, funcdef_no=6, decl_uid=6346, cgraph_uid=7, symbol_order=10)

Power_Ip_MC_RGM_ResetDuringStandby ()
{
  uint8 ResetDuringStdby;
  uint32 RegValue;
  struct Power_Ip_MC_RGM_Type * Power_Ip_pxMC_RGM.15_1;
  long unsigned int _2;
  long unsigned int StandbyResetStatus.17_3;
  unsigned int _4;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG ResetDuringStdby => 0
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_RGM.15_1 = Power_Ip_pxMC_RGM;
  _2 ={v} Power_Ip_pxMC_RGM.15_1->RDSS;
  RegValue_8 = _2 & 3;
  # DEBUG RegValue => RegValue_8
  # DEBUG BEGIN_STMT
  if (RegValue_8 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  StandbyResetStatus = RegValue_8;
  # DEBUG BEGIN_STMT
  Power_Ip_pxMC_RGM.15_1->RDSS ={v} RegValue_8;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  StandbyResetStatus.17_3 = StandbyResetStatus;
  _4 = StandbyResetStatus.17_3 & 3;
  if (_4 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 6>; [50.00%]

  <bb 5> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG ResetDuringStdby => 1

  <bb 6> [local count: 1073741824]:
  # ResetDuringStdby_5 = PHI <0(4), 1(5)>
  # DEBUG ResetDuringStdby => ResetDuringStdby_5
  # DEBUG BEGIN_STMT
  return ResetDuringStdby_5;

}


