IPA function summary for Swt_Ip_IrqHandler/28 inlinable
  global time:     26.187500
  self size:       32
  global size:     32
  min size:       25
  self stack:      0
  global stack:    0
    size:20.000000, time:8.750000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:4.000000, time:3.125000,  nonconst if:(op0 changed)
  calls:
    DevAssert/0 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0
    indirect call loop depth: 0 freq:0.09 size: 3 time: 15

IPA function summary for Swt_Ip_ClearResetRequest/27 inlinable
  global time:     104.427494
  self size:       39
  global size:     39
  min size:       33
  self stack:      4
  global stack:    4
    size:18.000000, time:24.654666
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:3.000000, time:3.000000,  nonconst if:(op0 changed)
  calls:
    OsIf_GetElapsed/31 function body not available
      freq:2.75 loop depth: 1 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    OsIf_GetCounter/30 function body not available
      freq:0.33 loop depth: 0 size: 3 time: 12
       op0 is compile time invariant
    DevAssert/0 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0
    OsIf_MicrosToTicks/29 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant

IPA function summary for Swt_Ip_StopTimer/26 inlinable
  global time:     66.950000
  self size:       24
  global size:     24
  min size:       19
  self stack:      0
  global stack:    0
    size:6.000000, time:3.990000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    SchM_Exit_Wdg_WDG_EXCLUSIVE_AREA_11/37 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    Swt_Ip_Lock/9 function not considered for inlining
      freq:0.33 loop depth: 0 size: 3 time: 12 callee size: 7 stack: 0
    Swt_Ip_Unlock/10 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12 callee size:19 stack: 4
    SchM_Enter_Wdg_WDG_EXCLUSIVE_AREA_11/36 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    Swt_Ip_GetLock/8 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12 callee size: 4 stack: 0
    DevAssert/0 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0

IPA function summary for Swt_Ip_StartTimer/25 inlinable
  global time:     66.950000
  self size:       24
  global size:     24
  min size:       19
  self stack:      0
  global stack:    0
    size:6.000000, time:3.990000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    SchM_Exit_Wdg_WDG_EXCLUSIVE_AREA_10/35 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    Swt_Ip_Lock/9 function not considered for inlining
      freq:0.33 loop depth: 0 size: 3 time: 12 callee size: 7 stack: 0
    Swt_Ip_Unlock/10 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12 callee size:19 stack: 4
    SchM_Enter_Wdg_WDG_EXCLUSIVE_AREA_10/34 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    Swt_Ip_GetLock/8 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12 callee size: 4 stack: 0
    DevAssert/0 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0

IPA function summary for Swt_Ip_SetTimeout/24 inlinable
  global time:     52.956100
  self size:       41
  global size:     41
  min size:       25
  self stack:      0
  global stack:    0
    size:10.000000, time:3.184600
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed || op2 changed)
    size:2.000000, time:0.435600,  nonconst if:(op2 changed)
    size:3.000000, time:0.326700,  executed if:(op2 == 0)
    size:4.000000, time:0.435600,  executed if:(op2 != 0)
  calls:
    Swt_Ip_Lock/9 function not considered for inlining
      freq:0.22 loop depth: 0 size: 3 time: 12 callee size: 7 stack: 0
    Swt_Ip_Unlock/10 function not considered for inlining
      freq:0.33 loop depth: 0 size: 3 time: 12 callee size:19 stack: 4
    Swt_Ip_CheckTimeout/12 function not considered for inlining
      freq:1.00 loop depth: 0 size: 4 time: 13 callee size: 4 stack: 0
    Swt_Ip_GetLock/8 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12 callee size: 4 stack: 0
    DevAssert/0 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0

IPA function summary for Swt_Ip_Config/23 inlinable
  global time:     56.807400
  self size:       42
  global size:     42
  min size:       35
  self stack:      0
  global stack:    0
    size:17.500000, time:6.511300
    size:4.500000, time:3.108900,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    Swt_Ip_Lock/9 function not considered for inlining
      freq:0.22 loop depth: 0 size: 3 time: 12 callee size: 7 stack: 0
    Swt_Ip_RegisterConfig/11 function not considered for inlining
      freq:0.22 loop depth: 0 size: 3 time: 12 callee size:20 stack: 0
    Swt_Ip_Unlock/10 function not considered for inlining
      freq:0.33 loop depth: 0 size: 3 time: 12 callee size:19 stack: 4
    Swt_Ip_CheckTimeout/12 function not considered for inlining
      freq:1.00 loop depth: 0 size: 4 time: 13 callee size: 4 stack: 0
    DevAssert/0 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0

IPA function summary for Swt_Ip_Service/22 inlinable
  global time:     65.290000
  self size:       63
  global size:     63
  min size:       58
  self stack:      0
  global stack:    0
    size:48.000000, time:14.290000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    SchM_Exit_Wdg_WDG_EXCLUSIVE_AREA_09/33 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    Swt_Ip_GetLock/8 function not considered for inlining
      freq:0.33 loop depth: 0 size: 3 time: 12 callee size: 4 stack: 0
    Swt_Ip_GetServiceMode/7 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12 callee size: 4 stack: 0
    SchM_Enter_Wdg_WDG_EXCLUSIVE_AREA_09/32 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    DevAssert/0 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0

IPA function summary for Swt_Ip_Deinit/21 inlinable
  global time:     35.500000
  self size:       24
  global size:     24
  min size:       18
  self stack:      0
  global stack:    0
    size:13.000000, time:8.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:3.000000, time:2.500000,  nonconst if:(op0 changed)
  calls:
    Swt_Ip_Unlock/10 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12 callee size:19 stack: 4
    DevAssert/0 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0

IPA function summary for Swt_Ip_Init/20 inlinable
  global time:     63.704100
  self size:       48
  global size:     48
  min size:       38
  self stack:      0
  global stack:    0
    size:20.500000, time:9.637950
    size:5.500000, time:2.932250,  executed if:(not inlined)
    size:4.000000, time:2.326700,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    Swt_Ip_Lock/9 function not considered for inlining
      freq:0.22 loop depth: 0 size: 3 time: 12 callee size: 7 stack: 0
    Swt_Ip_RegisterConfig/11 function not considered for inlining
      freq:0.22 loop depth: 0 size: 3 time: 12 callee size:20 stack: 0
    Swt_Ip_CheckTimeout/12 function not considered for inlining
      freq:0.66 loop depth: 0 size: 4 time: 13 callee size: 4 stack: 0
    Swt_Ip_Unlock/10 function not considered for inlining
      freq:1.00 loop depth: 0 size: 3 time: 12 callee size:19 stack: 4
    DevAssert/0 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0
    DevAssert/0 function not considered for inlining
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0

IPA function summary for Swt_Ip_CheckTimeout/12 inlinable
  global time:     7.000000
  self size:       9
  global size:     9
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.000000,  executed if:(op1 != 0),  nonconst if:(op0 changed || op1 changed) && (op1 != 0)
  calls:

IPA function summary for Swt_Ip_RegisterConfig/11 inlinable
  global time:     37.680000
  self size:       41
  global size:     41
  min size:       2
  self stack:      0
  global stack:    0
    size:1.500000, time:1.500000
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 48] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op1[ref offset: 48] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1[ref offset: 48] changed || op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 8] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 8] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1[ref offset: 48] changed || op1[ref offset: 0] changed || op1[ref offset: 8] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 32] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op1[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1[ref offset: 48] changed || op1[ref offset: 0] changed || op1[ref offset: 8] changed || op1[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 16] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 16] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1[ref offset: 48] changed || op1[ref offset: 0] changed || op1[ref offset: 8] changed || op1[ref offset: 32] changed || op1[ref offset: 16] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 24] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 24] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1[ref offset: 48] changed || op1[ref offset: 0] changed || op1[ref offset: 8] changed || op1[ref offset: 32] changed || op1[ref offset: 16] changed || op1[ref offset: 24] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 40] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 40] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1[ref offset: 48] changed || op1[ref offset: 0] changed || op1[ref offset: 8] changed || op1[ref offset: 32] changed || op1[ref offset: 16] changed || op1[ref offset: 24] changed || op1[ref offset: 40] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 64] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 64] changed)
    size:0.500000, time:0.250000,  executed if:(op1[ref offset: 32] != 0) && (not inlined),  nonconst if:(op1[ref offset: 96] changed) && (op1[ref offset: 32] != 0) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op1[ref offset: 32] != 0),  nonconst if:(op1[ref offset: 96] changed) && (op1[ref offset: 32] != 0)
    size:0.500000, time:0.250000,  executed if:(op1[ref offset: 32] != 0) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op1[ref offset: 32] != 0)
    size:0.500000, time:0.170000,  executed if:(op1[ref offset: 48] == 1) && (not inlined),  nonconst if:(op1[ref offset: 128] changed) && (op1[ref offset: 48] == 1) && (not inlined)
    size:0.500000, time:0.170000,  executed if:(op1[ref offset: 48] == 1),  nonconst if:(op1[ref offset: 128] changed) && (op1[ref offset: 48] == 1)
    size:0.500000, time:0.170000,  executed if:(op1[ref offset: 48] == 1) && (not inlined)
    size:0.500000, time:0.170000,  executed if:(op1[ref offset: 48] == 1)
  calls:

IPA function summary for Swt_Ip_Unlock/10 inlinable
  global time:     53.421163
  self size:       38
  global size:     38
  min size:       32
  self stack:      4
  global stack:    4
    size:20.500000, time:16.766041
    size:6.500000, time:3.768708,  executed if:(not inlined)
  calls:
    OsIf_GetElapsed/31 function body not available
      freq:1.38 loop depth: 1 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    OsIf_GetCounter/30 function body not available
      freq:0.16 loop depth: 0 size: 3 time: 12
       op0 is compile time invariant
    OsIf_MicrosToTicks/29 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant

IPA function summary for Swt_Ip_Lock/9 inlinable
  global time:     6.000000
  self size:       15
  global size:     15
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:6.000000, time:2.000000,  nonconst if:(op1 changed)
    size:0.500000, time:0.166667,  executed if:(op1 == 2) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op1 == 2) && (not inlined)
    size:1.500000, time:0.500000,  executed if:(op1 == 2),  nonconst if:(op0[ref offset: 0] changed) && (op1 == 2)
    size:0.500000, time:0.166667,  executed if:(op1 == 2) && (not inlined)
    size:0.500000, time:0.166667,  executed if:(op1 == 2)
    size:0.500000, time:0.166667,  executed if:(op1 == 1) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op1 == 1) && (not inlined)
    size:1.500000, time:0.500000,  executed if:(op1 == 1),  nonconst if:(op0[ref offset: 0] changed) && (op1 == 1)
    size:0.500000, time:0.166667,  executed if:(op1 == 1) && (not inlined)
    size:0.500000, time:0.166667,  executed if:(op1 == 1)
  calls:

IPA function summary for Swt_Ip_GetLock/8 inlinable
  global time:     7.000000
  self size:       8
  global size:     8
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op0[ref offset: 0] changed)
  calls:

IPA function summary for Swt_Ip_GetServiceMode/7 inlinable
  global time:     7.000000
  self size:       8
  global size:     8
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op0[ref offset: 0] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op0[ref offset: 0] changed)
  calls:

IPA function summary for DevAssert/0 inlinable
  global time:     54.499996
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
    size:0.000000, time:0.000000
    size:2.000000, time:0.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  executed if:(not inlined),  nonconst if:(op0 changed) && (not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:1.000000, time:50.499996,  executed if:(op0 == 0)
    size:1.000000, time:1.000000,  executed if:(op0 != 0) && (not inlined)
  calls:


Flattening functions:
Overall time estimate: 711.373755 weighted by profile: 0.000000

Deciding on inlining of small functions.  Starting with size 0.
Enqueueing calls in Swt_Ip_IrqHandler/28.
Enqueueing calls in Swt_Ip_ClearResetRequest/27.
Enqueueing calls in Swt_Ip_StopTimer/26.
Enqueueing calls in Swt_Ip_StartTimer/25.
Enqueueing calls in Swt_Ip_SetTimeout/24.
Enqueueing calls in Swt_Ip_Config/23.
Enqueueing calls in Swt_Ip_Service/22.
Enqueueing calls in Swt_Ip_Deinit/21.
Enqueueing calls in Swt_Ip_Init/20.
Enqueueing calls in Swt_Ip_CheckTimeout/12.
Enqueueing calls in Swt_Ip_RegisterConfig/11.
Enqueueing calls in Swt_Ip_Unlock/10.
Enqueueing calls in Swt_Ip_Lock/9.
Enqueueing calls in Swt_Ip_GetLock/8.
Enqueueing calls in Swt_Ip_GetServiceMode/7.
Enqueueing calls in DevAssert/0.

Considering Swt_Ip_GetLock/8 with 8 size
 to be inlined into Swt_Ip_StopTimer/26 in C:/Users/zhang_liu/workspaceS32DS.3.5/S32K358_TEMPLATE_S32DS/S32K358_TEMPLATE_S32DS_M7_0_0/MCAL/Wdg_TS_T40D34M30I0R0/src/Swt_Ip.c:758
 Estimated badness is -1.115385, frequency 1.00.

Considering Swt_Ip_CheckTimeout/12 with 9 size
 to be inlined into Swt_Ip_SetTimeout/24 in C:/Users/zhang_liu/workspaceS32DS.3.5/S32K358_TEMPLATE_S32DS/S32K358_TEMPLATE_S32DS_M7_0_0/MCAL/Wdg_TS_T40D34M30I0R0/src/Swt_Ip.c:672
 Estimated badness is -0.697674, frequency 1.00.

Considering Swt_Ip_GetServiceMode/7 with 8 size
 to be inlined into Swt_Ip_Service/22 in C:/Users/zhang_liu/workspaceS32DS.3.5/S32K358_TEMPLATE_S32DS/S32K358_TEMPLATE_S32DS_M7_0_0/MCAL/Wdg_TS_T40D34M30I0R0/src/Swt_Ip.c:565
 Estimated badness is -0.446154, frequency 1.00.
node context cache: 26 hits, 0 misses, 7 initializations

Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:

Deciding on functions to be inlined into all callers and removing useless speculations:

Inlining Swt_Ip_CheckTimeout/12 size 9.
 Called once from Swt_Ip_SetTimeout/24 41 insns.
 Inlined into Swt_Ip_SetTimeout/24 which now has 43 size

Inlining Swt_Ip_CheckTimeout/12 size 9.
 Called once from Swt_Ip_Config/23 42 insns.
 Inlined into Swt_Ip_Config/23 which now has 44 size

Inlining Swt_Ip_CheckTimeout/12 size 9.
 Called once from Swt_Ip_Init/20 48 insns.
 Inlined into Swt_Ip_Init/20 which now has 50 size

Inlining Swt_Ip_GetLock/8 size 8.
 Called once from Swt_Ip_StopTimer/26 24 insns.
 Inlined into Swt_Ip_StopTimer/26 which now has 26 size

Inlining Swt_Ip_GetLock/8 size 8.
 Called once from Swt_Ip_StartTimer/25 24 insns.
 Inlined into Swt_Ip_StartTimer/25 which now has 26 size

Inlining Swt_Ip_GetLock/8 size 8.
 Called once from Swt_Ip_SetTimeout/24 43 insns.
 Inlined into Swt_Ip_SetTimeout/24 which now has 45 size

Inlining Swt_Ip_GetLock/8 size 8.
 Called once from Swt_Ip_Service/22 65 insns.
 Inlined into Swt_Ip_Service/22 which now has 67 size
Overall time estimate: 636.593755 weighted by profile: 0.000000

Why inlining failed?
function body not available                       :       12 calls, 12.627249 freq, 0 count
--param max-inline-insns-auto limit reached       :        8 calls, 5.095600 freq, 0 count
call is unlikely and code size would grow         :       17 calls, 13.313400 freq, 0 count
IPA function summary for Swt_Ip_IrqHandler/28 inlinable
  global time:     26.187500
  self size:       32
  global size:     32
  min size:       25
  self stack:      0
  global stack:    0
    size:20.000000, time:8.750000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:4.000000, time:3.125000,  nonconst if:(op0 changed)
  calls:
    DevAssert/0 call is unlikely and code size would grow
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0
    indirect call loop depth: 0 freq:0.09 size: 3 time: 15

IPA function summary for Swt_Ip_ClearResetRequest/27 inlinable
  global time:     104.427494
  self size:       39
  global size:     39
  min size:       33
  self stack:      4
  global stack:    4
    size:18.000000, time:24.654666
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:3.000000, time:3.000000,  nonconst if:(op0 changed)
  calls:
    OsIf_GetElapsed/31 function body not available
      freq:2.75 loop depth: 1 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    OsIf_GetCounter/30 function body not available
      freq:0.33 loop depth: 0 size: 3 time: 12
       op0 is compile time invariant
    DevAssert/0 call is unlikely and code size would grow
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0
    OsIf_MicrosToTicks/29 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant

IPA function summary for Swt_Ip_StopTimer/26 inlinable
  global time:     59.450000
  self size:       24
  global size:     26
  min size:       21
  self stack:      0
  global stack:    0
    size:10.500000, time:8.490000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    SchM_Exit_Wdg_WDG_EXCLUSIVE_AREA_11/37 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    Swt_Ip_Lock/9 call is unlikely and code size would grow
      freq:0.33 loop depth: 0 size: 3 time: 12 callee size: 7 stack: 0
    Swt_Ip_Unlock/10 --param max-inline-insns-auto limit reached
      freq:1.00 loop depth: 0 size: 3 time: 12 callee size:19 stack: 4
    SchM_Enter_Wdg_WDG_EXCLUSIVE_AREA_11/36 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    Swt_Ip_GetLock/61 inlined
      freq:1.00
      Stack frame offset 0, callee self size 0
    DevAssert/0 call is unlikely and code size would grow
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0

IPA function summary for Swt_Ip_StartTimer/25 inlinable
  global time:     59.450000
  self size:       24
  global size:     26
  min size:       21
  self stack:      0
  global stack:    0
    size:10.500000, time:8.490000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    SchM_Exit_Wdg_WDG_EXCLUSIVE_AREA_10/35 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    Swt_Ip_Lock/9 call is unlikely and code size would grow
      freq:0.33 loop depth: 0 size: 3 time: 12 callee size: 7 stack: 0
    Swt_Ip_Unlock/10 --param max-inline-insns-auto limit reached
      freq:1.00 loop depth: 0 size: 3 time: 12 callee size:19 stack: 4
    SchM_Enter_Wdg_WDG_EXCLUSIVE_AREA_10/34 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    Swt_Ip_GetLock/62 inlined
      freq:1.00
      Stack frame offset 0, callee self size 0
    DevAssert/0 call is unlikely and code size would grow
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0

IPA function summary for Swt_Ip_SetTimeout/24 inlinable
  global time:     37.456100
  self size:       41
  global size:     45
  min size:       23
  self stack:      0
  global stack:    0
    size:14.500000, time:7.684600
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed || op2 changed)
    size:4.000000, time:2.435600,  nonconst if:(op2 changed)
    size:3.000000, time:0.326700,  executed if:(op2 == 0)
    size:4.000000, time:0.435600,  executed if:(op2 != 0)
    size:2.000000, time:2.000000,  nonconst if:(op1 changed)
    size:2.000000, time:1.000000,  executed if:(op2 != 0),  nonconst if:(op1 changed || op2 changed) && (op2 != 0)
  calls:
    Swt_Ip_Lock/9 call is unlikely and code size would grow
      freq:0.22 loop depth: 0 size: 3 time: 12 callee size: 7 stack: 0
    Swt_Ip_Unlock/10 --param max-inline-insns-auto limit reached
      freq:0.33 loop depth: 0 size: 3 time: 12 callee size:19 stack: 4
    Swt_Ip_CheckTimeout/59 inlined
      freq:1.00
      Stack frame offset 0, callee self size 0
    Swt_Ip_GetLock/63 inlined
      freq:1.00
      Stack frame offset 0, callee self size 0
    DevAssert/0 call is unlikely and code size would grow
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0

IPA function summary for Swt_Ip_Config/23 inlinable
  global time:     48.807400
  self size:       42
  global size:     44
  min size:       37
  self stack:      0
  global stack:    0
    size:23.500000, time:11.511300
    size:4.500000, time:3.108900,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    Swt_Ip_Lock/9 call is unlikely and code size would grow
      freq:0.22 loop depth: 0 size: 3 time: 12 callee size: 7 stack: 0
    Swt_Ip_RegisterConfig/11 --param max-inline-insns-auto limit reached
      freq:0.22 loop depth: 0 size: 3 time: 12 callee size:20 stack: 0
    Swt_Ip_Unlock/10 --param max-inline-insns-auto limit reached
      freq:0.33 loop depth: 0 size: 3 time: 12 callee size:19 stack: 4
    Swt_Ip_CheckTimeout/60 inlined
      freq:1.00
      Stack frame offset 0, callee self size 0
    DevAssert/0 call is unlikely and code size would grow
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0

IPA function summary for Swt_Ip_Service/22 inlinable
  global time:     55.290000
  self size:       63
  global size:     66
  min size:       61
  self stack:      0
  global stack:    0
    size:57.000000, time:20.290000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
  calls:
    SchM_Exit_Wdg_WDG_EXCLUSIVE_AREA_09/33 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    Swt_Ip_GetLock/8 inlined
      freq:0.33
      Stack frame offset 0, callee self size 0
    Swt_Ip_GetServiceMode/7 inlined
      freq:1.00
      Stack frame offset 0, callee self size 0
    SchM_Enter_Wdg_WDG_EXCLUSIVE_AREA_09/32 function body not available
      freq:1.00 loop depth: 0 size: 1 time: 10
    DevAssert/0 call is unlikely and code size would grow
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0

IPA function summary for Swt_Ip_Deinit/21 inlinable
  global time:     35.500000
  self size:       24
  global size:     24
  min size:       18
  self stack:      0
  global stack:    0
    size:13.000000, time:8.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:3.000000, time:2.500000,  nonconst if:(op0 changed)
  calls:
    Swt_Ip_Unlock/10 --param max-inline-insns-auto limit reached
      freq:1.00 loop depth: 0 size: 3 time: 12 callee size:19 stack: 4
    DevAssert/0 call is unlikely and code size would grow
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0

IPA function summary for Swt_Ip_Init/20 inlinable
  global time:     58.424100
  self size:       48
  global size:     50
  min size:       40
  self stack:      0
  global stack:    0
    size:26.500000, time:12.937950
    size:5.500000, time:2.932250,  executed if:(not inlined)
    size:4.000000, time:2.326700,  nonconst if:(op0 changed)
    size:1.000000, time:1.000000,  nonconst if:(op1 changed)
  calls:
    Swt_Ip_Lock/9 call is unlikely and code size would grow
      freq:0.22 loop depth: 0 size: 3 time: 12 callee size: 7 stack: 0
    Swt_Ip_RegisterConfig/11 --param max-inline-insns-auto limit reached
      freq:0.22 loop depth: 0 size: 3 time: 12 callee size:20 stack: 0
    Swt_Ip_CheckTimeout/12 inlined
      freq:0.66
      Stack frame offset 0, callee self size 0
    Swt_Ip_Unlock/10 --param max-inline-insns-auto limit reached
      freq:1.00 loop depth: 0 size: 3 time: 12 callee size:19 stack: 4
    DevAssert/0 call is unlikely and code size would grow
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0
    DevAssert/0 call is unlikely and code size would grow
      freq:1.00 loop depth: 0 size: 2 time: 11 callee size: 3 stack: 0

IPA function summary for Swt_Ip_RegisterConfig/11 inlinable
  global time:     37.680000
  self size:       41
  global size:     41
  min size:       2
  self stack:      0
  global stack:    0
  estimated growth:15
    size:1.500000, time:1.500000
    size:4.500000, time:3.500000,  executed if:(not inlined)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 48] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op1[ref offset: 48] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 0] changed) && (not inlined)
    size:1.500000, time:1.500000,  nonconst if:(op1[ref offset: 0] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1[ref offset: 48] changed || op1[ref offset: 0] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 8] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 8] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1[ref offset: 48] changed || op1[ref offset: 0] changed || op1[ref offset: 8] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 32] changed) && (not inlined)
    size:4.500000, time:4.500000,  nonconst if:(op1[ref offset: 32] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1[ref offset: 48] changed || op1[ref offset: 0] changed || op1[ref offset: 8] changed || op1[ref offset: 32] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 16] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 16] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1[ref offset: 48] changed || op1[ref offset: 0] changed || op1[ref offset: 8] changed || op1[ref offset: 32] changed || op1[ref offset: 16] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 24] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 24] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1[ref offset: 48] changed || op1[ref offset: 0] changed || op1[ref offset: 8] changed || op1[ref offset: 32] changed || op1[ref offset: 16] changed || op1[ref offset: 24] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 40] changed) && (not inlined)
    size:2.500000, time:2.500000,  nonconst if:(op1[ref offset: 40] changed)
    size:1.000000, time:1.000000,  nonconst if:(op1[ref offset: 48] changed || op1[ref offset: 0] changed || op1[ref offset: 8] changed || op1[ref offset: 32] changed || op1[ref offset: 16] changed || op1[ref offset: 24] changed || op1[ref offset: 40] changed)
    size:0.500000, time:0.500000,  executed if:(not inlined),  nonconst if:(op1[ref offset: 64] changed) && (not inlined)
    size:0.500000, time:0.500000,  nonconst if:(op1[ref offset: 64] changed)
    size:0.500000, time:0.250000,  executed if:(op1[ref offset: 32] != 0) && (not inlined),  nonconst if:(op1[ref offset: 96] changed) && (op1[ref offset: 32] != 0) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op1[ref offset: 32] != 0),  nonconst if:(op1[ref offset: 96] changed) && (op1[ref offset: 32] != 0)
    size:0.500000, time:0.250000,  executed if:(op1[ref offset: 32] != 0) && (not inlined)
    size:0.500000, time:0.250000,  executed if:(op1[ref offset: 32] != 0)
    size:0.500000, time:0.170000,  executed if:(op1[ref offset: 48] == 1) && (not inlined),  nonconst if:(op1[ref offset: 128] changed) && (op1[ref offset: 48] == 1) && (not inlined)
    size:0.500000, time:0.170000,  executed if:(op1[ref offset: 48] == 1),  nonconst if:(op1[ref offset: 128] changed) && (op1[ref offset: 48] == 1)
    size:0.500000, time:0.170000,  executed if:(op1[ref offset: 48] == 1) && (not inlined)
    size:0.500000, time:0.170000,  executed if:(op1[ref offset: 48] == 1)
  calls:

IPA function summary for Swt_Ip_Unlock/10 inlinable
  global time:     53.421163
  self size:       38
  global size:     38
  min size:       32
  self stack:      4
  global stack:    4
  estimated growth:136
    size:20.500000, time:16.766041
    size:6.500000, time:3.768708,  executed if:(not inlined)
  calls:
    OsIf_GetElapsed/31 function body not available
      freq:1.38 loop depth: 1 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant
    OsIf_GetCounter/30 function body not available
      freq:0.16 loop depth: 0 size: 3 time: 12
       op0 is compile time invariant
    OsIf_MicrosToTicks/29 function body not available
      freq:1.00 loop depth: 0 size: 4 time: 13
       op0 is compile time invariant
       op1 is compile time invariant

IPA function summary for Swt_Ip_Lock/9 inlinable
  global time:     6.000000
  self size:       15
  global size:     15
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:20
    size:0.000000, time:0.000000
    size:3.000000, time:2.000000,  executed if:(not inlined)
    size:6.000000, time:2.000000,  nonconst if:(op1 changed)
    size:0.500000, time:0.166667,  executed if:(op1 == 2) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op1 == 2) && (not inlined)
    size:1.500000, time:0.500000,  executed if:(op1 == 2),  nonconst if:(op0[ref offset: 0] changed) && (op1 == 2)
    size:0.500000, time:0.166667,  executed if:(op1 == 2) && (not inlined)
    size:0.500000, time:0.166667,  executed if:(op1 == 2)
    size:0.500000, time:0.166667,  executed if:(op1 == 1) && (not inlined),  nonconst if:(op0[ref offset: 0] changed) && (op1 == 1) && (not inlined)
    size:1.500000, time:0.500000,  executed if:(op1 == 1),  nonconst if:(op0[ref offset: 0] changed) && (op1 == 1)
    size:0.500000, time:0.166667,  executed if:(op1 == 1) && (not inlined)
    size:0.500000, time:0.166667,  executed if:(op1 == 1)
  calls:

IPA function summary for DevAssert/0 inlinable
  global time:     54.499996
  self size:       7
  global size:     7
  min size:       0
  self stack:      0
  global stack:    0
  estimated growth:5
    size:0.000000, time:0.000000
    size:2.000000, time:0.000000,  executed if:(not inlined)
    size:1.000000, time:1.000000,  executed if:(not inlined),  nonconst if:(op0 changed) && (not inlined)
    size:2.000000, time:2.000000,  nonconst if:(op0 changed)
    size:1.000000, time:50.499996,  executed if:(op0 == 0)
    size:1.000000, time:1.000000,  executed if:(op0 != 0) && (not inlined)
  calls:


Reclaiming functions:
Reclaiming variables:
Clearing address taken flags:
Symbol table:

Swt_Ip_GetLock/63 (Swt_Ip_GetLock) @064041c0
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 62
  References: 
  Referring: 
  Function Swt_Ip_GetLock/63 is inline copy in Swt_Ip_SetTimeout/24
  Clone of Swt_Ip_GetLock/8
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Swt_Ip_SetTimeout/24 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Swt_Ip_GetLock/62 (Swt_Ip_GetLock) @06144ee0
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 61
  previous sharing asm name: 63
  References: 
  Referring: 
  Function Swt_Ip_GetLock/62 is inline copy in Swt_Ip_StartTimer/25
  Clone of Swt_Ip_GetLock/8
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Swt_Ip_StartTimer/25 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Swt_Ip_GetLock/61 (Swt_Ip_GetLock) @061a2e00
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 8
  previous sharing asm name: 62
  References: 
  Referring: 
  Function Swt_Ip_GetLock/61 is inline copy in Swt_Ip_StopTimer/26
  Clone of Swt_Ip_GetLock/8
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Swt_Ip_StopTimer/26 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Swt_Ip_CheckTimeout/60 (Swt_Ip_CheckTimeout) @061447e0
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 59
  References: 
  Referring: 
  Function Swt_Ip_CheckTimeout/60 is inline copy in Swt_Ip_Config/23
  Clone of Swt_Ip_CheckTimeout/12
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Swt_Ip_Config/23 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
Swt_Ip_CheckTimeout/59 (Swt_Ip_CheckTimeout) @061a7460
  Type: function definition analyzed
  Visibility:
  next sharing asm name: 12
  previous sharing asm name: 60
  References: 
  Referring: 
  Function Swt_Ip_CheckTimeout/59 is inline copy in Swt_Ip_SetTimeout/24
  Clone of Swt_Ip_CheckTimeout/12
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Swt_Ip_SetTimeout/24 (inlined) (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Exit_Wdg_WDG_EXCLUSIVE_AREA_11/37 (SchM_Exit_Wdg_WDG_EXCLUSIVE_AREA_11) @061557e0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Swt_Ip_StopTimer/26 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Enter_Wdg_WDG_EXCLUSIVE_AREA_11/36 (SchM_Enter_Wdg_WDG_EXCLUSIVE_AREA_11) @06155700
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Swt_Ip_StopTimer/26 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Exit_Wdg_WDG_EXCLUSIVE_AREA_10/35 (SchM_Exit_Wdg_WDG_EXCLUSIVE_AREA_10) @06155540
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Swt_Ip_StartTimer/25 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Enter_Wdg_WDG_EXCLUSIVE_AREA_10/34 (SchM_Enter_Wdg_WDG_EXCLUSIVE_AREA_10) @06155460
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Swt_Ip_StartTimer/25 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Exit_Wdg_WDG_EXCLUSIVE_AREA_09/33 (SchM_Exit_Wdg_WDG_EXCLUSIVE_AREA_09) @06144d20
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Swt_Ip_Service/22 (1073741824 (estimated locally),1.00 per call) 
  Calls: 
SchM_Enter_Wdg_WDG_EXCLUSIVE_AREA_09/32 (SchM_Enter_Wdg_WDG_EXCLUSIVE_AREA_09) @06144c40
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Swt_Ip_Service/22 (1073741817 (estimated locally),1.00 per call) 
  Calls: 
OsIf_GetElapsed/31 (OsIf_GetElapsed) @06144380
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Swt_Ip_ClearResetRequest/27 (958878294 (estimated locally),2.75 per call) Swt_Ip_Unlock/10 (958878294 (estimated locally),1.38 per call) 
  Calls: 
OsIf_GetCounter/30 (OsIf_GetCounter) @061442a0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Swt_Ip_ClearResetRequest/27 (114863530 (estimated locally),0.33 per call) Swt_Ip_Unlock/10 (114863530 (estimated locally),0.16 per call) 
  Calls: 
OsIf_MicrosToTicks/29 (OsIf_MicrosToTicks) @061441c0
  Type: function
  Visibility: external public
  References: 
  Referring: 
  Availability: not_available
  Function flags: optimize_size
  Called by: Swt_Ip_ClearResetRequest/27 (348071305 (estimated locally),1.00 per call) Swt_Ip_Unlock/10 (696142611 (estimated locally),1.00 per call) 
  Calls: 
Swt_Ip_IrqHandler/28 (Swt_Ip_IrqHandler) @06242ee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Swt_Ip_sBase/1 (read) Wdg_Ip_abStatus/3 (read) Swt_Ip_apCallbackPtr/2 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
   Indirect call(93952410 (estimated locally),0.09 per call)  Num speculative call targets: 0
Swt_Ip_ClearResetRequest/27 (Swt_Ip_ClearResetRequest) @06242c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Swt_Ip_sBase/1 (read) 
  Referring: 
  Availability: available
  Function flags: count:348071305 (estimated locally) body optimize_size
  Called by: 
  Calls: OsIf_GetElapsed/31 (958878294 (estimated locally),2.75 per call) OsIf_GetCounter/30 (114863530 (estimated locally),0.33 per call) DevAssert/0 (348071305 (estimated locally),1.00 per call) DevAssert/0 (348071305 (estimated locally),1.00 per call) OsIf_MicrosToTicks/29 (348071305 (estimated locally),1.00 per call) 
Swt_Ip_StopTimer/26 (Swt_Ip_StopTimer) @062429a0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Swt_Ip_sBase/1 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Wdg_WDG_EXCLUSIVE_AREA_11/37 (1073741824 (estimated locally),1.00 per call) Swt_Ip_Lock/9 (354334800 (estimated locally),0.33 per call) Swt_Ip_Unlock/10 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Wdg_WDG_EXCLUSIVE_AREA_11/36 (1073741824 (estimated locally),1.00 per call) Swt_Ip_GetLock/61 (inlined) (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
Swt_Ip_StartTimer/25 (Swt_Ip_StartTimer) @06242700
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Swt_Ip_sBase/1 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Wdg_WDG_EXCLUSIVE_AREA_10/35 (1073741824 (estimated locally),1.00 per call) Swt_Ip_Lock/9 (354334800 (estimated locally),0.33 per call) Swt_Ip_Unlock/10 (1073741824 (estimated locally),1.00 per call) SchM_Enter_Wdg_WDG_EXCLUSIVE_AREA_10/34 (1073741824 (estimated locally),1.00 per call) Swt_Ip_GetLock/62 (inlined) (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
Swt_Ip_SetTimeout/24 (Swt_Ip_SetTimeout) @06242460
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Swt_Ip_sBase/1 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Swt_Ip_Lock/9 (233860967 (estimated locally),0.22 per call) Swt_Ip_Unlock/10 (354334800 (estimated locally),0.33 per call) Swt_Ip_CheckTimeout/59 (inlined) (1073741824 (estimated locally),1.00 per call) Swt_Ip_GetLock/63 (inlined) (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
Swt_Ip_Config/23 (Swt_Ip_Config) @062421c0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Swt_Ip_sBase/1 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Swt_Ip_Lock/9 (233860967 (estimated locally),0.22 per call) Swt_Ip_RegisterConfig/11 (233860967 (estimated locally),0.22 per call) Swt_Ip_Unlock/10 (354334800 (estimated locally),0.33 per call) Swt_Ip_CheckTimeout/60 (inlined) (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
Swt_Ip_Service/22 (Swt_Ip_Service) @061a7d20
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Swt_Ip_sBase/1 (read) 
  Referring: 
  Availability: available
  Function flags: count:1073741817 (estimated locally) body optimize_size
  Called by: 
  Calls: SchM_Exit_Wdg_WDG_EXCLUSIVE_AREA_09/33 (1073741824 (estimated locally),1.00 per call) Swt_Ip_GetLock/8 (inlined) (357913942 (estimated locally),0.33 per call) Swt_Ip_GetServiceMode/7 (inlined) (1073741817 (estimated locally),1.00 per call) SchM_Enter_Wdg_WDG_EXCLUSIVE_AREA_09/32 (1073741817 (estimated locally),1.00 per call) DevAssert/0 (1073741817 (estimated locally),1.00 per call) 
Swt_Ip_Deinit/21 (Swt_Ip_Deinit) @061a7ee0
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Swt_Ip_sBase/1 (read) Wdg_Ip_abStatus/3 (write) 
  Referring: 
  Availability: available
  Function flags: count:1073741824 (estimated locally) body optimize_size
  Called by: 
  Calls: Swt_Ip_Unlock/10 (1073741824 (estimated locally),1.00 per call) DevAssert/0 (1073741824 (estimated locally),1.00 per call) 
Swt_Ip_Init/20 (Swt_Ip_Init) @061a7c40
  Type: function definition analyzed
  Visibility: externally_visible public
  References: Swt_Ip_sBase/1 (read) Swt_Ip_apCallbackPtr/2 (write) Wdg_Ip_abStatus/3 (write) 
  Referring: 
  Availability: available
  Function flags: count:1073741823 (estimated locally) body optimize_size
  Called by: 
  Calls: Swt_Ip_Lock/9 (233860966 (estimated locally),0.22 per call) Swt_Ip_RegisterConfig/11 (233860966 (estimated locally),0.22 per call) Swt_Ip_CheckTimeout/12 (inlined) (708669600 (estimated locally),0.66 per call) Swt_Ip_Unlock/10 (1073741823 (estimated locally),1.00 per call) DevAssert/0 (1073741823 (estimated locally),1.00 per call) DevAssert/0 (1073741823 (estimated locally),1.00 per call) 
Swt_Ip_CheckTimeout/12 (Swt_Ip_CheckTimeout) @061a2540
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 59
  References: 
  Referring: 
  Function Swt_Ip_CheckTimeout/12 is inline copy in Swt_Ip_Init/20
  Availability: local
  Function flags: count:708669600 (estimated locally) body local optimize_size
  Called by: Swt_Ip_Init/20 (inlined) (708669600 (estimated locally),0.66 per call) 
  Calls: 
Swt_Ip_RegisterConfig/11 (Swt_Ip_RegisterConfig) @061a22a0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741824 (estimated locally) body local optimize_size
  Called by: Swt_Ip_Config/23 (233860967 (estimated locally),0.22 per call) Swt_Ip_Init/20 (233860966 (estimated locally),0.22 per call) 
  Calls: 
Swt_Ip_Unlock/10 (Swt_Ip_Unlock) @06198d20
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:696142611 (estimated locally) body local optimize_size
  Called by: Swt_Ip_StopTimer/26 (1073741824 (estimated locally),1.00 per call) Swt_Ip_StartTimer/25 (1073741824 (estimated locally),1.00 per call) Swt_Ip_SetTimeout/24 (354334800 (estimated locally),0.33 per call) Swt_Ip_Config/23 (354334800 (estimated locally),0.33 per call) Swt_Ip_Deinit/21 (1073741824 (estimated locally),1.00 per call) Swt_Ip_Init/20 (1073741823 (estimated locally),1.00 per call) 
  Calls: OsIf_GetElapsed/31 (958878294 (estimated locally),1.38 per call) OsIf_GetCounter/30 (114863530 (estimated locally),0.16 per call) OsIf_MicrosToTicks/29 (696142611 (estimated locally),1.00 per call) 
Swt_Ip_Lock/9 (Swt_Ip_Lock) @061988c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:1073741817 (estimated locally) body local optimize_size
  Called by: Swt_Ip_StopTimer/26 (354334800 (estimated locally),0.33 per call) Swt_Ip_StartTimer/25 (354334800 (estimated locally),0.33 per call) Swt_Ip_SetTimeout/24 (233860967 (estimated locally),0.22 per call) Swt_Ip_Config/23 (233860967 (estimated locally),0.22 per call) Swt_Ip_Init/20 (233860966 (estimated locally),0.22 per call) 
  Calls: 
Swt_Ip_GetLock/8 (Swt_Ip_GetLock) @06198460
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  previous sharing asm name: 61
  References: 
  Referring: 
  Function Swt_Ip_GetLock/8 is inline copy in Swt_Ip_Service/22
  Availability: local
  Function flags: count:357913942 (estimated locally) body local optimize_size
  Called by: Swt_Ip_Service/22 (inlined) (357913942 (estimated locally),0.33 per call) 
  Calls: 
Swt_Ip_GetServiceMode/7 (Swt_Ip_GetServiceMode) @061981c0
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Function Swt_Ip_GetServiceMode/7 is inline copy in Swt_Ip_Service/22
  Availability: local
  Function flags: count:1073741817 (estimated locally) body local optimize_size
  Called by: Swt_Ip_Service/22 (inlined) (1073741817 (estimated locally),1.00 per call) 
  Calls: 
Wdg_Ip_abStatus/3 (Wdg_Ip_abStatus) @06194a68
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Swt_Ip_Init/20 (write) Swt_Ip_Deinit/21 (write) Swt_Ip_IrqHandler/28 (read) 
  Availability: available
  Varpool flags:
Swt_Ip_apCallbackPtr/2 (Swt_Ip_apCallbackPtr) @061949d8
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Swt_Ip_Init/20 (write) Swt_Ip_IrqHandler/28 (read) 
  Availability: available
  Varpool flags:
Swt_Ip_sBase/1 (Swt_Ip_sBase) @06194900
  Type: variable definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: Swt_Ip_StopTimer/26 (read) Swt_Ip_ClearResetRequest/27 (read) Swt_Ip_Init/20 (read) Swt_Ip_Deinit/21 (read) Swt_Ip_Service/22 (read) Swt_Ip_Config/23 (read) Swt_Ip_SetTimeout/24 (read) Swt_Ip_StartTimer/25 (read) Swt_Ip_IrqHandler/28 (read) 
  Availability: available
  Varpool flags: initialized read-only const-value-known
DevAssert/0 (DevAssert) @05ffab60
  Type: function definition analyzed
  Visibility: prevailing_def_ironly
  References: 
  Referring: 
  Availability: local
  Function flags: count:21262216 (estimated locally) body local optimize_size
  Called by: Swt_Ip_IrqHandler/28 (1073741824 (estimated locally),1.00 per call) Swt_Ip_ClearResetRequest/27 (348071305 (estimated locally),1.00 per call) Swt_Ip_ClearResetRequest/27 (348071305 (estimated locally),1.00 per call) Swt_Ip_StopTimer/26 (1073741824 (estimated locally),1.00 per call) Swt_Ip_StartTimer/25 (1073741824 (estimated locally),1.00 per call) Swt_Ip_SetTimeout/24 (1073741824 (estimated locally),1.00 per call) Swt_Ip_Config/23 (1073741824 (estimated locally),1.00 per call) Swt_Ip_Config/23 (1073741824 (estimated locally),1.00 per call) Swt_Ip_Service/22 (1073741817 (estimated locally),1.00 per call) Swt_Ip_Deinit/21 (1073741824 (estimated locally),1.00 per call) Swt_Ip_Init/20 (1073741823 (estimated locally),1.00 per call) Swt_Ip_Init/20 (1073741823 (estimated locally),1.00 per call) 
  Calls: 

;; Function DevAssert (DevAssert, funcdef_no=0, decl_uid=5993, cgraph_uid=1, symbol_order=0)

DevAssert (volatile boolean x)
{
  _Bool x.0_1;

  <bb 2> [local count: 21262216]:
  # DEBUG BEGIN_STMT
  x.0_1 ={v} x;
  if (x.0_1 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 10631108]:

  <bb 3> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  __asm__ __volatile__("BKPT #0");
  # DEBUG BEGIN_STMT

  <bb 6> [local count: 1073741824]:
  goto <bb 3>; [100.00%]

  <bb 4> [local count: 10631108]:
  # DEBUG BEGIN_STMT
  return;

}



;; Function Swt_Ip_Lock (Swt_Ip_Lock, funcdef_no=6, decl_uid=6107, cgraph_uid=7, symbol_order=9)

Swt_Ip_Lock (struct SWT_Type * const Base, Swt_Ip_LockType LockConfig)
{
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;

  <bb 2> [local count: 1073741817]:
  # DEBUG BEGIN_STMT
  switch (LockConfig_6(D)) <default: <L4> [33.33%], case 1: <L1> [33.33%], case 2: <L0> [33.33%]>

  <bb 3> [local count: 357913942]:
<L0>:
  # DEBUG BEGIN_STMT
  _1 ={v} Base_8(D)->CR;
  _2 = _1 | 32;
  Base_8(D)->CR ={v} _2;
  # DEBUG BEGIN_STMT
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 357913942]:
<L1>:
  # DEBUG BEGIN_STMT
  _3 ={v} Base_8(D)->CR;
  _4 = _3 | 16;
  Base_8(D)->CR ={v} _4;
  # DEBUG BEGIN_STMT

  <bb 5> [local count: 1073741824]:
<L4>:
  return;

}



;; Function Swt_Ip_RegisterConfig (Swt_Ip_RegisterConfig, funcdef_no=8, decl_uid=6125, cgraph_uid=9, symbol_order=11)

Swt_Ip_RegisterConfig (struct SWT_Type * const Base, const struct Swt_Ip_ConfigType * const ConfigPtr)
{
  Swt_Ip_ServiceModeType ServiceMode;
  uint32 TempCr;
  unsigned char _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  _Bool _8;
  long unsigned int _9;
  _Bool _10;
  long unsigned int _11;
  _Bool _12;
  long unsigned int _13;
  _Bool _14;
  long unsigned int _15;
  _Bool _16;
  long unsigned int _17;
  long unsigned int _18;
  short unsigned int _19;
  long unsigned int _20;
  long unsigned int iftmp.1_21;
  long unsigned int iftmp.2_22;
  long unsigned int iftmp.3_23;
  long unsigned int iftmp.4_24;
  long unsigned int iftmp.5_25;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  # DEBUG TempCr => 0
  # DEBUG BEGIN_STMT
  ServiceMode_30 = ConfigPtr_29(D)->eServiceMode;
  # DEBUG ServiceMode => ServiceMode_30
  # DEBUG BEGIN_STMT
  _1 = ConfigPtr_29(D)->u8MapEnBitmask;
  _2 = (long unsigned int) _1;
  _3 = _2 << 24;
  _4 = (long unsigned int) ServiceMode_30;
  _5 = _4 << 9;
  _6 = _5 & 1536;
  _7 = _3 | _6;
  _8 = ConfigPtr_29(D)->bEnResetOnInvalidAccess;
  if (_8 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:

  <bb 4> [local count: 1073741824]:
  # iftmp.1_21 = PHI <256(2), 0(3)>
  _9 = _7 | iftmp.1_21;
  _10 = ConfigPtr_29(D)->bEnWindow;
  if (_10 != 0)
    goto <bb 6>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 5> [local count: 536870913]:

  <bb 6> [local count: 1073741824]:
  # iftmp.2_22 = PHI <128(4), 0(5)>
  _11 = _9 | iftmp.2_22;
  _12 = ConfigPtr_29(D)->bEnRunInStopMode;
  if (_12 != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 7> [local count: 536870913]:

  <bb 8> [local count: 1073741824]:
  # iftmp.3_23 = PHI <0(6), 4(7)>
  _13 = _11 | iftmp.3_23;
  _14 = ConfigPtr_29(D)->bEnRunInDebugMode;
  if (_14 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 9>; [50.00%]

  <bb 9> [local count: 536870913]:

  <bb 10> [local count: 1073741824]:
  # iftmp.4_24 = PHI <0(8), 2(9)>
  _15 = _13 | iftmp.4_24;
  _16 = ConfigPtr_29(D)->bEnInterrupt;
  if (_16 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 11> [local count: 536870913]:

  <bb 12> [local count: 1073741824]:
  # iftmp.5_25 = PHI <64(10), 0(11)>
  TempCr_31 = _15 | iftmp.5_25;
  # DEBUG TempCr => TempCr_31
  # DEBUG BEGIN_STMT
  Base_32(D)->CR ={v} TempCr_31;
  # DEBUG BEGIN_STMT
  Base_32(D)->IR ={v} 1;
  # DEBUG BEGIN_STMT
  _17 = ConfigPtr_29(D)->u32TimeoutValue;
  Base_32(D)->TO ={v} _17;
  # DEBUG BEGIN_STMT
  if (_10 != 0)
    goto <bb 13>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 13> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  _18 = ConfigPtr_29(D)->u32WindowValue;
  Base_32(D)->WN ={v} _18;

  <bb 14> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  if (ServiceMode_30 == 1)
    goto <bb 15>; [34.00%]
  else
    goto <bb 16>; [66.00%]

  <bb 15> [local count: 365072224]:
  # DEBUG BEGIN_STMT
  _19 = ConfigPtr_29(D)->u16InitialKey;
  _20 = (long unsigned int) _19;
  Base_32(D)->SK ={v} _20;

  <bb 16> [local count: 1073741824]:
  return;

}



;; Function Swt_Ip_Unlock (Swt_Ip_Unlock, funcdef_no=7, decl_uid=6114, cgraph_uid=8, symbol_order=10)

Swt_Ip_Unlock (struct SWT_Type * const Base)
{
  uint32 ElapsedTicks;
  uint32 CurrentTicks;
  uint32 TimeoutTicks;
  Swt_Ip_StatusType Ret;
  long unsigned int _1;
  long unsigned int _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _7;
  long unsigned int _22;
  long unsigned int _26;
  long unsigned int _27;

  <bb 2> [local count: 696142611]:
  # DEBUG BEGIN_STMT
  # DEBUG Ret => 0
  # DEBUG BEGIN_STMT
  TimeoutTicks_14 = OsIf_MicrosToTicks (3000, 0);
  # DEBUG TimeoutTicks => TimeoutTicks_14
  # DEBUG BEGIN_STMT
  CurrentTicks = 0;
  # DEBUG BEGIN_STMT
  # DEBUG ElapsedTicks => 0
  # DEBUG BEGIN_STMT
  _1 ={v} Base_16(D)->CR;
  _2 = _1 & 32;
  if (_2 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 348071305]:
  # DEBUG BEGIN_STMT
  _3 ={v} Base_16(D)->CR;
  _4 = _3 & 16;
  if (_4 != 0)
    goto <bb 4>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 4> [local count: 114863530]:
  # DEBUG BEGIN_STMT
  Base_16(D)->SR ={v} 50464;
  # DEBUG BEGIN_STMT
  Base_16(D)->SR ={v} 55592;
  # DEBUG BEGIN_STMT
  _5 = OsIf_GetCounter (0);
  CurrentTicks = _5;
  # DEBUG BEGIN_STMT
  goto <bb 6>; [100.00%]

  <bb 5> [local count: 958878294]:
  # DEBUG BEGIN_STMT
  _22 = OsIf_GetElapsed (&CurrentTicks, 0);
  ElapsedTicks_23 = ElapsedTicks_9 + _22;
  # DEBUG ElapsedTicks => ElapsedTicks_23

  <bb 6> [local count: 1073741824]:
  # ElapsedTicks_9 = PHI <0(4), ElapsedTicks_23(5)>
  # DEBUG ElapsedTicks => ElapsedTicks_9
  # DEBUG BEGIN_STMT
  _6 ={v} Base_16(D)->CR;
  _7 = _6 & 16;
  if (_7 != 0)
    goto <bb 7>; [94.50%]
  else
    goto <bb 8>; [5.50%]

  <bb 7> [local count: 1014686026]:
  if (ElapsedTicks_9 < TimeoutTicks_14)
    goto <bb 5>; [94.50%]
  else
    goto <bb 8>; [5.50%]

  <bb 8> [local count: 114863531]:
  # ElapsedTicks_24 = PHI <ElapsedTicks_9(6), ElapsedTicks_9(7)>
  # DEBUG BEGIN_STMT
  if (TimeoutTicks_14 <= ElapsedTicks_24)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 57431766]:
<L15>:
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_16(D)
  # DEBUG LockConfig => 1
  # DEBUG INLINE_ENTRY Swt_Ip_Lock
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _26 ={v} Base_16(D)->CR;
  _27 = _26 | 16;
  Base_16(D)->CR ={v} _27;
  # DEBUG BEGIN_STMT
  # DEBUG Base => NULL
  # DEBUG LockConfig => NULL
  # DEBUG BEGIN_STMT
  # DEBUG Ret => 1

  <bb 10> [local count: 696142612]:
  # Ret_8 = PHI <1(2), 0(3), 1(9), 0(8)>
  # DEBUG Ret => Ret_8
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  CurrentTicks ={v} {CLOBBER};
  return Ret_8;

}



;; Function Swt_Ip_Init (Swt_Ip_Init, funcdef_no=17, decl_uid=5961, cgraph_uid=18, symbol_order=20)


Symbols to be put in SSA form
{ D.6490 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 17
Number of blocks to update: 16 ( 94%)


Merging blocks 5 and 11
Merging blocks 16 and 10
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 14 3 }
;; 3 succs { 4 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 10 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 14 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 }
;; 14 succs { 1 }
Swt_Ip_Init (const uint32 Instance, const struct Swt_Ip_ConfigType * const ConfigPtr)
{
  Swt_Ip_StatusType Ret;
  Swt_Ip_StatusType D.6490;
  Swt_Ip_StatusType Ret;
  struct SWT_Type * const Base;
  _Bool _1;
  _Bool _2;
  <unnamed type> _3;
  long unsigned int _4;
  long unsigned int _5;
  _Bool _6;
  void (*<T4cf>) (void) _7;
  <unnamed type> _8;
  long unsigned int _20;
  _Bool _26;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;

  <bb 2> [local count: 1073741823]:
  # DEBUG BEGIN_STMT
  Base_15 = Swt_Ip_sBase[Instance_14(D)];
  # DEBUG Base => Base_15
  # DEBUG BEGIN_STMT
  # DEBUG Ret => 0
  # DEBUG BEGIN_STMT
  _1 = Instance_14(D) <= 2;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  _2 = ConfigPtr_17(D) != 0B;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = Swt_Ip_Unlock (Base_15);
  if (_3 == 1)
    goto <bb 14>; [34.00%]
  else
    goto <bb 3>; [66.00%]

  <bb 3> [local count: 708669600]:
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_15
  # DEBUG INLINE_ENTRY Swt_Ip_IsEnable
  # DEBUG BEGIN_STMT
  _20 ={v} MEM[(const struct SWT_Type *)Base_15].CR;
  _26 = (_Bool) _20;
  # DEBUG Base => NULL
  # DEBUG bSwtEnabled => _26
  # DEBUG BEGIN_STMT
  if (_26 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 5>; [50.00%]

  <bb 4> [local count: 354334800]:
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_15
  # DEBUG INLINE_ENTRY Swt_Ip_Disable
  # DEBUG BEGIN_STMT
  _27 ={v} Base_15->CR;
  _28 = _27 & 4294967294;
  Base_15->CR ={v} _28;

  <bb 5> [local count: 708669600]:
  # DEBUG Base => NULL
  # DEBUG BEGIN_STMT
  _4 = ConfigPtr_17(D)->u32TimeoutValue;
  _5 = ConfigPtr_17(D)->u32WindowValue;
  # DEBUG u32TimeoutValue => _4
  # DEBUG u32WindowValue => _5
  # DEBUG INLINE_ENTRY Swt_Ip_CheckTimeout
  # DEBUG BEGIN_STMT
  # DEBUG Ret => 0
  # DEBUG BEGIN_STMT
  if (_4 <= 2)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 354334800]:
  # DEBUG BEGIN_STMT
  # DEBUG Ret => 1

  <bb 7> [local count: 708669600]:
  # Ret_34 = PHI <0(5), 1(6)>
  # DEBUG Ret => Ret_34
  # DEBUG BEGIN_STMT
  if (_5 != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 8> [local count: 354334800]:
  if (_4 <= _5)
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 177167400]:
  # DEBUG BEGIN_STMT
  # DEBUG Ret => 1

  <bb 10> [local count: 708669600]:
  # Ret_33 = PHI <Ret_34(7), Ret_34(8), 1(9)>
  # DEBUG Ret => Ret_33
  # DEBUG BEGIN_STMT
  _35 = Ret_33;
  # DEBUG u32TimeoutValue => NULL
  # DEBUG u32WindowValue => NULL
  # DEBUG Ret => NULL
  Ret_21 = _35;
  # DEBUG Ret => Ret_21
  # DEBUG BEGIN_STMT
  if (Ret_21 == 0)
    goto <bb 11>; [33.00%]
  else
    goto <bb 14>; [67.00%]

  <bb 11> [local count: 233860966]:
  # DEBUG BEGIN_STMT
  Swt_Ip_RegisterConfig (Base_15, ConfigPtr_17(D));
  # DEBUG BEGIN_STMT
  _6 = ConfigPtr_17(D)->bEnInterrupt;
  if (_6 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 116930483]:
  # DEBUG BEGIN_STMT
  _7 = ConfigPtr_17(D)->pfSwtCallback;
  Swt_Ip_apCallbackPtr[Instance_14(D)] = _7;

  <bb 13> [local count: 233860966]:
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_15
  # DEBUG INLINE_ENTRY Swt_Ip_Enable
  # DEBUG BEGIN_STMT
  _29 ={v} Base_15->CR;
  _30 = _29 | 1;
  Base_15->CR ={v} _30;
  # DEBUG Base => NULL
  # DEBUG BEGIN_STMT
  _8 = ConfigPtr_17(D)->lockConfig;
  Swt_Ip_Lock (Base_15, _8);
  # DEBUG BEGIN_STMT
  Wdg_Ip_abStatus[Instance_14(D)] = 1;

  <bb 14> [local count: 1073741824]:
  # Ret_9 = PHI <1(2), Ret_21(10), 0(13)>
  # DEBUG Ret => Ret_9
  # DEBUG BEGIN_STMT
  return Ret_9;

}



;; Function Swt_Ip_Deinit (Swt_Ip_Deinit, funcdef_no=18, decl_uid=5963, cgraph_uid=19, symbol_order=21)

Swt_Ip_Deinit (const uint32 Instance)
{
  Swt_Ip_StatusType Ret;
  struct SWT_Type * const Base;
  _Bool _1;
  long unsigned int _15;
  long unsigned int _16;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Base_5 = Swt_Ip_sBase[Instance_4(D)];
  # DEBUG Base => Base_5
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Instance_4(D) <= 2;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  Ret_8 = Swt_Ip_Unlock (Base_5);
  # DEBUG Ret => Ret_8
  # DEBUG BEGIN_STMT
  if (Ret_8 == 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_5
  # DEBUG INLINE_ENTRY Swt_Ip_Disable
  # DEBUG BEGIN_STMT
  _15 ={v} Base_5->CR;
  _16 = _15 & 4294967294;
  Base_5->CR ={v} _16;
  # DEBUG Base => NULL
  # DEBUG BEGIN_STMT
  Base_5->IR ={v} 1;
  # DEBUG BEGIN_STMT
  Base_5->TO ={v} 800;
  # DEBUG BEGIN_STMT
  Base_5->WN ={v} 0;
  # DEBUG BEGIN_STMT
  Base_5->SK ={v} 0;
  # DEBUG BEGIN_STMT
  Base_5->CR ={v} 4278190346;
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_5
  # DEBUG INLINE_ENTRY Swt_Ip_ClearRequest
  # DEBUG BEGIN_STMT
  Base_5->RRR ={v} 1;
  # DEBUG Base => NULL
  # DEBUG BEGIN_STMT
  Wdg_Ip_abStatus[Instance_4(D)] = 0;

  <bb 4> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  return Ret_8;

}



;; Function Swt_Ip_Service (Swt_Ip_Service, funcdef_no=19, decl_uid=5965, cgraph_uid=20, symbol_order=22)


Symbols to be put in SSA form
{ D.6380 D.6499 D.6503 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 21
Number of blocks to update: 20 ( 95%)


Merging blocks 2 and 13
Merging blocks 7 and 17
Merging blocks 15 and 12
Merging blocks 20 and 16
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 16 15 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 9 }
;; 8 succs { 9 }
;; 9 succs { 10 11 }
;; 10 succs { 12 }
;; 11 succs { 12 }
;; 12 succs { 13 16 }
;; 13 succs { 14 16 }
;; 14 succs { 16 }
;; 15 succs { 16 }
;; 16 succs { 1 }
Swt_Ip_Service (const uint32 Instance)
{
  Swt_Ip_LockType LockMode;
  Swt_Ip_LockType D.6503;
  Swt_Ip_ServiceModeType Mode;
  Swt_Ip_ServiceModeType D.6499;
  Swt_Ip_ServiceModeType ServiceMode;
  boolean BUnlockSequence;
  struct SWT_Type * const Base;
  _Bool _1;
  <unnamed type> _2;
  long unsigned int _15;
  short unsigned int _16;
  short unsigned int _17;
  long unsigned int _18;
  short unsigned int _19;
  short unsigned int _20;
  long unsigned int _21;
  long unsigned int _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  short unsigned int _26;
  short unsigned int _27;
  short unsigned int _28;
  long unsigned int _29;
  long unsigned int _30;
  long unsigned int _31;
  long unsigned int _32;
  long unsigned int _33;
  short unsigned int _34;
  short unsigned int _35;
  short unsigned int _36;
  long unsigned int _37;
  long unsigned int _38;
  long unsigned int _39;
  long unsigned int _40;
  long unsigned int _41;
  long unsigned int _42;
  long unsigned int _43;
  long unsigned int _44;
  long unsigned int _45;
  long unsigned int _46;
  long unsigned int _47;
  long unsigned int _54;
  long unsigned int _55;
  long unsigned int _56;
  long unsigned int _58;
  long unsigned int _59;
  long unsigned int _60;
  unsigned int _61;
  unsigned char _63;

  <bb 2> [local count: 1073741817]:
  # DEBUG BEGIN_STMT
  Base_8 = Swt_Ip_sBase[Instance_7(D)];
  # DEBUG Base => Base_8
  # DEBUG BEGIN_STMT
  # DEBUG BUnlockSequence => 0
  # DEBUG BEGIN_STMT
  _1 = Instance_7(D) <= 2;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  SchM_Enter_Wdg_WDG_EXCLUSIVE_AREA_09 ();
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_8
  # DEBUG INLINE_ENTRY Swt_Ip_GetServiceMode
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _54 ={v} MEM[(const struct SWT_Type *)Base_8].CR;
  _55 = _54 >> 9;
  _56 = _55 & 3;
  if (_56 == 1)
    goto <bb 4>; [34.00%]
  else
    goto <bb 3>; [66.00%]

  <bb 3> [local count: 708669596]:
<L18>:
  # DEBUG BEGIN_STMT
  # DEBUG Mode => 0
  # DEBUG BEGIN_STMT

  <bb 4> [local count: 1073741817]:
  # Mode_57 = PHI <1(2), 0(3)>
  # DEBUG Mode => Mode_57
  # DEBUG BEGIN_STMT
  _66 = Mode_57;
  # DEBUG Base => NULL
  # DEBUG Mode => NULL
  ServiceMode_12 = _66;
  # DEBUG ServiceMode => ServiceMode_12
  # DEBUG BEGIN_STMT
  switch (ServiceMode_12) <default: <L12> [33.33%], case 0: <L17> [33.33%], case 1: <L16> [33.33%]>

  <bb 5> [local count: 357913942]:
<L16>:
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_8
  # DEBUG INLINE_ENTRY Swt_Ip_ServiceKeyGen
  # DEBUG BEGIN_STMT
  _15 ={v} MEM[(const struct SWT_Type *)Base_8].SK;
  _16 = (short unsigned int) _15;
  _17 = _16 * 17;
  # DEBUG Base => NULL
  if (_17 == 50461)
    goto <bb 6>; [34.00%]
  else
    goto <bb 7>; [66.00%]

  <bb 6> [local count: 121690741]:
  # DEBUG BEGIN_STMT
  # DEBUG BUnlockSequence => 1

  <bb 7> [local count: 357913942]:
  # BUnlockSequence_3 = PHI <0(5), 1(6)>
  # DEBUG BUnlockSequence => BUnlockSequence_3
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_8
  # DEBUG INLINE_ENTRY Swt_Ip_ServiceKeyGen
  # DEBUG BEGIN_STMT
  _25 ={v} MEM[(const struct SWT_Type *)Base_8].SK;
  _26 = (short unsigned int) _25;
  _27 = _26 * 17;
  _28 = _27 + 3;
  # DEBUG Base => NULL
  # DEBUG Base => Base_8
  # DEBUG ServiceKey => _28
  # DEBUG INLINE_ENTRY Swt_Ip_ServiceCmd
  # DEBUG BEGIN_STMT
  _21 ={v} Base_8->SR;
  _22 = _21 & 4294901760;
  _23 = (long unsigned int) _28;
  _24 = _22 | _23;
  Base_8->SR ={v} _24;
  # DEBUG Base => NULL
  # DEBUG ServiceKey => NULL
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_8
  # DEBUG INLINE_ENTRY Swt_Ip_ServiceKeyGen
  # DEBUG BEGIN_STMT
  _18 ={v} MEM[(const struct SWT_Type *)Base_8].SK;
  _19 = (short unsigned int) _18;
  _20 = _19 * 17;
  # DEBUG Base => NULL
  if (_20 == 50461)
    goto <bb 8>; [34.00%]
  else
    goto <bb 9>; [66.00%]

  <bb 8> [local count: 121690741]:
  # DEBUG BEGIN_STMT
  # DEBUG BUnlockSequence => 1

  <bb 9> [local count: 357913942]:
  # BUnlockSequence_4 = PHI <BUnlockSequence_3(7), 1(8)>
  # DEBUG BUnlockSequence => BUnlockSequence_4
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_8
  # DEBUG INLINE_ENTRY Swt_Ip_ServiceKeyGen
  # DEBUG BEGIN_STMT
  _33 ={v} MEM[(const struct SWT_Type *)Base_8].SK;
  _34 = (short unsigned int) _33;
  _35 = _34 * 17;
  _36 = _35 + 3;
  # DEBUG Base => NULL
  # DEBUG Base => Base_8
  # DEBUG ServiceKey => _36
  # DEBUG INLINE_ENTRY Swt_Ip_ServiceCmd
  # DEBUG BEGIN_STMT
  _29 ={v} Base_8->SR;
  _30 = _29 & 4294901760;
  _31 = (long unsigned int) _36;
  _32 = _30 | _31;
  Base_8->SR ={v} _32;
  # DEBUG Base => NULL
  # DEBUG ServiceKey => NULL
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_8
  # DEBUG INLINE_ENTRY Swt_Ip_GetLock
  # DEBUG BEGIN_STMT
  # DEBUG LockMode => 0
  # DEBUG BEGIN_STMT
  _58 ={v} MEM[(const struct SWT_Type *)Base_8].CR;
  _59 = _58 >> 4;
  _60 = _59 & 3;
  _61 = _60;
  if (_61 <= 2)
    goto <bb 11>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 10> [local count: 178956971]:
<L19>:
  LockMode_62 = 2;
  goto <bb 12>; [100.00%]

  <bb 11> [local count: 178956971]:
<L20>:
  _63 = (unsigned char) _60;
  LockMode_64 = _63;

  <bb 12> [local count: 357913942]:
  # LockMode_65 = PHI <LockMode_62(10), LockMode_64(11)>
<L21>:
<L22>:
  # DEBUG LockMode => LockMode_65
  # DEBUG BEGIN_STMT
  _67 = LockMode_65;
  # DEBUG Base => NULL
  # DEBUG LockMode => NULL
  _2 = _67;
  if (_2 == 1)
    goto <bb 13>; [34.00%]
  else
    goto <bb 16>; [66.00%]

  <bb 13> [local count: 121690741]:
  if (BUnlockSequence_4 != 0)
    goto <bb 14>; [50.00%]
  else
    goto <bb 16>; [50.00%]

  <bb 14> [local count: 60845371]:
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_8
  # DEBUG ServiceKey => 55592
  # DEBUG INLINE_ENTRY Swt_Ip_ServiceCmd
  # DEBUG BEGIN_STMT
  _39 ={v} Base_8->SR;
  _40 = _39 & 4294901760;
  _41 = _40 | 55592;
  Base_8->SR ={v} _41;
  # DEBUG Base => NULL
  # DEBUG ServiceKey => NULL
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_8
  # DEBUG LockConfig => 1
  # DEBUG INLINE_ENTRY Swt_Ip_Lock
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _37 ={v} Base_8->CR;
  _38 = _37 | 16;
  Base_8->CR ={v} _38;
  # DEBUG BEGIN_STMT
  goto <bb 16>; [100.00%]

  <bb 15> [local count: 357913942]:
<L17>:
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_8
  # DEBUG ServiceKey => 42498
  # DEBUG INLINE_ENTRY Swt_Ip_ServiceCmd
  # DEBUG BEGIN_STMT
  _45 ={v} Base_8->SR;
  _46 = _45 & 4294901760;
  _47 = _46 | 42498;
  Base_8->SR ={v} _47;
  # DEBUG Base => NULL
  # DEBUG ServiceKey => NULL
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_8
  # DEBUG ServiceKey => 46208
  # DEBUG INLINE_ENTRY Swt_Ip_ServiceCmd
  # DEBUG BEGIN_STMT
  _42 ={v} Base_8->SR;
  _43 = _42 & 4294901760;
  _44 = _43 | 46208;
  Base_8->SR ={v} _44;

  <bb 16> [local count: 1073741824]:
<L12>:
  # DEBUG Base => NULL
  # DEBUG ServiceKey => NULL
  # DEBUG Base => NULL
  # DEBUG LockConfig => NULL
  # DEBUG BEGIN_STMT
  SchM_Exit_Wdg_WDG_EXCLUSIVE_AREA_09 ();
  return;

}



;; Function Swt_Ip_Config (Swt_Ip_Config, funcdef_no=20, decl_uid=5968, cgraph_uid=21, symbol_order=23)


Symbols to be put in SSA form
{ D.6514 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 17
Number of blocks to update: 16 ( 94%)


Merging blocks 2 and 11
Merging blocks 16 and 10
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14
;; 2 succs { 3 4 }
;; 3 succs { 4 }
;; 4 succs { 5 7 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 14 }
;; 8 succs { 14 9 }
;; 9 succs { 10 11 }
;; 10 succs { 11 }
;; 11 succs { 12 13 }
;; 12 succs { 13 }
;; 13 succs { 14 }
;; 14 succs { 1 }
Swt_Ip_Config (const uint32 Instance, const struct Swt_Ip_ConfigType * const ConfigPtr)
{
  Swt_Ip_StatusType Ret;
  Swt_Ip_StatusType D.6514;
  Swt_Ip_StatusType Ret;
  struct SWT_Type * const Base;
  _Bool _1;
  _Bool _2;
  long unsigned int _3;
  long unsigned int _4;
  <unnamed type> _5;
  <unnamed type> _6;
  long unsigned int _17;
  _Bool _22;
  long unsigned int _23;
  long unsigned int _24;
  long unsigned int _25;
  long unsigned int _26;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Base_13 = Swt_Ip_sBase[Instance_12(D)];
  # DEBUG Base => Base_13
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Instance_12(D) <= 2;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  _2 = ConfigPtr_15(D) != 0B;
  DevAssert (_2);
  # DEBUG BEGIN_STMT
  _3 = ConfigPtr_15(D)->u32TimeoutValue;
  _4 = ConfigPtr_15(D)->u32WindowValue;
  # DEBUG u32TimeoutValue => _3
  # DEBUG u32WindowValue => _4
  # DEBUG INLINE_ENTRY Swt_Ip_CheckTimeout
  # DEBUG BEGIN_STMT
  # DEBUG Ret => 0
  # DEBUG BEGIN_STMT
  if (_3 <= 2)
    goto <bb 3>; [50.00%]
  else
    goto <bb 4>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG Ret => 1

  <bb 4> [local count: 1073741824]:
  # Ret_30 = PHI <0(2), 1(3)>
  # DEBUG Ret => Ret_30
  # DEBUG BEGIN_STMT
  if (_4 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 5> [local count: 536870913]:
  if (_3 <= _4)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  # DEBUG Ret => 1

  <bb 7> [local count: 1073741824]:
  # Ret_29 = PHI <Ret_30(4), Ret_30(5), 1(6)>
  # DEBUG Ret => Ret_29
  # DEBUG BEGIN_STMT
  _31 = Ret_29;
  # DEBUG u32TimeoutValue => NULL
  # DEBUG u32WindowValue => NULL
  # DEBUG Ret => NULL
  Ret_18 = _31;
  # DEBUG Ret => Ret_18
  # DEBUG BEGIN_STMT
  if (Ret_18 == 0)
    goto <bb 8>; [33.00%]
  else
    goto <bb 14>; [67.00%]

  <bb 8> [local count: 354334800]:
  # DEBUG BEGIN_STMT
  _5 = Swt_Ip_Unlock (Base_13);
  if (_5 == 1)
    goto <bb 14>; [34.00%]
  else
    goto <bb 9>; [66.00%]

  <bb 9> [local count: 233860967]:
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_13
  # DEBUG INLINE_ENTRY Swt_Ip_IsEnable
  # DEBUG BEGIN_STMT
  _17 ={v} MEM[(const struct SWT_Type *)Base_13].CR;
  _22 = (_Bool) _17;
  # DEBUG Base => NULL
  # DEBUG bSwtEnabled => _22
  # DEBUG BEGIN_STMT
  if (_22 != 0)
    goto <bb 10>; [50.00%]
  else
    goto <bb 11>; [50.00%]

  <bb 10> [local count: 116930483]:
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_13
  # DEBUG INLINE_ENTRY Swt_Ip_Disable
  # DEBUG BEGIN_STMT
  _23 ={v} Base_13->CR;
  _24 = _23 & 4294967294;
  Base_13->CR ={v} _24;

  <bb 11> [local count: 233860967]:
  # DEBUG Base => NULL
  # DEBUG BEGIN_STMT
  Swt_Ip_RegisterConfig (Base_13, ConfigPtr_15(D));
  # DEBUG BEGIN_STMT
  if (_22 != 0)
    goto <bb 12>; [50.00%]
  else
    goto <bb 13>; [50.00%]

  <bb 12> [local count: 116930483]:
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_13
  # DEBUG INLINE_ENTRY Swt_Ip_Enable
  # DEBUG BEGIN_STMT
  _25 ={v} Base_13->CR;
  _26 = _25 | 1;
  Base_13->CR ={v} _26;

  <bb 13> [local count: 233860967]:
  # DEBUG Base => NULL
  # DEBUG BEGIN_STMT
  _6 = ConfigPtr_15(D)->lockConfig;
  Swt_Ip_Lock (Base_13, _6);

  <bb 14> [local count: 1073741824]:
  # Ret_7 = PHI <Ret_18(7), 1(8), 0(13)>
  # DEBUG Ret => Ret_7
  # DEBUG BEGIN_STMT
  return Ret_7;

}



;; Function Swt_Ip_SetTimeout (Swt_Ip_SetTimeout, funcdef_no=21, decl_uid=5972, cgraph_uid=22, symbol_order=24)


Symbols to be put in SSA form
{ D.6382 D.6521 D.6524 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 21
Number of blocks to update: 20 ( 95%)


Merging blocks 2 and 17
Merging blocks 15 and 9
Merging blocks 20 and 16
Merging blocks 20 and 10
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 8 10 }
;; 8 succs { 9 10 }
;; 9 succs { 10 }
;; 10 succs { 11 16 }
;; 11 succs { 16 12 }
;; 12 succs { 13 14 }
;; 13 succs { 15 }
;; 14 succs { 15 }
;; 15 succs { 16 }
;; 16 succs { 1 }
Swt_Ip_SetTimeout (const uint32 Instance, const uint32 TimeoutValue, const uint32 WindowValue)
{
  Swt_Ip_LockType LockMode;
  Swt_Ip_LockType D.6524;
  Swt_Ip_StatusType Ret;
  Swt_Ip_StatusType D.6521;
  Swt_Ip_StatusType Ret;
  Swt_Ip_LockType LockConfig;
  struct SWT_Type * const Base;
  _Bool _1;
  <unnamed type> _2;
  long unsigned int _3;
  long unsigned int _4;
  long unsigned int _5;
  long unsigned int _6;
  long unsigned int _18;
  long unsigned int _26;
  long unsigned int _27;
  long unsigned int _28;
  long unsigned int _33;
  long unsigned int _34;
  long unsigned int _35;
  unsigned int _36;
  unsigned char _38;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Base_12 = Swt_Ip_sBase[Instance_11(D)];
  # DEBUG Base => Base_12
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Instance_11(D) <= 2;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_12
  # DEBUG INLINE_ENTRY Swt_Ip_GetLock
  # DEBUG BEGIN_STMT
  # DEBUG LockMode => 0
  # DEBUG BEGIN_STMT
  _33 ={v} MEM[(const struct SWT_Type *)Base_12].CR;
  _34 = _33 >> 4;
  _35 = _34 & 3;
  _36 = _35;
  if (_36 <= 2)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:
<L9>:
  LockMode_37 = 2;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
<L10>:
  _38 = (unsigned char) _35;
  LockMode_39 = _38;

  <bb 5> [local count: 1073741824]:
  # LockMode_40 = PHI <LockMode_37(3), LockMode_39(4)>
<L11>:
<L12>:
  # DEBUG LockMode => LockMode_40
  # DEBUG BEGIN_STMT
  _41 = LockMode_40;
  # DEBUG Base => NULL
  # DEBUG LockMode => NULL
  LockConfig_15 = _41;
  # DEBUG LockConfig => LockConfig_15
  # DEBUG BEGIN_STMT
  # DEBUG u32TimeoutValue => TimeoutValue_16(D)
  # DEBUG u32WindowValue => WindowValue_17(D)
  # DEBUG INLINE_ENTRY Swt_Ip_CheckTimeout
  # DEBUG BEGIN_STMT
  # DEBUG Ret => 0
  # DEBUG BEGIN_STMT
  if (TimeoutValue_16(D) <= 2)
    goto <bb 6>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 6> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG Ret => 1

  <bb 7> [local count: 1073741824]:
  # Ret_32 = PHI <0(5), 1(6)>
  # DEBUG Ret => Ret_32
  # DEBUG BEGIN_STMT
  if (WindowValue_17(D) != 0)
    goto <bb 8>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 8> [local count: 536870913]:
  if (TimeoutValue_16(D) <= WindowValue_17(D))
    goto <bb 9>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 9> [local count: 268435456]:
  # DEBUG BEGIN_STMT
  # DEBUG Ret => 1

  <bb 10> [local count: 1073741824]:
  # Ret_31 = PHI <Ret_32(7), Ret_32(8), 1(9)>
  # DEBUG Ret => Ret_31
  # DEBUG BEGIN_STMT
  _42 = Ret_31;
  # DEBUG u32TimeoutValue => NULL
  # DEBUG u32WindowValue => NULL
  # DEBUG Ret => NULL
  Ret_19 = _42;
  # DEBUG Ret => Ret_19
  # DEBUG BEGIN_STMT
  if (Ret_19 == 0)
    goto <bb 11>; [33.00%]
  else
    goto <bb 16>; [67.00%]

  <bb 11> [local count: 354334800]:
  # DEBUG BEGIN_STMT
  _2 = Swt_Ip_Unlock (Base_12);
  if (_2 == 1)
    goto <bb 16>; [34.00%]
  else
    goto <bb 12>; [66.00%]

  <bb 12> [local count: 233860967]:
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_12
  # DEBUG INLINE_ENTRY Swt_Ip_Disable
  # DEBUG BEGIN_STMT
  _18 ={v} Base_12->CR;
  _26 = _18 & 4294967294;
  Base_12->CR ={v} _26;
  # DEBUG Base => NULL
  # DEBUG BEGIN_STMT
  Base_12->TO ={v} TimeoutValue_16(D);
  # DEBUG BEGIN_STMT
  if (WindowValue_17(D) != 0)
    goto <bb 13>; [50.00%]
  else
    goto <bb 14>; [50.00%]

  <bb 13> [local count: 116930483]:
  # DEBUG BEGIN_STMT
  Base_12->WN ={v} WindowValue_17(D);
  # DEBUG BEGIN_STMT
  _3 ={v} Base_12->CR;
  _4 = _3 | 128;
  Base_12->CR ={v} _4;
  goto <bb 15>; [100.00%]

  <bb 14> [local count: 116930483]:
  # DEBUG BEGIN_STMT
  _5 ={v} Base_12->CR;
  _6 = _5 & 4294967167;
  Base_12->CR ={v} _6;

  <bb 15> [local count: 233860967]:
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_12
  # DEBUG INLINE_ENTRY Swt_Ip_Enable
  # DEBUG BEGIN_STMT
  _27 ={v} Base_12->CR;
  _28 = _27 | 1;
  Base_12->CR ={v} _28;
  # DEBUG Base => NULL
  # DEBUG BEGIN_STMT
  Swt_Ip_Lock (Base_12, LockConfig_15);

  <bb 16> [local count: 1073741824]:
  # Ret_7 = PHI <Ret_19(10), 1(11), 0(15)>
  # DEBUG Ret => Ret_7
  # DEBUG BEGIN_STMT
  return Ret_7;

}



;; Function Swt_Ip_StartTimer (Swt_Ip_StartTimer, funcdef_no=22, decl_uid=5974, cgraph_uid=23, symbol_order=25)


Symbols to be put in SSA form
{ D.6383 D.6534 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Merging blocks 2 and 6
Merging blocks 9 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Swt_Ip_StartTimer (const uint32 Instance)
{
  Swt_Ip_LockType LockMode;
  Swt_Ip_LockType D.6534;
  Swt_Ip_StatusType Ret;
  Swt_Ip_LockType LockConfig;
  struct SWT_Type * const Base;
  _Bool _1;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  unsigned int _20;
  unsigned char _22;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Base_5 = Swt_Ip_sBase[Instance_4(D)];
  # DEBUG Base => Base_5
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Instance_4(D) <= 2;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_5
  # DEBUG INLINE_ENTRY Swt_Ip_GetLock
  # DEBUG BEGIN_STMT
  # DEBUG LockMode => 0
  # DEBUG BEGIN_STMT
  _17 ={v} MEM[(const struct SWT_Type *)Base_5].CR;
  _18 = _17 >> 4;
  _19 = _18 & 3;
  _20 = _19;
  if (_20 <= 2)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:
<L3>:
  LockMode_21 = 2;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
<L4>:
  _22 = (unsigned char) _19;
  LockMode_23 = _22;

  <bb 5> [local count: 1073741824]:
  # LockMode_24 = PHI <LockMode_21(3), LockMode_23(4)>
<L5>:
<L6>:
  # DEBUG LockMode => LockMode_24
  # DEBUG BEGIN_STMT
  _25 = LockMode_24;
  # DEBUG Base => NULL
  # DEBUG LockMode => NULL
  LockConfig_8 = _25;
  # DEBUG LockConfig => LockConfig_8
  # DEBUG BEGIN_STMT
  SchM_Enter_Wdg_WDG_EXCLUSIVE_AREA_10 ();
  # DEBUG BEGIN_STMT
  Ret_11 = Swt_Ip_Unlock (Base_5);
  # DEBUG Ret => Ret_11
  # DEBUG BEGIN_STMT
  if (Ret_11 == 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 6> [local count: 354334800]:
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_5
  # DEBUG INLINE_ENTRY Swt_Ip_Enable
  # DEBUG BEGIN_STMT
  _14 ={v} Base_5->CR;
  _15 = _14 | 1;
  Base_5->CR ={v} _15;
  # DEBUG Base => NULL
  # DEBUG BEGIN_STMT
  Swt_Ip_Lock (Base_5, LockConfig_8);

  <bb 7> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Wdg_WDG_EXCLUSIVE_AREA_10 ();
  # DEBUG BEGIN_STMT
  return Ret_11;

}



;; Function Swt_Ip_StopTimer (Swt_Ip_StopTimer, funcdef_no=23, decl_uid=5976, cgraph_uid=24, symbol_order=26)


Symbols to be put in SSA form
{ D.6384 D.6544 }
Incremental SSA update started at block: 0
Number of blocks in CFG: 10
Number of blocks to update: 9 ( 90%)


Merging blocks 2 and 6
Merging blocks 9 and 5
;; 1 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7
;; 2 succs { 3 4 }
;; 3 succs { 5 }
;; 4 succs { 5 }
;; 5 succs { 6 7 }
;; 6 succs { 7 }
;; 7 succs { 1 }
Swt_Ip_StopTimer (const uint32 Instance)
{
  Swt_Ip_LockType LockMode;
  Swt_Ip_LockType D.6544;
  Swt_Ip_StatusType Ret;
  Swt_Ip_LockType LockConfig;
  struct SWT_Type * const Base;
  _Bool _1;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _17;
  long unsigned int _18;
  long unsigned int _19;
  unsigned int _20;
  unsigned char _22;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Base_5 = Swt_Ip_sBase[Instance_4(D)];
  # DEBUG Base => Base_5
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  # DEBUG BEGIN_STMT
  _1 = Instance_4(D) <= 2;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_5
  # DEBUG INLINE_ENTRY Swt_Ip_GetLock
  # DEBUG BEGIN_STMT
  # DEBUG LockMode => 0
  # DEBUG BEGIN_STMT
  _17 ={v} MEM[(const struct SWT_Type *)Base_5].CR;
  _18 = _17 >> 4;
  _19 = _18 & 3;
  _20 = _19;
  if (_20 <= 2)
    goto <bb 4>; [50.00%]
  else
    goto <bb 3>; [50.00%]

  <bb 3> [local count: 536870913]:
<L3>:
  LockMode_21 = 2;
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 536870913]:
<L4>:
  _22 = (unsigned char) _19;
  LockMode_23 = _22;

  <bb 5> [local count: 1073741824]:
  # LockMode_24 = PHI <LockMode_21(3), LockMode_23(4)>
<L5>:
<L6>:
  # DEBUG LockMode => LockMode_24
  # DEBUG BEGIN_STMT
  _25 = LockMode_24;
  # DEBUG Base => NULL
  # DEBUG LockMode => NULL
  LockConfig_8 = _25;
  # DEBUG LockConfig => LockConfig_8
  # DEBUG BEGIN_STMT
  SchM_Enter_Wdg_WDG_EXCLUSIVE_AREA_11 ();
  # DEBUG BEGIN_STMT
  Ret_11 = Swt_Ip_Unlock (Base_5);
  # DEBUG Ret => Ret_11
  # DEBUG BEGIN_STMT
  if (Ret_11 == 0)
    goto <bb 6>; [33.00%]
  else
    goto <bb 7>; [67.00%]

  <bb 6> [local count: 354334800]:
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_5
  # DEBUG INLINE_ENTRY Swt_Ip_Disable
  # DEBUG BEGIN_STMT
  _14 ={v} Base_5->CR;
  _15 = _14 & 4294967294;
  Base_5->CR ={v} _15;
  # DEBUG Base => NULL
  # DEBUG BEGIN_STMT
  Swt_Ip_Lock (Base_5, LockConfig_8);

  <bb 7> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  SchM_Exit_Wdg_WDG_EXCLUSIVE_AREA_11 ();
  # DEBUG BEGIN_STMT
  return Ret_11;

}



;; Function Swt_Ip_ClearResetRequest (Swt_Ip_ClearResetRequest, funcdef_no=24, decl_uid=5978, cgraph_uid=25, symbol_order=27)

Swt_Ip_ClearResetRequest (const uint32 Instance)
{
  uint32 ElapsedTicks;
  uint32 CurrentTicks;
  uint32 TimeoutTicks;
  Swt_Ip_StatusType Ret;
  struct SWT_Type * const Base;
  _Bool _1;
  long unsigned int _2;
  _Bool _3;
  long unsigned int _4;
  long unsigned int _20;
  long unsigned int _24;
  _Bool _25;
  long unsigned int _26;
  _Bool _27;
  long unsigned int _28;
  _Bool _29;

  <bb 2> [local count: 348071305]:
  # DEBUG BEGIN_STMT
  Base_11 = Swt_Ip_sBase[Instance_10(D)];
  # DEBUG Base => Base_11
  # DEBUG BEGIN_STMT
  # DEBUG Ret => 0
  # DEBUG BEGIN_STMT
  TimeoutTicks_13 = OsIf_MicrosToTicks (3000, 0);
  # DEBUG TimeoutTicks => TimeoutTicks_13
  # DEBUG BEGIN_STMT
  CurrentTicks = 0;
  # DEBUG BEGIN_STMT
  # DEBUG ElapsedTicks => 0
  # DEBUG BEGIN_STMT
  _1 = Instance_10(D) <= 2;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  _2 = 7 >> Instance_10(D);
  _3 = (_Bool) _2;
  DevAssert (_3);
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_11
  # DEBUG INLINE_ENTRY Swt_Ip_RequestedReset
  # DEBUG BEGIN_STMT
  _24 ={v} MEM[(const struct SWT_Type *)Base_11].RRR;
  _25 = (_Bool) _24;
  # DEBUG Base => NULL
  if (_25 != 0)
    goto <bb 3>; [33.00%]
  else
    goto <bb 10>; [67.00%]

  <bb 3> [local count: 114863530]:
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_11
  # DEBUG INLINE_ENTRY Swt_Ip_ClearRequest
  # DEBUG BEGIN_STMT
  Base_11->RRR ={v} 1;
  # DEBUG Base => NULL
  # DEBUG BEGIN_STMT
  _4 = OsIf_GetCounter (0);
  CurrentTicks = _4;
  # DEBUG BEGIN_STMT
  goto <bb 5>; [100.00%]

  <bb 4> [local count: 958878294]:
  # DEBUG BEGIN_STMT
  _20 = OsIf_GetElapsed (&CurrentTicks, 0);
  ElapsedTicks_21 = ElapsedTicks_6 + _20;
  # DEBUG ElapsedTicks => ElapsedTicks_21

  <bb 5> [local count: 1073741824]:
  # ElapsedTicks_6 = PHI <0(3), ElapsedTicks_21(4)>
  # DEBUG ElapsedTicks => ElapsedTicks_6
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_11
  # DEBUG INLINE_ENTRY Swt_Ip_RequestedReset
  # DEBUG BEGIN_STMT
  _26 ={v} MEM[(const struct SWT_Type *)Base_11].RRR;
  _27 = (_Bool) _26;
  # DEBUG Base => NULL
  if (_27 != 0)
    goto <bb 6>; [94.50%]
  else
    goto <bb 7>; [5.50%]

  <bb 6> [local count: 1014686026]:
  if (ElapsedTicks_6 < TimeoutTicks_13)
    goto <bb 4>; [94.50%]
  else
    goto <bb 7>; [5.50%]

  <bb 7> [local count: 114863531]:
  # ElapsedTicks_22 = PHI <ElapsedTicks_6(5), ElapsedTicks_6(6)>
  # DEBUG BEGIN_STMT
  if (TimeoutTicks_13 <= ElapsedTicks_22)
    goto <bb 8>; [50.00%]
  else
    goto <bb 10>; [50.00%]

  <bb 8> [local count: 57431766]:
  # DEBUG Base => Base_11
  # DEBUG INLINE_ENTRY Swt_Ip_RequestedReset
  # DEBUG BEGIN_STMT
  _28 ={v} MEM[(const struct SWT_Type *)Base_11].RRR;
  _29 = (_Bool) _28;
  # DEBUG Base => NULL
  if (_29 != 0)
    goto <bb 9>; [35.00%]
  else
    goto <bb 10>; [65.00%]

  <bb 9> [local count: 20101118]:
  # DEBUG BEGIN_STMT
  # DEBUG Ret => 2

  <bb 10> [local count: 348071307]:
  # Ret_5 = PHI <0(8), 1(2), 0(7), 2(9)>
  # DEBUG Ret => Ret_5
  # DEBUG BEGIN_STMT
  CurrentTicks ={v} {CLOBBER};
  return Ret_5;

}



;; Function Swt_Ip_IrqHandler (Swt_Ip_IrqHandler, funcdef_no=25, decl_uid=6074, cgraph_uid=26, symbol_order=28)

Swt_Ip_IrqHandler (uint32 Instance)
{
  struct SWT_Type * const Base;
  _Bool _1;
  _Bool _2;
  void (*<T4cf>) (void) _3;
  long unsigned int _10;
  _Bool _11;
  long unsigned int _12;
  long unsigned int _13;
  long unsigned int _14;
  long unsigned int _15;
  long unsigned int _16;
  long unsigned int _17;

  <bb 2> [local count: 1073741824]:
  # DEBUG BEGIN_STMT
  Base_7 = Swt_Ip_sBase[Instance_6(D)];
  # DEBUG Base => Base_7
  # DEBUG BEGIN_STMT
  _1 = Instance_6(D) <= 2;
  DevAssert (_1);
  # DEBUG BEGIN_STMT
  _2 = Wdg_Ip_abStatus[Instance_6(D)];
  if (_2 != 0)
    goto <bb 3>; [50.00%]
  else
    goto <bb 7>; [50.00%]

  <bb 3> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_7
  # DEBUG INLINE_ENTRY Swt_Ip_GetIntFlag
  # DEBUG BEGIN_STMT
  _10 ={v} MEM[(const struct SWT_Type *)Base_7].IR;
  _11 = (_Bool) _10;
  # DEBUG Base => NULL
  if (_11 != 0)
    goto <bb 4>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 4> [local count: 268435456]:
  # DEBUG Base => Base_7
  # DEBUG INLINE_ENTRY Swt_Ip_IsIntEnabled
  # DEBUG BEGIN_STMT
  _12 ={v} MEM[(const struct SWT_Type *)Base_7].CR;
  _13 = _12 & 64;
  # DEBUG Base => NULL
  if (_13 != 0)
    goto <bb 5>; [50.00%]
  else
    goto <bb 8>; [50.00%]

  <bb 5> [local count: 134217728]:
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_7
  # DEBUG INLINE_ENTRY Swt_Ip_ClearIntFlag
  # DEBUG BEGIN_STMT
  _14 ={v} Base_7->IR;
  _15 = _14 & 1;
  Base_7->IR ={v} _15;
  # DEBUG Base => NULL
  # DEBUG BEGIN_STMT
  _3 = Swt_Ip_apCallbackPtr[Instance_6(D)];
  if (_3 != 0B)
    goto <bb 6>; [70.00%]
  else
    goto <bb 8>; [30.00%]

  <bb 6> [local count: 93952410]:
  # DEBUG BEGIN_STMT
  _3 ();
  goto <bb 8>; [100.00%]

  <bb 7> [local count: 536870913]:
  # DEBUG BEGIN_STMT
  # DEBUG Base => Base_7
  # DEBUG INLINE_ENTRY Swt_Ip_ClearIntFlag
  # DEBUG BEGIN_STMT
  _16 ={v} Base_7->IR;
  _17 = _16 & 1;
  Base_7->IR ={v} _17;

  <bb 8> [local count: 1073741824]:
  # DEBUG Base => NULL
  return;

}


